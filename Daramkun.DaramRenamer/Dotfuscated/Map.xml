<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2016-03-09T13:20:59</timestamp>
        <product version="5.19.0.2930" user="Jaeyeon Jin" serial="187502-391">Dotfuscator and Analytics Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>Daramkun.DaramRenamer.exe</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;</name>
                <newname>i5</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(string)</signature>
                        <name>ComputeStringHash</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>01A54B50ABE0295BD78A34A60A28F1DA9727CFF1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=18</signature>
                        <name>059A17C00C29A5148C19E7BEA53807B5A99A5421</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>14814C40047B876CF455FB931EA46478EAE51E70</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=52</signature>
                        <name>24EB5D5D1C539AF5843EE03B0626B11491B117B9</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>24FAED8EFF1B82217191988C79DCE0600F8C0040</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>25F02FD46A5DAEDDDC741B1A0AC47A9AF0FD87A0</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>284FBF571C31B2B5CD3C8D9FF733C2462FF728EF</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=48</signature>
                        <name>2F6400310EA225120F9FFE372BC9BCCF97BAED19</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=48</signature>
                        <name>3F877AA1F0B8AE5FEF6306D12222AB80B4A760A6</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>4CAECE539B039B16E16206EA2478F8C5FFB2CA05</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=3</signature>
                        <name>5F9081627CC6F7C7E2332248E3845196E486A365</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1024</signature>
                        <name>63E9EBF6EEB814FC6AC2677ADF6EA944403C9636</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</signature>
                        <name>6F99C138968FACDD5BA29CB7DF6DFBA0C49F1368</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=384</signature>
                        <name>7A17FB02141F442D66339D3B4871EC28AFF41477</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=22</signature>
                        <name>80E8E7688678E77CF938A293AE9EA6D300543394</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=72</signature>
                        <name>83E2C4D6F81FB08434DCCCD8302828FDF844BCE0</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>8C11BCD277C7643CE7520C8CB2A14F54A72C875B</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>96AB3A645C00FA3E6C5A1802B2433C9EFD7E23F5</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>98DCD90D4EE632B6988A72C5C7CF246B11D1F9DB</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=258</signature>
                        <name>9E403CE45FFCB8F09F0F2A79E9B0138F57225BC2</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=256</signature>
                        <name>A1FD40BB0F3CD18BDD3274A2209B0FC37D325A09</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>A5E164FC0F7095B778B1D44F13FC94E1E2F4A0F9</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=60</signature>
                        <name>B720069B0133E1C1C57EB13E708EBB2A370C7710</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>C50E609ED4F7707A880B864F7FEA0F08B9B87EED</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=256</signature>
                        <name>F675205A36F4EA5A9737052C22C0F1B25B20F1CC</name>
                        <newname>y</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=1024</name>
                <newname>i5/l</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=18</name>
                <newname>i5/b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=22</name>
                <newname>i5/c</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=256</name>
                <newname>i5/i</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=258</name>
                <newname>i5/j</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=3</name>
                <newname>i5/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=32</name>
                <newname>i5/d</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=384</name>
                <newname>i5/k</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=48</name>
                <newname>i5/e</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=52</name>
                <newname>i5/f</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=60</name>
                <newname>i5/g</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;/__StaticArrayInitTypeSize=72</name>
                <newname>i5/h</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.App</name>
                <newname>i2</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnActivated</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.ExitEventArgs)</signature>
                        <name>OnExit</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.StartupEventArgs)</signature>
                        <name>OnStartup</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>args</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.App/&lt;&gt;c</name>
                <newname>i2/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.UnhandledExceptionEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__0_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.App/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.UnhandledExceptionEventHandler</signature>
                        <name>&lt;&gt;9__0_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Casecast</name>
                <newname>ir</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.Casecast</signature>
                        <name>AllToLowercase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.Casecast</signature>
                        <name>AllToUppercase</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.Casecast</signature>
                        <name>UppercaseFirstLetter</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.CasecastBW</name>
                <newname>is</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.CasecastBW</signature>
                        <name>AllToLowercase</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.CasecastBW</signature>
                        <name>AllToUppercase</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.DateType</name>
                <newname>it</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.DateType</signature>
                        <name>AccessedDate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DateType</signature>
                        <name>CreationDate</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DateType</signature>
                        <name>ModifiedDate</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DateType</signature>
                        <name>Now</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.DocumentTag</name>
                <newname>iv</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.DocumentTag</signature>
                        <name>Author</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DocumentTag</signature>
                        <name>Title</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.ErrorCode</name>
                <newname>ij</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>DirectoryNotFound</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>FailedOverwrite</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>IOError</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>NoError</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>PathTooLong</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>UnauthorizedAccess</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.ErrorCode</signature>
                        <name>Unknown</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.FileInfo</name>
                <methodlist>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Changed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(bool, Daramkun.DaramRenamer.ErrorCode&amp;)</signature>
                        <name>Copy</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>char(char)</signature>
                        <name>GetInvalidToValid</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(bool, Daramkun.DaramRenamer.ErrorCode&amp;)</signature>
                        <name>Move</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>PC</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReplaceInvalidFilenameCharacters</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReplaceInvalidPathCharacters</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.FileInfo&gt;)</signature>
                        <name>Sort</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChangedFilename</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChangedFullPath</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChangedPath</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalFilename</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalFullPath</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_OriginalPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ChangedFilename</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ChangedPath</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_OriginalFullPath</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>changedFilename</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>changedPath</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>originalFullPath</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ChangedFilename</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ChangedFullPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ChangedPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalFilename</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalFullPath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>OriginalPath</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>a</newname>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>Daramkun.DaramRenamer.GlobalCulture</name>
                <newname>il</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Author</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Contact</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>Contents</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Culture</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Target</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.GlobalizationContainer</name>
                <newname>im</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;Daramkun.DaramRenamer.GlobalCulture&gt;</signature>
                        <name>Languages</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.GlobalizedAttribute</name>
                <newname>in</newname>
                <methodlist>
                    <method>
                        <signature>void(string, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Field</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Order</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Field</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Order</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Field&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Order&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Globalizer</name>
                <newname>io</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.GlobalCulture()</signature>
                        <name>get_Culture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>get_Strings</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Globalization.CultureInfo,Daramkun.DaramRenamer.GlobalCulture&gt;</signature>
                        <name>Cultures</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Namespace</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Target</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;()</signature>
                        <name>Strings</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.HashType</name>
                <newname>iw</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>MD5</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>SHA1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>SHA256</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>SHA384</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>SHA512</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.IProcessor</name>
                <newname>ix</newname>
                <methodlist>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow</name>
                <newname>i3</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;Menu_System_Apply&gt;b__33_1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddDate_Click</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddDocumentTag_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddExtensionAutomatically_Click</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddExtension_Click</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddFileHash_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddIndexNumbers_Click</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>AddMediaTag_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>CastcastExtension_Click</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Castcast_Click</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ChangeExtension_Click</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ChangePath_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;System.Nullable`1&lt;bool&gt;&gt;(bool)</signature>
                        <name>CheckUpdate</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>ClosePopup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>ComboBox_SelectionChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ConcatText_Click</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>DeleteBlock_Click</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>DeleteDate_Click</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>DeleteText_Click</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>DeleteWithoutNumbers_Click</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>IncreaseDecreaseDate_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>IncreaseDecreaseNumbers_Click</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Item_DoubleClick</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>MatchingNumberCount_Click</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Apply</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_CheckUpdate</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Clear</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Donate</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Feedback</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_ItemDown</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_ItemSort</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_ItemUp</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Open</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Redo</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Menu_System_Undo</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogResult(string, string, TaskDialogInterop.VistaTaskDialogIcon, string[])</signature>
                        <name>MessageBox</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>MovePathRelative_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>RemoveExtension_Click</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ReplacePlainText_Click</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>ReplaceRegex_Click</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(object[])</signature>
                        <name>ShowPopup</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>SubWindow_CancelButtonClicked</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>SubWindow_OKButtonClicked</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Substring_Click</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Trimming_Click</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandApplyCanc_Executed</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandApplyFile_Executed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandClearList_Executed</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandItemsSort_Executed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandLowerItem_Executed</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandOpenFiles_Executed</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandRedoWorks_Executed</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandUndoWorks_Executed</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.ExecutedRoutedEventArgs)</signature>
                        <name>commandUpperItem_Executed</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.FileInfo&gt;()</signature>
                        <name>get_Files</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DragEventArgs)</signature>
                        <name>listViewFiles_DragEnter</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.DragEventArgs)</signature>
                        <name>listViewFiles_Drop</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>listViewFiles_KeyUp</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandApplyFile</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandClearList</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandItemsSort</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandLowerItem</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandOpenFiles</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandRedoWorks</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandUndoWorks</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.RoutedCommand</signature>
                        <name>CommandUpperItem</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.FileInfo&gt;</signature>
                        <name>current</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ListView</signature>
                        <name>listViewFiles</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ComboBox</signature>
                        <name>optionRenameMode</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>overlayWindowContainer</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>overlayWindowGrid</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ProgressBar</signature>
                        <name>progressBar</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TabControl</signature>
                        <name>tabControl</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.UndoManager`1&lt;System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.FileInfo&gt;&gt;</signature>
                        <name>undoManager</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow/&lt;&gt;c</name>
                <newname>i3/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;AddExtensionAutomatically_Click&gt;b__54_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;DeleteText_Click&gt;b__50_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;DeleteWithoutNumbers_Click&gt;b__58_0</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;Menu_System_Open&gt;b__31_0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;RemoveExtension_Click&gt;b__55_0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>&lt;listViewFiles_Drop&gt;b__29_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.MainWindow/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__29_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;string,string&gt;</signature>
                        <name>&lt;&gt;9__31_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Daramkun.DaramRenamer.FileInfo&gt;</signature>
                        <name>&lt;&gt;9__50_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Daramkun.DaramRenamer.FileInfo&gt;</signature>
                        <name>&lt;&gt;9__54_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Daramkun.DaramRenamer.FileInfo&gt;</signature>
                        <name>&lt;&gt;9__55_0</name>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;Daramkun.DaramRenamer.FileInfo&gt;</signature>
                        <name>&lt;&gt;9__58_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow/&lt;&gt;c__DisplayClass25_0</name>
                <newname>i3/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;ClosePopup&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.IProcessor</signature>
                        <name>processor</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow/&lt;&gt;c__DisplayClass33_0</name>
                <newname>i3/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>&lt;Menu_System_Apply&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.MainWindow</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>failed</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow/&lt;CheckUpdate&gt;d__26</name>
                <newname>i3/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.Nullable`1&lt;bool&gt;&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Net.WebResponse&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>messageShow</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MainWindow/&lt;Menu_System_CheckUpdate&gt;d__39</name>
                <newname>i3/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MainWindow</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncVoidMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.Nullable`1&lt;bool&gt;&gt;</signature>
                        <name>&lt;&gt;u__1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.MediaTag</name>
                <newname>iu</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioAlbum</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioAlbumArtists</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioBitrate</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioBitsPerSample</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioChannels</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioCodec</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioComposers</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioConductor</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioCopyright</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioDisc</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioDiscCount</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioDuration</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioGenres</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioPerformers</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioSamplerate</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioTitle</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioTrack</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioTrackCount</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>AudioYear</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>ImageCodec</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>ImageHeight</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>ImageQuality</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>ImageWidth</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoCodec</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoCopyright</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoDuration</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoGenres</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoHeight</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoTitle</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoWidth</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>VideoYear</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.OnePointPosition</name>
                <newname>iq</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>EndPoint</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>StartPoint</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.OpenDocumentTag.File</name>
                <newname>i4</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Author</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Author</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Author&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Title&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Optionizer</name>
                <newname>iz</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticFilenameFix</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticListCleaning</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HardwareAccelerationMode</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OptionSaveToRegistry</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Overwrite</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.RenameMode()</signature>
                        <name>get_RenameMode</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RenameModeInteger</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.Optionizer()</signature>
                        <name>get_SharedOptionizer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticFilenameFix</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticListCleaning</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HardwareAccelerationMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OptionSaveToRegistry</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Overwrite</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.RenameMode)</signature>
                        <name>set_RenameMode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RenameModeInteger</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.Optionizer)</signature>
                        <name>set_SharedOptionizer</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AutomaticFilenameFix&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;AutomaticListCleaning&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OptionSaveToRegistry&gt;k__BackingField</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Overwrite&gt;k__BackingField</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.RenameMode</signature>
                        <name>&lt;RenameMode&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.Optionizer</signature>
                        <name>&lt;SharedOptionizer&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Filename</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Key</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>hwAccelMode</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.Serialization.Json.DataContractJsonSerializer</signature>
                        <name>serializer</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Daramkun.DaramRenamer.Optionizer()</signature>
                        <name>SharedOptionizer</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.ParallelSort</name>
                <newname>ik</newname>
                <methodlist>
                    <method>
                        <arity>1</arity>
                        <signature>int32(System.Collections.ObjectModel.ObservableCollection`1&lt;!!0&gt;, int32, int32)</signature>
                        <name>Partition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;!!0&gt;)</signature>
                        <name>QuicksortParallel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;!!0&gt;, int32, int32)</signature>
                        <name>QuicksortParallel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>void(System.Collections.ObjectModel.ObservableCollection`1&lt;!!0&gt;, int32, int32)</signature>
                        <name>Swap</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>Daramkun.DaramRenamer.ParallelSort/&lt;&gt;c__DisplayClass1_0`1</name>
                <newname>ik/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;!0&gt;</signature>
                        <name>arr</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>left</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>right</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>Daramkun.DaramRenamer.ParallelSort/&lt;&gt;c__DisplayClass1_1`1</name>
                <newname>ik/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;QuicksortParallel&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;QuicksortParallel&gt;b__1</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.ParallelSort/&lt;&gt;c__DisplayClass1_0`1&lt;!0&gt;</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pivot</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Position</name>
                <newname>ip</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.Position</signature>
                        <name>BothPoint</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.Position</signature>
                        <name>EndPoint</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.Position</signature>
                        <name>StartPoint</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.BatchProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.IProcessor&gt;()</signature>
                        <name>get_Processors</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.IProcessor&gt;</signature>
                        <name>&lt;Processors&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Collections.ObjectModel.ObservableCollection`1&lt;Daramkun.DaramRenamer.IProcessor&gt;()</signature>
                        <name>Processors</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Date.AddDateProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Format</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.DateType()</signature>
                        <name>get_Type</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Format</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.DateType)</signature>
                        <name>set_Type</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Format&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DateType</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Format</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.DateType()</signature>
                        <name>Type</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Extension.AddExtensionAutomatedProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Extension.AddExtensionProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Extension</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Extension&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Extension</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Extension.CasecastExtensionProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.CasecastBW()</signature>
                        <name>get_Casecast</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.CasecastBW)</signature>
                        <name>set_Casecast</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.CasecastBW</signature>
                        <name>&lt;Casecast&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.CasecastBW()</signature>
                        <name>Casecast</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Extension.DeleteExtensionProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Extension.ReplaceExtensionProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Extension</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Extension&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Extension</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.FilePath.ChangePathProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.IO.DirectoryInfo()</signature>
                        <name>get_Path</name>
                    </method>
                    <method>
                        <signature>void(System.IO.DirectoryInfo)</signature>
                        <name>set_Path</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.DirectoryInfo</signature>
                        <name>&lt;Path&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.IO.DirectoryInfo()</signature>
                        <name>Path</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.CasecastProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.Casecast()</signature>
                        <name>get_Casecast</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.Casecast)</signature>
                        <name>set_Casecast</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.Casecast</signature>
                        <name>&lt;Casecast&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.Casecast()</signature>
                        <name>Casecast</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.ConcatenateProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IncludeExtensions&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.DeleteBlockProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DeleteAllBlocks</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_EndText</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_StartText</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DeleteAllBlocks</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_EndText</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_StartText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;DeleteAllBlocks&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;EndText&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IncludeExtensions&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;StartText&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DeleteAllBlocks</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>EndText</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>StartText</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.DeleteFilenameProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.ReplacePlainProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Original</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Replace</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Original</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Replace</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IncludeExtensions&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Original&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Replace&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Original</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Replace</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.ReplaceRegexpProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FormatString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>System.Text.RegularExpressions.Regex()</signature>
                        <name>get_RegularExpression</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FormatString</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>void(System.Text.RegularExpressions.Regex)</signature>
                        <name>set_RegularExpression</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FormatString&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IncludeExtensions&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>&lt;RegularExpression&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FormatString</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeExtensions</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>System.Text.RegularExpressions.Regex()</signature>
                        <name>RegularExpression</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.SubstringProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_StartIndex</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IncludeExtensions</name>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_Length</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_StartIndex</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IncludeExtensions&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;</signature>
                        <name>&lt;Length&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;StartIndex&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IncludeExtensions</name>
                    </property>
                    <property>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>unsigned int32()</signature>
                        <name>StartIndex</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Filename.TrimmingProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.Position()</signature>
                        <name>get_TrimPosition</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.Position)</signature>
                        <name>set_TrimPosition</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.Position</signature>
                        <name>&lt;TrimPosition&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.Position()</signature>
                        <name>TrimPosition</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.ManualEditProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChangeName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ChangePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.FileInfo()</signature>
                        <name>get_ProcessingFileInfo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ChangeName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ChangePath</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>set_ProcessingFileInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ChangeName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ChangePath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.FileInfo</signature>
                        <name>&lt;ProcessingFileInfo&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ChangeName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ChangePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.FileInfo()</signature>
                        <name>ProcessingFileInfo</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Number.AddIndexNumberProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Number.DeleteWithoutNumbersProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Number.IncreaseDecreaseNumbersProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Count</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Count&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Number.NumberCountMatchProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Count</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Count&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>unsigned int32()</signature>
                        <name>Count</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Tag.AddDocumentTagProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.DocumentTag()</signature>
                        <name>get_Tag</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.DocumentTag)</signature>
                        <name>set_Tag</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.DocumentTag</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.DocumentTag()</signature>
                        <name>Tag</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Tag.AddHashProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.HashType()</signature>
                        <name>get_HashType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.HashType)</signature>
                        <name>set_HashType</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.HashType</signature>
                        <name>&lt;HashType&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.HashType()</signature>
                        <name>HashType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Processors.Tag.AddMediaTagProcessor</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(Daramkun.DaramRenamer.FileInfo)</signature>
                        <name>Process</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Arguments</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CannotMultithreadProcess</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>get_Position</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.MediaTag()</signature>
                        <name>get_Tag</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Arguments</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.OnePointPosition)</signature>
                        <name>set_Position</name>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.MediaTag)</signature>
                        <name>set_Tag</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Arguments&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.OnePointPosition</signature>
                        <name>&lt;Position&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.MediaTag</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Arguments</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CannotMultithreadProcess</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.OnePointPosition()</signature>
                        <name>Position</name>
                    </property>
                    <property>
                        <signature>Daramkun.DaramRenamer.MediaTag()</signature>
                        <name>Tag</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Daramkun.DaramRenamer.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.RenameMode</name>
                <newname>iy</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.RenameMode</signature>
                        <name>Copy</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>Daramkun.DaramRenamer.RenameMode</signature>
                        <name>Move</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow</name>
                <newname>i0</newname>
                <methodlist>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.IProcessor)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>Cancel_Button</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>OK_Button</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>add_CancelButtonClicked</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>add_OKButtonClicked</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>Daramkun.DaramRenamer.IProcessor()</signature>
                        <name>get_Processor</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>remove_CancelButtonClicked</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>remove_OKButtonClicked</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(Daramkun.DaramRenamer.IProcessor)</signature>
                        <name>set_Processor</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.IProcessor</signature>
                        <name>&lt;Processor&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEventHandler</signature>
                        <name>CancelButtonClicked</name>
                    </field>
                    <field>
                        <signature>System.Windows.RoutedEventHandler</signature>
                        <name>OKButtonClicked</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>contentGrid</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>overlayWindowTitle</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c</name>
                <newname>i0/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(System.Collections.Generic.KeyValuePair`2&lt;unsigned int32,System.Reflection.PropertyInfo&gt;)</signature>
                        <name>&lt;.ctor&gt;b__10_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.TextCompositionEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__10_2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.TextCompositionEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__10_7</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Collections.Generic.KeyValuePair`2&lt;unsigned int32,System.Reflection.PropertyInfo&gt;,unsigned int32&gt;</signature>
                        <name>&lt;&gt;9__10_0</name>
                    </field>
                    <field>
                        <signature>System.Windows.Input.TextCompositionEventHandler</signature>
                        <name>&lt;&gt;9__10_2</name>
                    </field>
                    <field>
                        <signature>System.Windows.Input.TextCompositionEventHandler</signature>
                        <name>&lt;&gt;9__10_7</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</name>
                <newname>i0/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__11</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__12</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__13</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__14</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__15</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__16</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__18</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__19</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__20</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__21</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.FrameworkElement</signature>
                        <name>control</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Reflection.PropertyInfo</signature>
                        <name>prop</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_1</name>
                <newname>i0/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.TextChangedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__3</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__4</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__5</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>text</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_2</name>
                <newname>i0/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__6</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</signature>
                        <name>CS$&lt;&gt;8__locals1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.CheckBox</signature>
                        <name>check</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_3</name>
                <newname>i0/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__10</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.TextChangedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__8</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__9</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>text</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_4</name>
                <newname>i0/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__17</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</signature>
                        <name>CS$&lt;&gt;8__locals2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBox</signature>
                        <name>textBox</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_5</name>
                <newname>i0/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__22</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</signature>
                        <name>CS$&lt;&gt;8__locals3</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ComboBox</signature>
                        <name>comboBox</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_6</name>
                <newname>i0/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__23</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</signature>
                        <name>CS$&lt;&gt;8__locals4</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ComboBox</signature>
                        <name>comboBox</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_7</name>
                <newname>i0/h</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Controls.SelectionChangedEventArgs)</signature>
                        <name>&lt;.ctor&gt;b__24</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>Daramkun.DaramRenamer.SubWindow/&lt;&gt;c__DisplayClass10_0</signature>
                        <name>CS$&lt;&gt;8__locals5</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ComboBox</signature>
                        <name>comboBox</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>Daramkun.DaramRenamer.UndoManager`1</name>
                <newname>i1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearAll</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearRedoStack</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearUndoStack</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>LoadFromRedoStack</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>LoadFromUndoStack</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>SaveToRedoStack</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>SaveToUndoStack</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRedoStackEmpty</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsUndoStackEmpty</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Runtime.Serialization.Formatters.Binary.BinaryFormatter</signature>
                        <name>bf</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;unsigned int8[]&gt;</signature>
                        <name>redoStack</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Stack`1&lt;unsigned int8[]&gt;</signature>
                        <name>undoStack</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Aac.AudioHeader</name>
                <newname>ig</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Aac.AudioHeader&amp;, TagLib.File, int64)</signature>
                        <name>Find</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Aac.AudioHeader&amp;, TagLib.File, int64, int32)</signature>
                        <name>Find</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>SetStreamLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Aac.AudioHeader</signature>
                        <name>Unknown</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>audiobitrate</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>audiochannels</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>audiosamplerate</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>channels</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>duration</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>sample_rates</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Aac.BitStream</name>
                <newname>ih</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ReadInt32</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>bitindex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.BitArray</signature>
                        <name>bits</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Aac.File</name>
                <newname>ii</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Aac.AudioHeader</signature>
                        <name>first_header</name>
                        <newname>ax</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Aiff.File</name>
                <newname>ie</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(bool, TagLib.ReadStyle, unsigned int32&amp;, int64&amp;, int64&amp;)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>CommIdentifier</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>ID3Identifier</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>SoundIdentifier</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>header_block</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Tag</signature>
                        <name>tag</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Aiff.StreamHeader</name>
                <newname>if</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>ey</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>bits_per_sample</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>channels</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>sample_rate</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>total_frames</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.CompressionLevel</name>
                <newname>ib</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>ExtraHigh</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>Fast</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>High</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>Insane</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>Normal</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.File</name>
                <newname>h6</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>header_block</name>
                        <newname>av</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.Footer</name>
                <newname>h8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ape.Footer)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool)</signature>
                        <name>Render</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderFooter</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderHeader</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_CompleteTagSize</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ape.FooterFlags()</signature>
                        <name>get_Flags</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ItemCount</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TagSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Version</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ape.Footer, TagLib.Ape.Footer)</signature>
                        <name>op_Equality</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ape.Footer, TagLib.Ape.Footer)</signature>
                        <name>op_Inequality</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Ape.FooterFlags)</signature>
                        <name>set_Flags</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_ItemCount</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TagSize</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.FooterFlags</signature>
                        <name>flags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>item_count</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>tag_size</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>version</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.FooterFlags</name>
                <newname>h7</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Ape.FooterFlags</signature>
                        <name>FooterAbsent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.FooterFlags</signature>
                        <name>HeaderPresent</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.FooterFlags</signature>
                        <name>IsHeader</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.Item</name>
                <newname>ia</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Ape.Item)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.StringCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Ape.Item()</signature>
                        <name>Clone</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>Parse</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>ToStringArray</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Key</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ReadOnly</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ape.ItemType()</signature>
                        <name>get_Type</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Value</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ReadOnly</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Ape.ItemType)</signature>
                        <name>set_Type</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>data</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>key</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>read_only</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size_on_disk</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>text</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.ItemType</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.ItemType</name>
                <newname>h9</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Ape.ItemType</signature>
                        <name>Binary</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.ItemType</signature>
                        <name>Locator</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.ItemType</signature>
                        <name>Text</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.StreamHeader</name>
                <newname>ic</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>ey</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ape.CompressionLevel()</signature>
                        <name>get_Compression</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Version</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>bits_per_sample</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>blocks_per_frame</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>channels</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.CompressionLevel</signature>
                        <name>compression_level</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>final_frame_blocks</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>sample_rate</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>total_frames</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>version</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.Tag</name>
                <newname>id</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>AddValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, unsigned int32, unsigned int32)</signature>
                        <name>AddValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag, bool)</signature>
                        <name>CopyTo</name>
                        <newname>fx</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>TagLib.Ape.Item(string)</signature>
                        <name>GetItem</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetItemAsString</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>GetItemAsStrings</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(string, int32)</signature>
                        <name>GetItemAsUInt32</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>GetItemIndex</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>HasItem</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>Read</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveItem</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Ape.Item)</signature>
                        <name>SetItem</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetValue</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>SetValue</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, unsigned int32, unsigned int32)</signature>
                        <name>SetValue</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HeaderPresent</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_HeaderPresent</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>nv</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.Footer</signature>
                        <name>footer</name>
                        <newname>nt</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Ape.Item&gt;</signature>
                        <name>items</name>
                        <newname>nu</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>picture_item_names</name>
                        <newname>ns</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ape.Tag/&lt;GetEnumerator&gt;d__27</name>
                <newname>id/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ape.Tag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Ape.Item&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.ContentDescriptionObject</name>
                <newname>hq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Author</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Rating</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Author</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Rating</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>author</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>copyright</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>rating</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.ContentDescriptor</name>
                <newname>hs</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, unsigned int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Asf.File)</signature>
                        <name>Parse</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ToBool</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>ToByteVector</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ToDWord</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>ToQWord</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ToWord</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.DataType()</signature>
                        <name>get_Type</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>byteValue</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>longValue</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strValue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.DataType</name>
                <newname>hr</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>Bool</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>Bytes</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>DWord</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>Guid</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>QWord</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>Unicode</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>Word</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.DescriptionRecord</name>
                <newname>ht</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, System.Guid)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, unsigned int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Asf.File)</signature>
                        <name>Parse</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ToBool</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>ToByteVector</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ToDWord</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>ToGuid</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>ToQWord</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ToWord</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_LanguageListIndex</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_StreamNumber</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.DataType()</signature>
                        <name>get_Type</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>byteValue</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>guidValue</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>lang_list_index</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>longValue</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strValue</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>stream_number</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DataType</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.ExtendedContentDescriptionObject</name>
                <newname>hu</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.ContentDescriptor)</signature>
                        <name>AddDescriptor</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.ContentDescriptor&gt;(string[])</signature>
                        <name>GetDescriptors</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.ContentDescriptor&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveDescriptors</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>void(string, TagLib.Asf.ContentDescriptor[])</signature>
                        <name>SetDescriptors</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Asf.ContentDescriptor&gt;</signature>
                        <name>descriptors</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.ExtendedContentDescriptionObject/&lt;GetDescriptors&gt;d__7</name>
                <newname>hu/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.ContentDescriptor&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Asf.ContentDescriptor&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.ContentDescriptor()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Asf.ContentDescriptor&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.ContentDescriptor</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__names</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.ExtendedContentDescriptionObject</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Asf.ContentDescriptor&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;name&gt;5__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>names</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.File</name>
                <newname>hv</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadDWord</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>ReadGuid</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.Object(int64)</signature>
                        <name>ReadObject</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.Object&gt;(unsigned int32, int64)</signature>
                        <name>ReadObjects</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>ReadQWord</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>ReadUnicode</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ReadWord</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Asf.Tag</signature>
                        <name>asf_tag</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>au</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.File/&lt;ReadObjects&gt;d__18</name>
                <newname>hv/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.Object&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Asf.Object&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.Object()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Asf.Object&gt;.get_Current</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.Object</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;&gt;3__count</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;&gt;3__position</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.File</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;i&gt;5__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>count</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>position</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.FilePropertiesObject</name>
                <newname>hw</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationDate</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_DataPacketsCount</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_FileId</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_FileSize</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Flags</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MaximumBitrate</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MaximumDataPacketSize</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MinimumDataPacketSize</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_PlayDuration</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Preroll</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_SendDuration</name>
                        <newname>ao</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>creation_date</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>data_packets_count</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>file_id</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>file_size</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>maximum_bitrate</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>maximum_data_packet_size</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>minimum_data_packet_size</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>play_duration</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>preroll</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>send_duration</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.Guid</name>
                <newname>hx</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfAudioMedia</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfContentDescriptionObject</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfExtendedContentDescriptionObject</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfFilePropertiesObject</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfHeaderExtensionObject</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfHeaderObject</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfMetadataLibraryObject</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfPaddingObject</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfReserved1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfStreamPropertiesObject</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsfVideoMedia</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.HeaderExtensionObject</name>
                <newname>hy</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.Object)</signature>
                        <name>AddObject</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.Object)</signature>
                        <name>AddUniqueObject</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.Object&gt;()</signature>
                        <name>get_Children</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Asf.Object&gt;</signature>
                        <name>children</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.HeaderObject</name>
                <newname>hz</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.Object)</signature>
                        <name>AddObject</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.Object)</signature>
                        <name>AddUniqueObject</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveContentDescriptors</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.Object&gt;()</signature>
                        <name>get_Children</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.HeaderExtensionObject()</signature>
                        <name>get_Extension</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasContentDescriptors</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>al</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Asf.Object&gt;</signature>
                        <name>children</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>reserved</name>
                        <newname>t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.MetadataLibraryObject</name>
                <newname>h0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.DescriptionRecord)</signature>
                        <name>AddRecord</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.DescriptionRecord&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.DescriptionRecord&gt;(unsigned int16, unsigned int16, string[])</signature>
                        <name>GetRecords</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string)</signature>
                        <name>RemoveRecords</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, string, TagLib.Asf.DescriptionRecord[])</signature>
                        <name>SetRecords</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Asf.DescriptionRecord&gt;</signature>
                        <name>records</name>
                        <newname>x</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.MetadataLibraryObject/&lt;GetRecords&gt;d__7</name>
                <newname>h0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.DescriptionRecord&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Asf.DescriptionRecord&gt;.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.DescriptionRecord()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Asf.DescriptionRecord&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DescriptionRecord</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;&gt;3__languageListIndex</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;3__names</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;&gt;3__streamNumber</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.MetadataLibraryObject</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Asf.DescriptionRecord&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.DescriptionRecord</signature>
                        <name>&lt;rec&gt;5__1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>languageListIndex</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>names</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>streamNumber</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.Object</name>
                <newname>h1</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>Render</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int32)</signature>
                        <name>RenderDWord</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int64)</signature>
                        <name>RenderQWord</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string)</signature>
                        <name>RenderUnicode</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int16)</signature>
                        <name>RenderWord</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_Guid</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_OriginalSize</name>
                        <newname>av</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>id</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>size</name>
                        <newname>z</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.PaddingObject</name>
                <newname>h2</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Size</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_Size</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>size</name>
                        <newname>aa</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.StreamPropertiesObject</name>
                <newname>h3</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>TagLib.ICodec()</signature>
                        <name>get_Codec</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_ErrorCorrectionData</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_ErrorCorrectionType</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Flags</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>System.Guid()</signature>
                        <name>get_StreamType</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_TimeOffset</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_TypeSpecificData</name>
                        <newname>ao</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>error_correction_data</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>error_correction_type</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>flags</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>reserved</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>stream_type</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>time_offset</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>type_specific_data</name>
                        <newname>ag</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.Tag</name>
                <newname>h4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.HeaderObject)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Asf.ContentDescriptor)</signature>
                        <name>AddDescriptor</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string(string[])</signature>
                        <name>GetDescriptorString</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string[](string[])</signature>
                        <name>GetDescriptorStrings</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Asf.ContentDescriptor&gt;(string[])</signature>
                        <name>GetDescriptors</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Asf.ContentDescriptor&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>TagLib.IPicture(TagLib.ByteVector)</signature>
                        <name>PictureFromData</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.IPicture)</signature>
                        <name>PictureToData</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveDescriptors</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>SetDescriptorString</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string[], string[])</signature>
                        <name>SetDescriptorStrings</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, TagLib.Asf.ContentDescriptor[])</signature>
                        <name>SetDescriptors</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>SplitAndClean</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.ContentDescriptionObject()</signature>
                        <name>get_ContentDescriptionObject</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.ExtendedContentDescriptionObject()</signature>
                        <name>get_ExtendedContentDescriptionObject</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>TagLib.Asf.MetadataLibraryObject()</signature>
                        <name>get_MetadataLibraryObject</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Asf.ContentDescriptionObject</signature>
                        <name>description</name>
                        <newname>ms</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.ExtendedContentDescriptionObject</signature>
                        <name>ext_description</name>
                        <newname>mt</newname>
                    </field>
                    <field>
                        <signature>TagLib.Asf.MetadataLibraryObject</signature>
                        <name>metadata_library</name>
                        <newname>mu</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Asf.UnknownObject</name>
                <newname>h5</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Asf.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>fy</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>aj</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>ai</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Audible.File</name>
                <newname>ho</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>OffsetToEndTagPointer</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>TagBlockOffset</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.Tag</signature>
                        <name>tag</name>
                        <newname>ar</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Audible.Tag</name>
                <newname>hp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Audible.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>getTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Author</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Narrator</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>setTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.Generic.KeyValuePair`2&lt;string,string&gt;&gt;</signature>
                        <name>tags</name>
                        <newname>mk</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.ByteVector</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32)</signature>
                        <name>ContainsAt</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32, int32)</signature>
                        <name>ContainsAt</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32, int32, int32)</signature>
                        <name>ContainsAt</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector)</signature>
                        <name>EndsWith</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>EndsWithPartialMatch</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector)</signature>
                        <name>Equals</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>Find</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector, int32)</signature>
                        <name>Find</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector, int32, int32)</signature>
                        <name>Find</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.File/IFileAbstraction)</signature>
                        <name>FromFile</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.File/IFileAbstraction, unsigned int8[]&amp;, bool)</signature>
                        <name>FromFile</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32)</signature>
                        <name>FromInt</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32, bool)</signature>
                        <name>FromInt</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string)</signature>
                        <name>FromPath</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string, unsigned int8[]&amp;, bool)</signature>
                        <name>FromPath</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(System.IO.Stream)</signature>
                        <name>FromStream</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(System.IO.Stream, unsigned int8[]&amp;, bool)</signature>
                        <name>FromStream</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string)</signature>
                        <name>FromString</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string, TagLib.StringType)</signature>
                        <name>FromString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string, TagLib.StringType, int32)</signature>
                        <name>FromString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string, int32)</signature>
                        <name>FromString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int32)</signature>
                        <name>FromUInt</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int32, bool)</signature>
                        <name>FromUInt</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int64)</signature>
                        <name>FromULong</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int64, bool)</signature>
                        <name>FromULong</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int16)</signature>
                        <name>FromUShort</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int16, bool)</signature>
                        <name>FromUShort</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;unsigned int8&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.ByteVector)</signature>
                        <name>Insert</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8[])</signature>
                        <name>Insert</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32)</signature>
                        <name>Mid</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32, int32)</signature>
                        <name>Mid</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>RFind</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector, int32)</signature>
                        <name>RFind</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector, int32, int32)</signature>
                        <name>RFind</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>RemoveRange</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32)</signature>
                        <name>Resize</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32, unsigned int8)</signature>
                        <name>Resize</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector)</signature>
                        <name>StartsWith</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Text.Encoding(TagLib.StringType, TagLib.ByteVector)</signature>
                        <name>StringTypeToEncoding</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.StringType)</signature>
                        <name>TextDelimiter</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ToDouble</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>float64(bool)</signature>
                        <name>ToDouble</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>ToFloat</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>float32(bool)</signature>
                        <name>ToFloat</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ToInt</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>ToInt</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(TagLib.StringType)</signature>
                        <name>ToString</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.StringType, int32)</signature>
                        <name>ToString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.StringType, int32, int32)</signature>
                        <name>ToString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.StringType, int32)</signature>
                        <name>ToStrings</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.StringType, int32, int32)</signature>
                        <name>ToStrings</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ToUInt</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(bool)</signature>
                        <name>ToUInt</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>ToULong</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>unsigned int64(bool)</signature>
                        <name>ToULong</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ToUShort</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>unsigned int16(bool)</signature>
                        <name>ToUShort</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Checksum</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_Data</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFixedSize</name>
                        <newname>d1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSynchronized</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SyncRoot</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseBrokenLatin1Behavior</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_Addition</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_Equality</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_GreaterThan</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_GreaterThanOrEqual</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string)</signature>
                        <name>op_Implicit</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>op_Implicit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8[])</signature>
                        <name>op_Implicit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_Inequality</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_LessThan</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>op_LessThanOrEqual</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8)</signature>
                        <name>set_Item</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseBrokenLatin1Behavior</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>crc_table</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;unsigned int8&gt;</signature>
                        <name>data</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Text.Encoding</signature>
                        <name>last_utf16_encoding</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>td1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>td2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>use_broken_latin1</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TagLib.ByteVectorCollection</name>
                <newname>a9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;TagLib.ByteVector&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, bool)</signature>
                        <name>SortedInsert</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVectorCollection(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>Split</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVectorCollection(TagLib.ByteVector, TagLib.ByteVector, int32)</signature>
                        <name>Split</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVectorCollection(TagLib.ByteVector, TagLib.ByteVector, int32, int32)</signature>
                        <name>Split</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>ToByteVector</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.CombinedTag</name>
                <newname>ba</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag)</signature>
                        <name>AddTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearTags</name>
                        <newname>ow</newname>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.Tag)</signature>
                        <name>InsertTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag)</signature>
                        <name>RemoveTag</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag[])</signature>
                        <name>SetTags</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumGain</name>
                        <newname>c9</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumPeak</name>
                        <newname>db</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackGain</name>
                        <newname>c5</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackPeak</name>
                        <newname>c7</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag[]()</signature>
                        <name>get_Tags</name>
                        <newname>fk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumGain</name>
                        <newname>da</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumPeak</name>
                        <newname>dc</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackGain</name>
                        <newname>c6</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackPeak</name>
                        <newname>c8</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Tag&gt;</signature>
                        <name>tags</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.CorruptFileException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Debugger</name>
                <newname>bb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(object, object, System.DateTime)</signature>
                        <name>AddDebugTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Debug</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>DumpDebugTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>DumpHex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>DumpHex</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>WriteByte2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Debugger/DebugMessageSentHandler)</signature>
                        <name>add_DebugMessageSent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Debugger/DebugMessageSentHandler)</signature>
                        <name>remove_DebugMessageSent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Debugger/DebugMessageSentHandler</signature>
                        <name>DebugMessageSent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>allowed</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;object,System.Collections.Generic.Dictionary`2&lt;object,TagLib.Debugger/DebugTimeData&gt;&gt;</signature>
                        <name>debug_times</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Debugger/DebugMessageSentHandler</name>
                <newname>bb/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(string, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Debugger/DebugTimeData</name>
                <newname>bb/b</newname>
                <methodlist>
                    <method>
                        <signature>void(System.TimeSpan, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>occurances</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>time</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.File</name>
                <newname>bd</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/FileTypeResolver)</signature>
                        <name>AddFileTypeResolver</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(TagLib.File/IFileAbstraction)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(TagLib.File/IFileAbstraction, string, TagLib.ReadStyle)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(string)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(string, TagLib.ReadStyle)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.File(string, string, TagLib.ReadStyle)</signature>
                        <name>Create</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector)</signature>
                        <name>Find</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector, int64)</signature>
                        <name>Find</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector, int64, TagLib.ByteVector)</signature>
                        <name>Find</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes)</signature>
                        <name>GetTag</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>Insert</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64, int64)</signature>
                        <name>Insert</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>MarkAsCorrupt</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(System.Exception)</signature>
                        <name>PrepareExceptionForRethrow</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector)</signature>
                        <name>RFind</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector, int64)</signature>
                        <name>RFind</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>int64(TagLib.ByteVector, int64, TagLib.ByteVector)</signature>
                        <name>RFind</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32)</signature>
                        <name>ReadBlock</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>RemoveBlock</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>Seek</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void(int64, System.IO.SeekOrigin)</signature>
                        <name>Seek</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>Truncate</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>WriteBlock</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BufferSize</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_CorruptionReasons</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_InvariantEndPosition</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_InvariantStartPosition</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Length</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.File/AccessMode()</signature>
                        <name>get_Mode</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PossiblyCorrupt</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypesOnDisk</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Tell</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_InvariantEndPosition</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_InvariantStartPosition</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.File/AccessMode)</signature>
                        <name>set_Mode</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>set_TagTypesOnDisk</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buffer_size</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>corruption_reasons</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.File/IFileAbstraction</signature>
                        <name>file_abstraction</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>file_stream</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.File/FileTypeResolver&gt;</signature>
                        <name>file_type_resolvers</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>invariant_end_position</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>invariant_start_position</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mime_type</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>tags_on_disk</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.File/AccessMode</name>
                <newname>bd/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.File/AccessMode</signature>
                        <name>Closed</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.File/AccessMode</signature>
                        <name>Read</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.File/AccessMode</signature>
                        <name>Write</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.File/FileTypeResolver</name>
                <newname>bd/b</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(TagLib.File/IFileAbstraction, string, TagLib.ReadStyle, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.File(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.File(TagLib.File/IFileAbstraction, string, TagLib.ReadStyle)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.File/IFileAbstraction</name>
                <newname>bd/d</newname>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>CloseStream</name>
                        <newname>di</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>df</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_ReadStream</name>
                        <newname>dg</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_WriteStream</name>
                        <newname>dh</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.File/LocalFileAbstraction</name>
                <newname>bd/c</newname>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>CloseStream</name>
                        <newname>di</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>df</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_ReadStream</name>
                        <newname>dg</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_WriteStream</name>
                        <newname>dh</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.FileTypes</name>
                <newname>be</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>Register</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IDictionary`2&lt;string,System.Type&gt;()</signature>
                        <name>get_AvailableTypes</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Type&gt;</signature>
                        <name>file_types</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Type[]</signature>
                        <name>static_file_types</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.Block</name>
                <newname>hh</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Flac.BlockHeader, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Flac.BlockType, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool)</signature>
                        <name>Render</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DataSize</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLastBlock</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>TagLib.Flac.BlockType()</signature>
                        <name>get_Type</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockHeader</signature>
                        <name>header</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.BlockHeader</name>
                <newname>hj</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Flac.BlockType, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool)</signature>
                        <name>Render</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BlockSize</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.Flac.BlockType()</signature>
                        <name>get_BlockType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLastBlock</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>block_size</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>block_type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_last_block</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.BlockType</name>
                <newname>hi</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>Application</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>CueSheet</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>Padding</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>Picture</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>SeekTable</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>StreamInfo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.BlockType</signature>
                        <name>XiphComment</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.File</name>
                <newname>hk</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IList`1&lt;TagLib.Flac.Block&gt;(int64&amp;, int64&amp;, TagLib.Flac.File/BlockMode, TagLib.Flac.BlockType[])</signature>
                        <name>ReadBlocks</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>header_block</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.Metadata</signature>
                        <name>metadata</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_start</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.CombinedTag</signature>
                        <name>tag</name>
                        <newname>ar</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.File/BlockMode</name>
                <newname>hk/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Flac.File/BlockMode</signature>
                        <name>Blacklist</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Flac.File/BlockMode</signature>
                        <name>Whitelist</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.Metadata</name>
                <newname>hl</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;TagLib.Flac.Block&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;TagLib.Flac.Block&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.XiphComment(bool, TagLib.Tag)</signature>
                        <name>GetComment</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RemoveComment</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.IPicture&gt;</signature>
                        <name>pictures</name>
                        <newname>mi</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.Picture</name>
                <newname>hm</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ColorDepth</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>dp</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_IndexedColors</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>dl</newname>
                    </method>
                    <method>
                        <signature>TagLib.PictureType()</signature>
                        <name>get_Type</name>
                        <newname>dn</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ColorDepth</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ds</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>dq</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_IndexedColors</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>dm</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.PictureType)</signature>
                        <name>set_Type</name>
                        <newname>do</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Width</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>color_depth</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>indexed_colors</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mime_type</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>picture_data</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Flac.StreamHeader</name>
                <newname>hn</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleWidth</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>ey</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_HighLength</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>low_length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Genres</name>
                <newname>bf</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8(string)</signature>
                        <name>AudioToIndex</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>IndexToAudio</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8)</signature>
                        <name>IndexToAudio</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>IndexToVideo</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8)</signature>
                        <name>IndexToVideo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(string)</signature>
                        <name>StringToByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(string)</signature>
                        <name>VideoToIndex</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Audio</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Video</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>audio</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>video</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Gif.Codec</name>
                <newname>he</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Gif.File</name>
                <newname>hf</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadApplicationExtensionBlock</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>ReadByte</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadCommentBlock</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadExtensionBlock</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadHeader</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadMetadata</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ReadSubBlocks</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderGifCommentBlock</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderXMPBlock</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveMetadata</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>SkipColorTable</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipImage</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SkipSubBlocks</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SIGNATURE</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VERSION_87A</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VERSION_89A</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XMP_AUTH_CODE</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XMP_IDENTIFIER</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>XMP_MAGIC_TRAILER</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>start_of_blocks</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>version</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>av</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Gif.GifCommentTag</name>
                <newname>hg</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>ba</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>k3</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IAudioCodec</name>
                <newname>bi</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.ICodec</name>
                <newname>bh</newname>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>TagLib.IFD.ArrayIFDEntry`1</name>
                <newname>e2</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>!0[]()</signature>
                        <name>get_Values</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(!0[])</signature>
                        <name>set_Values</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!0[]</signature>
                        <name>&lt;Values&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.ByteIFDEntry</name>
                <newname>fs</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.ByteVectorIFDEntry</name>
                <newname>ft</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.LongArrayIFDEntry</name>
                <newname>fu</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int32[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.LongIFDEntry</name>
                <newname>fv</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.MakernoteIFDEntry</name>
                <newname>fx</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.IFDStructure, TagLib.IFD.Entries.MakernoteType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.IFDStructure, TagLib.IFD.Entries.MakernoteType, TagLib.ByteVector, unsigned int32, bool, System.Nullable`1&lt;bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.MakernoteType()</signature>
                        <name>get_MakernoteType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure()</signature>
                        <name>get_Structure</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.Entries.MakernoteType)</signature>
                        <name>set_MakernoteType</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDStructure)</signature>
                        <name>set_Structure</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>&lt;MakernoteType&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>&lt;Structure&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>absolute_offset</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ifd_offset</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>is_bigendian</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>prefix</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.MakernoteType</name>
                <newname>fw</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Canon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Leica</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Nikon1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Nikon2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Nikon3</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Olympus1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Olympus2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Panasonic</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Pentax</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Sony</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.MakernoteType</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.Rational</name>
                <newname>fy</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.Rational()</signature>
                        <name>Reduce</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string, System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Denominator</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Numerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>float64(TagLib.IFD.Entries.Rational)</signature>
                        <name>op_Implicit</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Denominator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Numerator</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>denominator</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>numerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.RationalArrayIFDEntry</name>
                <newname>fz</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.Entries.Rational[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.RationalIFDEntry</name>
                <newname>f0</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.Entries.Rational)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.Rational()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.Entries.Rational)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.Rational</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SByteIFDEntry</name>
                <newname>f1</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>int8()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int8)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int8</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SLongArrayIFDEntry</name>
                <newname>f4</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, int32[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SLongIFDEntry</name>
                <newname>f5</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SRational</name>
                <newname>f6</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.SRational()</signature>
                        <name>Reduce</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string, System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Denominator</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Numerator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>float64(TagLib.IFD.Entries.SRational)</signature>
                        <name>op_Implicit</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Denominator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Numerator</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>denominator</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SRationalArrayIFDEntry</name>
                <newname>f7</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.Entries.SRational[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SRationalIFDEntry</name>
                <newname>f8</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.IFD.Entries.SRational)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.SRational()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.Entries.SRational)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Entries.SRational</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SShortArrayIFDEntry</name>
                <newname>f9</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, int16[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SShortIFDEntry</name>
                <newname>ga</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.ShortArrayIFDEntry</name>
                <newname>f2</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int16[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.ShortIFDEntry</name>
                <newname>f3</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.StringIFDEntry</name>
                <newname>gb</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.StripOffsetsIFDEntry</name>
                <newname>gc</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int32[], unsigned int32[], TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>byte_counts</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.File</signature>
                        <name>file</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SubIFDArrayEntry</name>
                <newname>gd</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, System.Collections.Generic.List`1&lt;TagLib.IFD.IFDStructure&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure[]()</signature>
                        <name>get_Entries</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDStructure[])</signature>
                        <name>set_Entries</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.IFDStructure[]</signature>
                        <name>&lt;Entries&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.SubIFDEntry</name>
                <newname>ge</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, unsigned int16, unsigned int32, TagLib.IFD.IFDStructure)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ChildCount</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Count</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure()</signature>
                        <name>get_Structure</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Type</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Count</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDStructure)</signature>
                        <name>set_Structure</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Type</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>&lt;Count&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>&lt;Structure&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.ThumbnailDataIFDEntry</name>
                <newname>gf</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.UndefinedIFDEntry</name>
                <newname>gg</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int16, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Entries.UserCommentIFDEntry</name>
                <newname>gh</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, TagLib.ByteVector, TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>TrimNull</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Tag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>COMMENT_ASCII_CODE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>COMMENT_BAD_UNICODE_CODE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>COMMENT_JIS_CODE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>COMMENT_UNDEFINED_CODE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>COMMENT_UNICODE_CODE</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDDirectory</name>
                <newname>e0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDEntry</name>
                <newname>e1</newname>
                <methodlist>
                    <method>
                        <signature>TagLib.ByteVector(bool, unsigned int32, unsigned int16&amp;, unsigned int32&amp;)</signature>
                        <name>Render</name>
                        <newname>fq</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Tag</name>
                        <newname>fp</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDEntryType</name>
                <newname>e3</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Ascii</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Byte</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Double</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Float</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>IFD</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Long</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Rational</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>SByte</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>SLong</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>SRational</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>SShort</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Short</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Undefined</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDEntryType</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDReader</name>
                <newname>e4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(unsigned int16, unsigned int16, unsigned int32, int64, TagLib.ByteVector, unsigned int32)</signature>
                        <name>CreateIFDEntry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDReader(TagLib.File, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>CreateSubIFDReader</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int64)</signature>
                        <name>DetectIFDLoop</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.IFD.IFDDirectory)</signature>
                        <name>FixupDirectory</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(unsigned int16, unsigned int16, unsigned int32, int64, unsigned int32)</signature>
                        <name>ParseIFDEntry</name>
                        <newname>e5</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(unsigned int16, unsigned int16, unsigned int32, int64, unsigned int32)</signature>
                        <name>ParseMakernote</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Read</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Read</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>ReadAsciiString</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(int64, unsigned int32, unsigned int32)</signature>
                        <name>ReadIFD</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ReadInt</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32[](unsigned int32)</signature>
                        <name>ReadIntArray</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.Rational()</signature>
                        <name>ReadRational</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.SRational()</signature>
                        <name>ReadSRational</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>ReadShort</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int16[](unsigned int32)</signature>
                        <name>ReadShortArray</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadUInt</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>unsigned int32[](unsigned int32)</signature>
                        <name>ReadUIntArray</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ReadUShort</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int16[](unsigned int32)</signature>
                        <name>ReadUShortArray</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StartIFDLoopDetect</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>StopIFDLoopDetect</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShouldParseMakernote</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShouldParseMakernote</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>LEICA_HEADER</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NIKON_HEADER</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OLYMPUS1_HEADER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>OLYMPUS2_HEADER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PANASONIC_HEADER</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PENTAX_HEADER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SONY_HEADER</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>base_offset</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.File</signature>
                        <name>file</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;TagLib.File,int32&gt;</signature>
                        <name>ifd_loopdetect_refs</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ifd_offset</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;TagLib.File,System.Collections.Generic.List`1&lt;int64&gt;&gt;</signature>
                        <name>ifd_offsets</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_bigendian</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>max_offset</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>parse_makernote</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>structure</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDRenderer</name>
                <newname>e5</newname>
                <methodlist>
                    <method>
                        <signature>void(bool, TagLib.IFD.IFDStructure, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDRenderer(bool, TagLib.IFD.IFDStructure, unsigned int32)</signature>
                        <name>CreateSubRenderer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int16, unsigned int16, unsigned int32, unsigned int32)</signature>
                        <name>RenderEntry</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDEntry, TagLib.ByteVector, TagLib.ByteVector, unsigned int32)</signature>
                        <name>RenderEntryData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.IFD.IFDDirectory, unsigned int32, bool)</signature>
                        <name>RenderIFD</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ifd_offset</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>is_bigendian</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>structure</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDStructure</name>
                <newname>e6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.IFD.IFDEntry)</signature>
                        <name>AddEntry</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(int32, unsigned int16)</signature>
                        <name>ContainsTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int8&gt;(int32, unsigned int16)</signature>
                        <name>GetByteValue</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;(int32, unsigned int16)</signature>
                        <name>GetDateTimeValue</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(int32, TagLib.IFD.Tags.IFDEntryTag)</signature>
                        <name>GetEntry</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(int32, unsigned int16)</signature>
                        <name>GetEntry</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;(int32, unsigned int16)</signature>
                        <name>GetLongValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;(int32, unsigned int16)</signature>
                        <name>GetRationalValue</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string(int32, unsigned int16)</signature>
                        <name>GetStringValue</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.IFD.Tags.IFDEntryTag)</signature>
                        <name>RemoveTag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16)</signature>
                        <name>RemoveTag</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16, unsigned int8)</signature>
                        <name>SetByteValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16, System.DateTime)</signature>
                        <name>SetDateTimeValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.IFD.IFDEntry)</signature>
                        <name>SetEntry</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16, unsigned int32)</signature>
                        <name>SetLongValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16, float64)</signature>
                        <name>SetRationalValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int16, string)</signature>
                        <name>SetStringValue</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDDirectory[]()</signature>
                        <name>get_Directories</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DATETIME_FORMAT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.IFD.IFDDirectory&gt;</signature>
                        <name>directories</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.IFDTag</name>
                <newname>e7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.Entries.Rational[](float64)</signature>
                        <name>DegreeToRationals</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitGpsDirectory</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Altitude</name>
                        <newname>eg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTime</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTimeDigitized</name>
                        <newname>ox</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTimeOriginal</name>
                        <newname>ow</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure()</signature>
                        <name>get_ExifIFD</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_ExposureTime</name>
                        <newname>ei</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FNumber</name>
                        <newname>ek</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FocalLength</name>
                        <newname>em</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FocalLengthIn35mmFilm</name>
                        <newname>e8</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure()</signature>
                        <name>get_GPSIFD</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ISOSpeedRatings</name>
                        <newname>e6</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Latitude</name>
                        <newname>ec</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Longitude</name>
                        <newname>ee</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Make</name>
                        <newname>eo</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                        <newname>eq</newname>
                    </method>
                    <method>
                        <signature>TagLib.Image.ImageOrientation()</signature>
                        <name>get_Orientation</name>
                        <newname>d8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Software</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDStructure()</signature>
                        <name>get_Structure</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Altitude</name>
                        <newname>eh</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTime</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTimeDigitized</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTimeOriginal</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_ExposureTime</name>
                        <newname>ej</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FNumber</name>
                        <newname>el</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FocalLength</name>
                        <newname>en</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FocalLengthIn35mmFilm</name>
                        <newname>e9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ISOSpeedRatings</name>
                        <newname>e7</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Latitude</name>
                        <newname>ed</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Longitude</name>
                        <newname>ef</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Make</name>
                        <newname>ep</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Model</name>
                        <newname>er</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageOrientation)</signature>
                        <name>set_Orientation</name>
                        <newname>d9</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Software</name>
                        <newname>eb</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDStructure)</signature>
                        <name>set_Structure</name>
                        <newname>ba</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>&lt;Structure&gt;k__BackingField</name>
                        <newname>kh</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>exif_ifd</name>
                        <newname>kf</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDStructure</signature>
                        <name>gps_ifd</name>
                        <newname>kg</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Makernotes.Nikon3MakernoteReader</name>
                <newname>fr</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(unsigned int16, unsigned int16, unsigned int32, int64, unsigned int32)</signature>
                        <name>ParseIFDEntry</name>
                        <newname>e5</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.CanonFileInfoEntryTag</name>
                <newname>e8</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>BracketMode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>BracketShotNumber</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>BracketValue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>FileNumber</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>FilterEffect</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>NoiseReduction</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>RawJpgQuality</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>RawJpgSize</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>ToningEffect</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>WBBracketMode</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>WBBracketValueAB</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonFileInfoEntryTag</signature>
                        <name>WBBracketValueGM</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.CanonMakerNoteEntryTag</name>
                <newname>e9</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>BlackLevel</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>CameraSettings</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>CanonFileInfo</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ColorSpace</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>CustomFunctions</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>FirmwareVersion</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>FocalLength</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ImageNumber</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ImageType</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>LensModel</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>MeasuredColor</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ModelID</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>OwnerName</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>Panorama</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>PictureInfo</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ProcessingInfo</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>SensorInfo</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>SerialInfo</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>SerialNumber</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>SerialNumberFormat</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>ShotInfo</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>Unknown0</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>Unknown13</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>Unknown3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonMakerNoteEntryTag</signature>
                        <name>WhiteBalanceTable</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.CanonPictureInfoEntryTag</name>
                <newname>fa</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>AFPointsUsed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>AFPointsUsed20D</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>ImageHeight</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>ImageHeightAsShot</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>ImageWidth</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.CanonPictureInfoEntryTag</signature>
                        <name>ImageWidthAsShot</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.ExifEntryTag</name>
                <newname>fb</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ApertureValue</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>BrightnessValue</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>CFAPattern</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>CFAPattern2</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>CFARepeatPatternDim</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ColorSpace</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ComponentsConfiguration</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>CompressedBitsPerPixel</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>Contrast</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>CustomRendered</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>DateTimeDigitized</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>DateTimeOriginal</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>DeviceSettingDescription</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>DigitalZoomRatio</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExifVersion</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExposureBiasValue</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExposureIndex</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExposureMode</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExposureProgram</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ExposureTime</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FNumber</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FileSource</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>Flash</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FlashEnergy</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FlashpixVersion</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FocalLength</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FocalLengthIn35mmFilm</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FocalPlaneResolutionUnit</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FocalPlaneXResolution</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>FocalPlaneYResolution</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>GainControl</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ISOSpeedRatings</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ImageUniqueID</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>LightSource</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>MakerNote</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>MaxApertureValue</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>MeteringMode</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>OECF</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>PixelXDimension</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>PixelYDimension</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>RelatedSoundFile</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>Saturation</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SceneCaptureType</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SceneType</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SensingMethod</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>Sharpness</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>ShutterSpeedValue</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SpatialFrequencyResponse</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SpectralSensitivity</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubjectArea</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubjectDistance</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubjectDistanceRange</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubjectLocation</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubsecTime</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubsecTimeDigitized</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>SubsecTimeOriginal</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>UserComment</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.ExifEntryTag</signature>
                        <name>WhiteBalance</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.GPSEntryTag</name>
                <newname>fc</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSAltitude</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSAltitudeRef</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSAreaInformation</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDOP</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDateStamp</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestBearing</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestBearingRef</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestDistance</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestDistanceRef</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestLatitude</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestLatitudeRef</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestLongitude</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDestLongitudeRef</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSDifferential</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSImgDirection</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSImgDirectionRef</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSLatitude</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSLatitudeRef</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSLongitude</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSLongitudeRef</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSMapDatum</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSMeasureMode</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSProcessingMethod</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSSatellites</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSSpeed</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSSpeedRef</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSStatus</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSTimeStamp</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSTrack</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSTrackRef</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.GPSEntryTag</signature>
                        <name>GPSVersionID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.IFDEntryTag</name>
                <newname>fd</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>AliasLayerMetadata</name>
                        <newname>ea</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>AnalogBalance</name>
                        <newname>dt</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>AntiAliasStrength</name>
                        <newname>d4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Artist</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>AsShotNeutral</name>
                        <newname>du</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>AsShotWhiteXY</name>
                        <newname>dv</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BadFaxLines</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BaselineExposure</name>
                        <newname>dw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BaselineNoise</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BaselineSharpness</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BayerGreenSplit</name>
                        <newname>dz</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BestQualityScale</name>
                        <newname>d9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BitsPerSample</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BlackLevel</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BlackLevelDeltaH</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BlackLevelDeltaV</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>BlackLevelRepeatDim</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CFALayout</name>
                        <newname>dd</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CFAPlaneColor</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CalibrationIlluminant1</name>
                        <newname>d7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CalibrationIlluminant2</name>
                        <newname>d8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CameraCalibration1</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CameraCalibration2</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CameraSerialNumber</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CellLength</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CellWidth</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ChromaBlurRadius</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CleanFaxData</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ClipPath</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>CodingMethods</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ColorMap</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ColorMatrix1</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ColorMatrix2</name>
                        <newname>do</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Compression</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ConsecutiveBadFaxLines</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Copyright</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DNGBackwardVersion</name>
                        <newname>c9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DNGPrivateData</name>
                        <newname>d5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DNGVersion</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DateTime</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Decode</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DefaultCropOrigin</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DefaultCropSize</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DefaultImageColor</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DefaultScale</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DocumentName</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>DotRange</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ExifIFD</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ExtraSamples</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>FaxProfile</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>FillOrder</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>FreeByteCounts</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>FreeOffsets</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GDAL_METADATA</name>
                        <newname>c2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GDAL_NODATA</name>
                        <newname>c3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GPSIFD</name>
                        <newname>cw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GeoAsciiParamsTag</name>
                        <newname>cv</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GeoDoubleParamsTag</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GeoKeyDirectoryTag</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GlobalParametersIFD</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GrayResponseCurve</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>GrayResponseUnit</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>HalftoneHints</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>HostComputer</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>HylaFAXFaxRecvParams</name>
                        <newname>cx</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>HylaFAXFaxRecvTime</name>
                        <newname>cz</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>HylaFAXFaxSubAddress</name>
                        <newname>cy</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ICCProfile</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>INGRFlagRegisters</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>INGRPacketDataTag</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>IPTC</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageDescription</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageID</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageLayer</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageLength</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageSourceData</name>
                        <newname>c0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ImageWidth</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Indexed</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>InkNames</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>InkSet</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>InteroperabilityIFD</name>
                        <newname>c1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>IrasBTransformationMatrix</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGACTables</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGDCTables</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGInterchangeFormat</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGInterchangeFormatLength</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGLosslessPredictors</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGPointTransforms</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGProc</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGQTables</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGRestartInterval</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>JPEGTables</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>LensInfo</name>
                        <newname>d2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>LinearResponseLimit</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>LinearizationTable</name>
                        <newname>de</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>LocalizedCameraModel</name>
                        <newname>db</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDColorTable</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDFileTag</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDFileUnits</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDLabName</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDPrepDate</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDPrepTime</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDSampleInfo</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MDScalePixel</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Make</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MakerNoteSafety</name>
                        <newname>d6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MaxSampleValue</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>MinSampleValue</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ModeNumber</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Model</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ModelPixelScaleTag</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ModelTiepointTag</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ModelTransformationTag</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>NewSubfileType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>NumberOfInks</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>OPIProxy</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>OceApplicationSelector</name>
                        <newname>c5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>OceIdentificationNumber</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>OceImageLogicCharacteristics</name>
                        <newname>c7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>OceScanjobDescription</name>
                        <newname>c4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Orientation</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>PageName</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>PageNumber</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>PhotometricInterpretation</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Photoshop</name>
                        <newname>cp</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>PlanarConfiguration</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Predictor</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>PrimaryChromaticities</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ProfileType</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Rating</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>RatingPercent</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ReductionMatrix1</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ReductionMatrix2</name>
                        <newname>ds</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ReferenceBlackWhite</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>ResolutionUnit</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>RowsPerStrip</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SMaxSampleValue</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SMinSampleValue</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SampleFormat</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SamplesPerPixel</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Software</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>StripByteCounts</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>StripOffsets</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>StripRowCounts</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SubIFDs</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>SubfileType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>T4Options</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>T6Options</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TargetPrinter</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>Threshholding</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TileByteCounts</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TileLength</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TileOffsets</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TileWidth</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TransferFunction</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>TransferRange</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>UniqueCameraModel</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>VersionYear</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>WangAnnotation</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>WhiteLevel</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>WhitePoint</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>XClipPathUnits</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>XMP</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>XPosition</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>XResolution</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YCbCrCoefficients</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YCbCrPositioning</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YCbCrSubSampling</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YClipPathUnits</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YPosition</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IFDEntryTag</signature>
                        <name>YResolution</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.IOPEntryTag</name>
                <newname>fe</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.IOPEntryTag</signature>
                        <name>InteroperabilityIndex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IOPEntryTag</signature>
                        <name>InteroperabilityVersion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IOPEntryTag</signature>
                        <name>RelatedImageFileFormat</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IOPEntryTag</signature>
                        <name>RelatedImageLength</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.IOPEntryTag</signature>
                        <name>RelatedImageWidth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</name>
                <newname>ff</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>AFInfo</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>AFInfo2</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>AFResponse</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ActiveDLighting</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>AutoBracketRelease</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>AuxiliaryLens</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>CaptureData</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>CaptureOffsets</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>CaptureOutput</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>CaptureVersion</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ColorBalance</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ColorHue</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ColorMode</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ColorSpace</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ContrastCurve</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>CropHiSpeed</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>DataDump</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>DeletedImageCount</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>DigitalZoom</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ExposureBracketComp</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ExposureDiff</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FileInfo</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashBracketComp</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashComp</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashDevice</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashInfo</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashMode</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FlashSetting</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Focus</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>FocusDistance</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>HighISONoiseReduction</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>HueAdjustment</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ICCProfile</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ISOInfo</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ISOSelection</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ISOSettings</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ISOSpeed</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageAdjustment</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageAuthentication</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageBoundary</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageCount</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageDataSize</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageOptimization</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageProcessing</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ImageStabilization</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Lens</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>LensData</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>LensFStops</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>LensType</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>LightSource</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>LinearizationTable</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>MultiExposure</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>NEFCompression</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>NoiseReduction</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>PictureControl</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Preview</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>PrintIM</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ProgramShift</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Quality</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>RawImageCenter</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>RetouchHistory</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Saturation</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Saturation2</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ScanIFD</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>SceneAssist</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>SceneMode</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>SensorPixelSize</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>SerialNO</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>SerialNumber</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Sharpening</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ShootingMode</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ShotInfo</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ShutterCount</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ToneComp</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>ToningEffect</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Unknown10</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Unknown155</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Unknown159</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Unknown163</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Unknown23</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>VRInfo</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>VariProgram</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>VignetteControl</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>WB_RBLevels</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>WhiteBalance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>WhiteBalanceBias</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.Nikon3MakerNoteEntryTag</signature>
                        <name>WorldTime</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonIsoInfoEntryTag</name>
                <newname>fg</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonIsoInfoEntryTag</signature>
                        <name>ISO</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonIsoInfoEntryTag</signature>
                        <name>ISO2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonIsoInfoEntryTag</signature>
                        <name>ISOExpansion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonIsoInfoEntryTag</signature>
                        <name>ISOExpansion2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonLensData3EntryTag</name>
                <newname>fh</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>AFAperture</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>EffectiveMaxAperture</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>ExitPupilPosition</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>FocalLength</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>FocusDistance</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>FocusPosition</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>LensFStops</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>LensIDNumber</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>MCUVersion</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>MaxApertureAtMaxFocal</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>MaxApertureAtMinFocal</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>MaxFocalLength</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>MinFocalLength</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonLensData3EntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonPictureControlEntryTag</name>
                <newname>fi</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Adjust</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Base</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Brightness</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Contrast</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>FilterEffect</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>HueAdjustment</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>QuickAdjust</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Saturation</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Sharpness</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>ToningEffect</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>ToningSaturation</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPictureControlEntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</name>
                <newname>fj</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>Compression</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>PreviewImageLength</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>PreviewImageStart</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>ResolutionUnit</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>XResolution</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>YCbCrPositioning</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonPreviewMakerNoteEntryTag</signature>
                        <name>YResolution</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonShotInfoEntryTag</name>
                <newname>fk</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>DeletedImageCount</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>ISO</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>ShutterCount</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>ShutterCount1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>ShutterCount2</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>VibrationReduction</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>VibrationReduction1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonShotInfoEntryTag</signature>
                        <name>VibrationReduction2</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonVibrationReductionEntryTag</name>
                <newname>fl</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonVibrationReductionEntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonVibrationReductionEntryTag</signature>
                        <name>VibrationReduction</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.NikonWorldTimeEntryTag</name>
                <newname>fm</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonWorldTimeEntryTag</signature>
                        <name>DateDisplayFormat</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonWorldTimeEntryTag</signature>
                        <name>DaylightSavings</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.NikonWorldTimeEntryTag</signature>
                        <name>Timezone</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</name>
                <newname>fn</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ApertureValue</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>BWMode</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>BlackLevel</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>BlueBalance</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Bracket</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Brightness</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>CCDScanMode</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>CameraID</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>CameraSettings</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ColorControl</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ColorMatrix</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>CompressionRatio</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Contrast</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>CoringFilter</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>DataDump1</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>DataDump2</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>DigitalZoom</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Equipment</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ExternalFlashBounce</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ExternalFlashMode</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ExternalFlashZoom</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FirmwareVersion</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FlashBias</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FlashChargeLevel</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FlashDevice</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FlashMode</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FocalPlaneDiagonal</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FocusDistance</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FocusInfo</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>FocusMode</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ISOSpeed</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ImageHeight</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ImageProcessing</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ImageWidth</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>InfinityLensStep</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>LensDistortionParams</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>LensTemperature</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Macro</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>MacroFocus</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>NearLensStep</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>NoiseReduction</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>OneTouchWB</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>PictureInfo</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>PreCaptureFrames</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>PrintIM</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Quality</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>RawDevelopment</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>RawDevelopment2</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>RawInfo</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>RedBalance</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SensorTemperature</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SerialNumber</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SerialNumber2</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SharpnessFactor</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SharpnessFactor2</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ShutterSpeed</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>SpecialMode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Thumbnail</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ThumbnailImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ThumbnailLength</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ThumbnailOffset</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>ValidBits</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>WhiteBalance</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.OlympusMakerNoteEntryTag</signature>
                        <name>Zoom</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</name>
                <newname>fo</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>AFMode</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>AccessoryType</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Audio</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>BabyAge</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>BabyAge2</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>BurstMode</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ColorEffect</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ColorMode</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Contrast</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Contrast2</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ConversionLens</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>DataDump</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ExifVersion</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>FilmMode</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>FirmwareVersion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>FlashBias</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>FocusMode</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ISO</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ImageStabilization</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>InternalSerialNumber</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>LensSerialNumber</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>LensType</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Macro</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>MakerNoteVersion</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>NoiseReduction</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>OpticalZoomMode</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>PrintIM</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ProgramISO</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Quality</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Rotation</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Saturation</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>SceneMode</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>SelfTimer</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>SequenceNumber</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Sharpness</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>ShootingMode</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>TimeSincePowerOn</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>TravelDay</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown17481</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown34</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown39</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown4</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown47</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>Unknown49</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WBAdjustAB</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WBAdjustGM</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WBBlueLevel</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WBGreenLevel</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WBRedLevel</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WhiteBalance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WhiteBalanceBias</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PanasonicMakerNoteEntryTag</signature>
                        <name>WorldTimeLocation</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</name>
                <newname>fp</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AEInfo</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AELock</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AEMeteringSegments</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AFAdjustment</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AFInfo</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AFPoint</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AFPointInFocus</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>AutoBracketing</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>BatteryInfo</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>BlackPoint</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>BlueBalance</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>CPUFirmwareVersion</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>CameraInfo</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ColorInfo</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ColorSpace</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ColorTemperature</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Contrast</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DSPFirmwareVersion</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Date</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Destination</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DestinationDST</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DigitalFilter</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DigitalZoom</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DriveMode</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>DynamicRangeExpansion</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>EffectiveLV</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ExposureCompensation</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ExposureTime</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FNumber</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Flash</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FlashADump</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FlashBDump</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FlashExposureCompensation</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FlashInfo</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FocalLength</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Focus</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>FrameNumber</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>HighISONoiseReduction</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Hometown</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>HometownDST</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ISO</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ImageAreaOffset</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ImageProcessing</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ImageTone</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>LensInfo</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>LensType</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Location</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>MeteringMode</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Mode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ModelID</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>NoiseReduction</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>PictureMode</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>PreviewImageBorders</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>PreviewLength</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>PreviewOffset</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>PreviewResolution</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Quality</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>RawImageSize</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>RedBalance</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Saturation</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>SensitivityAdjust</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>SerialNumber</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ShakeReduction</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Sharpness</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ShotInfo</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>ShutterCount</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Size</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Temperature</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Time</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>Version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsCloudy</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsDaylight</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsFlash</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsFluorescentD</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsFluorescentN</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsFluorescentW</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsShade</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WB_RGGBLevelsTungsten</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WhiteBallance</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WhiteBallanceMode</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.PentaxMakerNoteEntryTag</signature>
                        <name>WhitePoint</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IFD.Tags.SonyMakerNoteEntryTag</name>
                <newname>fq</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>AFIlluminator</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>AFMode</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>AntiBlur</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>AutoHDR</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>CameraSettings</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ColorCompensationFilter</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ColorMode</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ColorReproduction</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ColorTemperature</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>DynamicRangeOptimizer</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>DynamicRangeOptimizer2</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ExposureMode</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>FileFormat</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>FlashExposureComp</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>FlashLevel</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>FocusMode</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>FullImageSize</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ImageStabilization</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>IntelligentAuto</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>LensID</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>LongExposureNoiseReduction</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>Macro</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>MinoltaMakerNote</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>MultiBurstImageHeight</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>MultiBurstImageWidth</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>MultiBurstMode</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>Panorama</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>PreviewImage</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>PreviewImageSize</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>PrintIM</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>Quality</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>Quality2</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ReleaseMode</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>SceneMode</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>SequenceNumber</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ShotInfo</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>SonyModelID</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>Teleconverter</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>WhiteBalance</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>WhiteBalance2</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>WhiteBalanceFineTune</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.Tags.SonyMakerNoteEntryTag</signature>
                        <name>ZoneMatching</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IIM.IIMReader</name>
                <newname>ey</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IIM.IIMTag()</signature>
                        <name>Process</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.IIM.IIMTag()</signature>
                        <name>get_Tag</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IIM.IIMTag)</signature>
                        <name>set_Tag</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;Data&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.IIM.IIMTag</signature>
                        <name>&lt;Tag&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>IPTC_IIM_SEGMENT</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IIM.IIMTag</name>
                <newname>ez</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>AddKeyword</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Keywords</name>
                        <newname>d2</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>kd</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Copyright&gt;k__BackingField</name>
                        <newname>kc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Creator&gt;k__BackingField</name>
                        <newname>kb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Title&gt;k__BackingField</name>
                        <newname>ka</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>m_Keywords</name>
                        <newname>j9</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.ILosslessAudioCodec</name>
                <newname>bj</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>ey</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IPhotoCodec</name>
                <newname>bl</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoHeight</name>
                        <newname>dz</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoQuality</name>
                        <newname>d0</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoWidth</name>
                        <newname>dy</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IPicture</name>
                <newname>bq</newname>
                <methodlist>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>dp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>dl</newname>
                    </method>
                    <method>
                        <signature>TagLib.PictureType()</signature>
                        <name>get_Type</name>
                        <newname>dn</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ds</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>dq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>dm</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.PictureType)</signature>
                        <name>set_Type</name>
                        <newname>do</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.IVideoCodec</name>
                <newname>bk</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v1.StringHandler</name>
                <newname>hc</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(string)</signature>
                        <name>Render</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v1.Tag</name>
                <newname>hd</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v1.StringHandler()</signature>
                        <name>get_DefaultStringHandler</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v1.StringHandler)</signature>
                        <name>set_DefaultStringHandler</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>mg</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>mf</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>album</name>
                        <newname>k6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>artist</name>
                        <newname>k5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>comment</name>
                        <newname>k8</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>genre</name>
                        <newname>me</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v1.StringHandler</signature>
                        <name>string_handler</name>
                        <newname>k3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>k4</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>track</name>
                        <newname>md</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>year</name>
                        <newname>k7</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.AttachedPictureFrame</name>
                <newname>go</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.AttachedPictureFrame(TagLib.Id3v2.Tag, TagLib.PictureType, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.AttachedPictureFrame(TagLib.Id3v2.Tag, string, TagLib.PictureType, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.AttachedPictureFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseRawData</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>dp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>dl</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.PictureType()</signature>
                        <name>get_Type</name>
                        <newname>dn</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ds</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>dq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>dm</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.PictureType)</signature>
                        <name>set_Type</name>
                        <newname>do</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mime_type</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>raw_data</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>raw_version</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>text_encoding</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>type</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.ChannelType</name>
                <newname>gv</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>BackCentre</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>BackLeft</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>BackRight</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>FrontCentre</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>FrontLeft</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>FrontRight</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>MasterVolume</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>Other</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ChannelType</signature>
                        <name>Subwoofer</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.CommentsFrame</name>
                <newname>gp</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.CommentsFrame(TagLib.Id3v2.Tag, string, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.CommentsFrame(TagLib.Id3v2.Tag, string, string)</signature>
                        <name>GetPreferred</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>language</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.ExtendedHeader</name>
                <newname>gi</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.ExtendedHeader()</signature>
                        <name>Clone</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>Parse</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Size</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.Footer</name>
                <newname>gj</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.Header)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_CompleteTagSize</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.HeaderFlags()</signature>
                        <name>get_Flags</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_MajorVersion</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_RevisionNumber</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TagSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.HeaderFlags)</signature>
                        <name>set_Flags</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_MajorVersion</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_RevisionNumber</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TagSize</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>major_version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>revision_number</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>tag_size</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.Frame</name>
                <newname>gk</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.FrameHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType(TagLib.StringType, unsigned int8)</signature>
                        <name>CorrectEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector, int32, unsigned int8)</signature>
                        <name>FieldData</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>Render</name>
                        <newname>fu</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, unsigned int8, bool)</signature>
                        <name>SetData</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.StringType)</signature>
                        <name>TextDelimiter</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_EncryptionId</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.FrameFlags()</signature>
                        <name>get_Flags</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector()</signature>
                        <name>get_FrameId</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_GroupId</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Size</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_EncryptionId</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.FrameFlags)</signature>
                        <name>set_Flags</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_GroupId</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>encryption_id</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>group_id</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameHeader</signature>
                        <name>header</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.FrameFactory</name>
                <newname>gl</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.FrameFactory/FrameCreator)</signature>
                        <name>AddFrameCreator</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame(TagLib.ByteVector, int32&amp;, unsigned int8, bool)</signature>
                        <name>CreateFrame</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Id3v2.FrameFactory/FrameCreator&gt;</signature>
                        <name>frame_creators</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.FrameFactory/FrameCreator</name>
                <newname>gl/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.FrameFlags</name>
                <newname>gm</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>Compression</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>DataLengthIndicator</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>Encryption</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>FileAlterPreservation</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>GroupingIdentity</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>ReadOnly</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>TagAlterPreservation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>Unsynchronisation</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.FrameHeader</name>
                <newname>gn</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector(TagLib.ByteVector, unsigned int8, bool)</signature>
                        <name>ConvertId</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>Render</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int8)</signature>
                        <name>Size</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.FrameFlags()</signature>
                        <name>get_Flags</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector()</signature>
                        <name>get_FrameId</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_FrameSize</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.FrameFlags)</signature>
                        <name>set_Flags</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadOnlyByteVector)</signature>
                        <name>set_FrameId</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_FrameSize</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.FrameFlags</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>frame_id</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>frame_size</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector[0...,0...]</signature>
                        <name>version2_frames</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector[0...,0...]</signature>
                        <name>version3_frames</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.FrameType</name>
                <newname>g7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>APIC</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>COMM</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>EQUA</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>GEOB</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>MCDI</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>PCNT</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>POPM</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>PRIV</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>RVA2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>RVAD</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>SYLT</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TALB</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TBPM</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TCMP</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TCOM</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TCON</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TCOP</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TDAT</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TDRC</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TEXT</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TIME</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TIT1</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TIT2</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TOLY</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TOPE</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TPE1</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TPE2</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TPE3</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TPE4</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TPOS</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TRCK</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TRDA</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSIZ</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSO2</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSOA</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSOC</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSOP</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TSOT</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TXXX</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>TYER</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>UFID</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>USER</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>USLT</name>
                        <newname>aq</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.GeneralEncapsulatedObjectFrame</name>
                <newname>gq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.GeneralEncapsulatedObjectFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Object</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Object</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>file_name</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mime_type</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.Header</name>
                <newname>g9</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_CompleteTagSize</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.HeaderFlags()</signature>
                        <name>get_Flags</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_MajorVersion</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_RevisionNumber</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TagSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.HeaderFlags)</signature>
                        <name>set_Flags</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_MajorVersion</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_RevisionNumber</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TagSize</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>major_version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>revision_number</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>tag_size</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.HeaderFlags</name>
                <newname>g8</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>ExperimentalIndicator</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>ExtendedHeader</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>FooterPresent</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.HeaderFlags</signature>
                        <name>Unsynchronisation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.MusicCdIdentifierFrame</name>
                <newname>gr</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.MusicCdIdentifierFrame(TagLib.Id3v2.Tag, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>field_data</name>
                        <newname>t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.PlayCountFrame</name>
                <newname>gs</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.PlayCountFrame(TagLib.Id3v2.Tag, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_PlayCount</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_PlayCount</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>play_count</name>
                        <newname>u</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.PopularimeterFrame</name>
                <newname>gt</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.PopularimeterFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_PlayCount</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_Rating</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_User</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int64)</signature>
                        <name>set_PlayCount</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_Rating</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_User</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>play_count</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>rating</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>user</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.PrivateFrame</name>
                <newname>gu</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.PrivateFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Owner</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_PrivateData</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_PrivateData</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>owner</name>
                        <newname>y</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.RelativeVolumeFrame</name>
                <newname>gw</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>BitsToBytes</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.RelativeVolumeFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>float64(TagLib.Id3v2.ChannelType)</signature>
                        <name>GetPeakVolume</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>unsigned int64(TagLib.Id3v2.ChannelType)</signature>
                        <name>GetPeakVolumeIndex</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>float32(TagLib.Id3v2.ChannelType)</signature>
                        <name>GetVolumeAdjustment</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>int16(TagLib.Id3v2.ChannelType)</signature>
                        <name>GetVolumeAdjustmentIndex</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.ChannelType, float64)</signature>
                        <name>SetPeakVolume</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.ChannelType, unsigned int64)</signature>
                        <name>SetPeakVolumeIndex</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.ChannelType, float32)</signature>
                        <name>SetVolumeAdjustment</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.ChannelType, int16)</signature>
                        <name>SetVolumeAdjustmentIndex</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.ChannelType[]()</signature>
                        <name>get_Channels</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Identification</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.RelativeVolumeFrame/ChannelData[]</signature>
                        <name>channels</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>identification</name>
                        <newname>aa</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.RelativeVolumeFrame/ChannelData</name>
                <newname>gw/a</newname>
                <methodlist>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSet</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PeakVolume</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_VolumeAdjustment</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PeakVolume</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_VolumeAdjustment</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>PeakVolumeIndex</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>VolumeAdjustmentIndex</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.SynchData</name>
                <newname>ha</newname>
                <methodlist>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int32)</signature>
                        <name>FromUInt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>ResynchByteVector</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(TagLib.ByteVector)</signature>
                        <name>ToUInt</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>UnsynchByteVector</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.SynchedText</name>
                <newname>g0</newname>
                <methodlist>
                    <method>
                        <signature>void(int64, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Time</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Time</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>time</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.SynchedTextType</name>
                <newname>gy</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Chord</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Events</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>ImageUrls</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Lyrics</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Movement</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Other</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>TextTranscription</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>Trivia</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>WebpageUrls</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.SynchronisedLyricsFrame</name>
                <newname>gz</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, TagLib.Id3v2.SynchedTextType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, TagLib.Id3v2.SynchedTextType, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.SynchronisedLyricsFrame(TagLib.Id3v2.Tag, string, string, TagLib.Id3v2.SynchedTextType, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.SynchronisedLyricsFrame(TagLib.Id3v2.Tag, string, string, TagLib.Id3v2.SynchedTextType)</signature>
                        <name>GetPreferred</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TimestampFormat()</signature>
                        <name>get_Format</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.SynchedText[]()</signature>
                        <name>get_Text</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.SynchedTextType()</signature>
                        <name>get_Type</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.TimestampFormat)</signature>
                        <name>set_Format</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.SynchedText[])</signature>
                        <name>set_Text</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.SynchedTextType)</signature>
                        <name>set_Type</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>language</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedTextType</signature>
                        <name>lyrics_type</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.SynchedText[]</signature>
                        <name>text</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.TimestampFormat</signature>
                        <name>timestamp_format</name>
                        <newname>af</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.Tag</name>
                <newname>hb</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.Frame)</signature>
                        <name>AddFrame</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Tag()</signature>
                        <name>Clone</name>
                        <newname>o5</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag, bool)</signature>
                        <name>CopyTo</name>
                        <newname>fx</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Id3v2.Frame&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;()</signature>
                        <name>GetFrames</name>
                        <newname>oz</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(TagLib.ByteVector)</signature>
                        <name>GetFrames</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Id3v2.Frame&gt;()</signature>
                        <name>GetFrames</name>
                        <newname>oy</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Id3v2.Frame&gt;(TagLib.ByteVector)</signature>
                        <name>GetFrames</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.ByteVector)</signature>
                        <name>GetTextAsArray</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.ByteVector)</signature>
                        <name>GetTextAsString</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(TagLib.ByteVector, int32)</signature>
                        <name>GetTextAsUInt32</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUfidText</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetUserTextAsString</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string(string, bool)</signature>
                        <name>GetUserTextAsString</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.Frame)</signature>
                        <name>MakeFirstOfType</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>Read</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.Frame)</signature>
                        <name>RemoveFrame</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>RemoveFrames</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>o0</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.Frame, TagLib.Id3v2.Frame)</signature>
                        <name>ReplaceFrame</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int32, unsigned int32)</signature>
                        <name>SetNumberFrame</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.StringCollection)</signature>
                        <name>SetTextFrame</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, string[])</signature>
                        <name>SetTextFrame</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetUfidText</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetUserTextAsString</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string, bool)</signature>
                        <name>SetUserTextAsString</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>o3</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                        <newname>o6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_DefaultEncoding</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_DefaultVersion</name>
                        <newname>ow</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.HeaderFlags()</signature>
                        <name>get_Flags</name>
                        <newname>o1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceDefaultEncoding</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceDefaultVersion</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompilation</name>
                        <newname>o4</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>ox</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumGain</name>
                        <newname>c9</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumPeak</name>
                        <newname>db</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackGain</name>
                        <newname>c5</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackPeak</name>
                        <newname>c7</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseNumericGenres</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_Version</name>
                        <newname>o2</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_DefaultEncoding</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_DefaultVersion</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Id3v2.HeaderFlags)</signature>
                        <name>set_Flags</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceDefaultEncoding</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceDefaultVersion</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompilation</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumGain</name>
                        <newname>da</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumPeak</name>
                        <newname>dc</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackGain</name>
                        <newname>c6</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackPeak</name>
                        <newname>c8</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseNumericGenres</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_Version</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>default_string_type</name>
                        <newname>k4</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>default_version</name>
                        <newname>k2</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.ExtendedHeader</signature>
                        <name>extended_header</name>
                        <newname>k8</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>force_default_string_type</name>
                        <newname>k5</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>force_default_version</name>
                        <newname>k3</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Id3v2.Frame&gt;</signature>
                        <name>frame_list</name>
                        <newname>k9</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Header</signature>
                        <name>header</name>
                        <newname>k7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>language</name>
                        <newname>k1</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>use_numeric_genres</name>
                        <newname>k6</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.Tag/&lt;GetFrames&gt;d__13</name>
                <newname>hb/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Id3v2.Frame&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Id3v2.Frame&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Id3v2.Frame&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Frame</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;&gt;3__ident</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Tag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Id3v2.Frame&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>ident</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>TagLib.Id3v2.Tag/&lt;GetFrames&gt;d__14`1</name>
                <newname>hb/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Tag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Id3v2.Frame&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>TagLib.Id3v2.Tag/&lt;GetFrames&gt;d__15`1</name>
                <newname>hb/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;T&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>&lt;&gt;3__ident</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Tag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.Id3v2.Frame&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>ident</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.TermsOfUseFrame</name>
                <newname>g1</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TermsOfUseFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TermsOfUseFrame(TagLib.Id3v2.Tag, string)</signature>
                        <name>GetPreferred</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>language</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>ak</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.TextInformationFrame</name>
                <newname>g2</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TextInformationFrame(TagLib.Id3v2.Tag, TagLib.ByteVector)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TextInformationFrame(TagLib.Id3v2.Tag, TagLib.ByteVector, TagLib.StringType, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.TextInformationFrame(TagLib.Id3v2.Tag, TagLib.ByteVector, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseRawData</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>Render</name>
                        <newname>fu</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringCollection)</signature>
                        <name>SetText</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>SetText</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>TagLib.StringCollection()</signature>
                        <name>get_FieldList</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Text</name>
                        <newname>fv</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Text</name>
                        <newname>fw</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>raw_data</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>raw_version</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>text_fields</name>
                        <newname>am</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.TimestampFormat</name>
                <newname>gx</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Id3v2.TimestampFormat</signature>
                        <name>AbsoluteMilliseconds</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.TimestampFormat</signature>
                        <name>AbsoluteMpegFrames</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.TimestampFormat</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.UniqueFileIdentifierFrame</name>
                <newname>g4</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UniqueFileIdentifierFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Identifier</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Owner</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Identifier</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>identifier</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>owner</name>
                        <newname>aq</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.UnknownFrame</name>
                <newname>g5</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>field_data</name>
                        <newname>as</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.UnsynchronisedLyricsFrame</name>
                <newname>g6</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.Frame()</signature>
                        <name>Clone</name>
                        <newname>ft</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UnsynchronisedLyricsFrame(TagLib.Id3v2.Tag, string, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UnsynchronisedLyricsFrame(TagLib.Id3v2.Tag, string, string)</signature>
                        <name>GetPreferred</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>ParseFields</name>
                        <newname>fr</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8)</signature>
                        <name>RenderFields</name>
                        <newname>fs</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Language</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringType()</signature>
                        <name>get_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Language</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.StringType)</signature>
                        <name>set_TextEncoding</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>encoding</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>language</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>text</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Id3v2.UserTextInformationFrame</name>
                <newname>g3</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, int32, TagLib.Id3v2.FrameHeader, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UserTextInformationFrame(TagLib.Id3v2.Tag, string)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UserTextInformationFrame(TagLib.Id3v2.Tag, string, TagLib.StringType, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UserTextInformationFrame(TagLib.Id3v2.Tag, string, TagLib.StringType, bool, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Id3v2.UserTextInformationFrame(TagLib.Id3v2.Tag, string, bool)</signature>
                        <name>Get</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Text</name>
                        <newname>fv</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Text</name>
                        <newname>fw</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.Codec</name>
                <newname>er</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoHeight</name>
                        <newname>dz</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoQuality</name>
                        <newname>d0</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoWidth</name>
                        <newname>dy</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PhotoHeight</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PhotoQuality</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PhotoWidth</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PhotoHeight&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PhotoQuality&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;PhotoWidth&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.CombinedImageTag</name>
                <newname>es</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageTag)</signature>
                        <name>AddTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageTag)</signature>
                        <name>RemoveTag</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Image.ImageTag&gt;()</signature>
                        <name>get_AllTags</name>
                        <newname>ow</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_AllowedTypes</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Altitude</name>
                        <newname>eg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTime</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDTag()</signature>
                        <name>get_Exif</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_ExposureTime</name>
                        <newname>ei</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FNumber</name>
                        <newname>ek</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FocalLength</name>
                        <newname>em</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FocalLengthIn35mmFilm</name>
                        <newname>e8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ISOSpeedRatings</name>
                        <newname>e6</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Keywords</name>
                        <newname>d2</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Latitude</name>
                        <newname>ec</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Longitude</name>
                        <newname>ee</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Make</name>
                        <newname>eo</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                        <newname>eq</newname>
                    </method>
                    <method>
                        <signature>TagLib.Image.ImageOrientation()</signature>
                        <name>get_Orientation</name>
                        <newname>d8</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Image.ImageTag&gt;()</signature>
                        <name>get_OtherTags</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_Rating</name>
                        <newname>d4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Software</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpTag()</signature>
                        <name>get_Xmp</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>set_AllowedTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Altitude</name>
                        <newname>eh</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTime</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDTag)</signature>
                        <name>set_Exif</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_ExposureTime</name>
                        <newname>ej</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FNumber</name>
                        <newname>el</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FocalLength</name>
                        <newname>en</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FocalLengthIn35mmFilm</name>
                        <newname>e9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ISOSpeedRatings</name>
                        <newname>e7</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Keywords</name>
                        <newname>d3</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Latitude</name>
                        <newname>ed</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Longitude</name>
                        <newname>ef</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Make</name>
                        <newname>ep</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Model</name>
                        <newname>er</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageOrientation)</signature>
                        <name>set_Orientation</name>
                        <newname>d9</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;TagLib.Image.ImageTag&gt;)</signature>
                        <name>set_OtherTags</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_Rating</name>
                        <newname>d5</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Software</name>
                        <newname>eb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpTag)</signature>
                        <name>set_Xmp</name>
                        <newname>ba</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>&lt;AllowedTypes&gt;k__BackingField</name>
                        <newname>i8</newname>
                    </field>
                    <field>
                        <signature>TagLib.IFD.IFDTag</signature>
                        <name>&lt;Exif&gt;k__BackingField</name>
                        <newname>i5</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Image.ImageTag&gt;</signature>
                        <name>&lt;OtherTags&gt;k__BackingField</name>
                        <newname>i7</newname>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpTag</signature>
                        <name>&lt;Xmp&gt;k__BackingField</name>
                        <newname>i6</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Image.ImageTag&gt;</signature>
                        <name>all_tags</name>
                        <newname>i9</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.File</name>
                <newname>et</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.File)</signature>
                        <name>CopyFrom</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EnsureAvailableTags</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>TagLib.Image.CombinedImageTag()</signature>
                        <name>get_ImageTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.CombinedImageTag)</signature>
                        <name>set_ImageTag</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Image.CombinedImageTag</signature>
                        <name>image_tag</name>
                        <newname>al</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.ImageBlockFile</name>
                <newname>eu</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>AddMetadataBlock</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>SaveMetadata</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Image.ImageBlockFile/MetadataBlock&gt;</signature>
                        <name>metadata_blocks</name>
                        <newname>an</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.ImageBlockFile/MetadataBlock</name>
                <newname>eu/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageBlockFile/MetadataBlock)</signature>
                        <name>Add</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Image.ImageBlockFile/MetadataBlock)</signature>
                        <name>Before</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Image.ImageBlockFile/MetadataBlock)</signature>
                        <name>OverlapsWith</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Length</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Start</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Length</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Start</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Length&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Start&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.ImageOrientation</name>
                <newname>ev</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>BottomLeft</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>BottomRight</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>LeftBottom</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>LeftTop</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>RightBottom</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>RightTop</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>TopLeft</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Image.ImageOrientation</signature>
                        <name>TopRight</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.ImageTag</name>
                <newname>ew</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Altitude</name>
                        <newname>eg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTime</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_ExposureTime</name>
                        <newname>ei</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FNumber</name>
                        <newname>ek</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FocalLength</name>
                        <newname>em</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FocalLengthIn35mmFilm</name>
                        <newname>e8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ISOSpeedRatings</name>
                        <newname>e6</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Keywords</name>
                        <newname>d2</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Latitude</name>
                        <newname>ec</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Longitude</name>
                        <newname>ee</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Make</name>
                        <newname>eo</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                        <newname>eq</newname>
                    </method>
                    <method>
                        <signature>TagLib.Image.ImageOrientation()</signature>
                        <name>get_Orientation</name>
                        <newname>d8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_Rating</name>
                        <newname>d4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Software</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Altitude</name>
                        <newname>eh</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTime</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_ExposureTime</name>
                        <newname>ej</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FNumber</name>
                        <newname>el</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FocalLength</name>
                        <newname>en</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FocalLengthIn35mmFilm</name>
                        <newname>e9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ISOSpeedRatings</name>
                        <newname>e7</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Keywords</name>
                        <newname>d3</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Latitude</name>
                        <newname>ed</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Longitude</name>
                        <newname>ef</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Make</name>
                        <newname>ep</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Model</name>
                        <newname>er</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageOrientation)</signature>
                        <name>set_Orientation</name>
                        <newname>d9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_Rating</name>
                        <newname>d5</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Software</name>
                        <newname>eb</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Image.NoMetadata.File</name>
                <newname>ex</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Jpeg.Codec</name>
                <newname>em</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Jpeg.File</name>
                <newname>en</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>ReadAPP13Segment</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>ReadAPP1Segment</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadCOMSegment</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadDQTSegment</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>ReadJFIFHeader</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadMetadata</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32, TagLib.Jpeg.Marker)</signature>
                        <name>ReadSOFSegment</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Jpeg.Marker()</signature>
                        <name>ReadSegmentMarker</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>ReadSegmentSize</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderCOMSegment</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderExifSegment</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderXMPSegment</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateHeader</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteMetadata</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>BASIC_JFIF_HEADER</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXIF_IDENTIFIER</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IPTC_IIM_IDENTIFIER</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>height</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>jfif_header</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>quality</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>width</name>
                        <newname>ap</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Jpeg.JpegCommentTag</name>
                <newname>eo</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>ba</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>i2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Jpeg.Marker</name>
                <newname>ep</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP0</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP1</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP10</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP11</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP12</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP13</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP14</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP15</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP2</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP3</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP4</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP5</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP6</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP7</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP8</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>APP9</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>COM</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DAC</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DHP</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DHT</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DNL</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DQT</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>DRI</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>EOI</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>EXP</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG0</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG1</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG10</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG11</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG12</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG13</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG2</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG3</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG4</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG5</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG6</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG7</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG8</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>JPG9</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST0</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST1</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST2</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST3</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST4</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST5</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST6</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>RST7</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF0</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF10</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF11</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF13</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF14</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF15</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF3</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF5</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF6</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF7</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOF9</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOI</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.Jpeg.Marker</signature>
                        <name>SOS</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Jpeg.Table</name>
                <newname>eq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[]</signature>
                        <name>StandardChrominanceQuantization</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>StandardLuminanceQuantization</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>TagLib.ListBase`1</name>
                <newname>bm</newname>
                <methodlist>
                    <method>
                        <signature>void(!0[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ListBase`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(!0[])</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;!0&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ListBase`1&lt;!0&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Contains</name>
                    </method>
                    <method>
                        <signature>void(!0[], int32)</signature>
                        <name>CopyTo</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(!0)</signature>
                        <name>IndexOf</name>
                    </method>
                    <method>
                        <signature>void(int32, !0)</signature>
                        <name>Insert</name>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Remove</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAt</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>SortedInsert</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(!0, bool)</signature>
                        <name>SortedInsert</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>!0[]()</signature>
                        <name>ToArray</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToString</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFixedSize</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsSynchronized</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>!0(int32)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SyncRoot</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(int32, !0)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;!0&gt;</signature>
                        <name>data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.AudioTrack</name>
                <newname>eb</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Matroska.File, TagLib.Matroska.EBMLElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;()</signature>
                        <name>get_UnknownElements</name>
                        <newname>q</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>channels</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>depth</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>rate</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;</signature>
                        <name>unknown_elems</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.EBMLElement</name>
                <newname>ec</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Matroska.File, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReadBool</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>ReadBytes</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>ReadDouble</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ReadString</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadUInt</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_DataOffset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_DataSize</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ID</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Offset</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>get_Size</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>data_offset</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>ebml_id</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>ebml_size</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.File</signature>
                        <name>file</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>offset</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.EBMLID</name>
                <newname>ed</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLDocType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLDocTypeReadVersion</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLDocTypeVersion</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLHeader</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLMaxIDLength</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLMaxSizeLength</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLReadVersion</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLVersion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.EBMLID</signature>
                        <name>EBMLVoid</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.File</name>
                <newname>ef</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadHeader</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadSegment</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadSegmentInfo</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadSimpleTag</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadTag</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadTags</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadTrackEntry</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Matroska.EBMLElement)</signature>
                        <name>ReadTracks</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>duration</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>duration_unscaled</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.Tag</signature>
                        <name>tag</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>time_scale</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.Track&gt;</signature>
                        <name>tracks</name>
                        <newname>ao</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.MatroskaID</name>
                <newname>eg</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAttachments</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAudioBitDepth</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAudioChannels</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAudioChannelsPositions</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAudioOutputSamplingFreq</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaAudioSamplingFreq</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaChapterTranslate</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaChapters</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCluster</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecDecodeAll</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecDownloadUrl</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecID</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecInfoUrl</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecName</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecPrivate</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCodecSettings</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaContentEncodings</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaCues</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaDateUTC</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaDuration</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaMaxBlockAdditionID</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaMuxingApp</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaNexFileName</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaNexUID</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaPrevFileName</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaPrevUID</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSeekHead</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSegment</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSegmentFamily</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSegmentFileName</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSegmentInfo</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSegmentUID</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaSimpleTag</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTag</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTagBinary</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTagDefault</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTagLanguage</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTagName</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTagString</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTargets</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTimeCodeScale</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTitle</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackAttachmentLink</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackAudio</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackDefaultDuration</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackEntry</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackFlagDefault</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackFlagEnabled</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackFlagForced</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackFlagLacing</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackLanguage</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackMaxCache</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackMinCache</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackName</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackNumber</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackOffset</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackOverlay</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackTimeCodeScale</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackTranslate</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackType</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackUID</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTrackVideo</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaTracks</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoAspectRatioType</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoColourSpace</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoDisplayHeight</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoDisplayUnit</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoDisplayWidth</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoFlagInterlaced</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoFrameRate</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoGammaValue</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelCropBottom</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelCropLeft</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelCropRight</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelCropTop</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelHeight</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoPixelWidth</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaVideoStereoMode</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.MatroskaID</signature>
                        <name>MatroskaWrittingApp</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.SubtitleTrack</name>
                <newname>eh</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Matroska.File, TagLib.Matroska.EBMLElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;()</signature>
                        <name>get_UnknownElements</name>
                        <newname>q</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;</signature>
                        <name>unknown_elems</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.Tag</name>
                <newname>ei</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>album</name>
                        <newname>h7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>author</name>
                        <newname>h6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>comments</name>
                        <newname>h8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>copyright</name>
                        <newname>ia</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>genres</name>
                        <newname>h9</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>h5</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.Track</name>
                <newname>ej</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Matroska.File, TagLib.Matroska.EBMLElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;()</signature>
                        <name>get_UnknownElements</name>
                        <newname>r</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>codec_data</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>track_codec_id</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>track_codec_name</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>track_default</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>track_enabled</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>track_language</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>track_name</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>track_number</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>track_uid</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;</signature>
                        <name>unknown_elems</name>
                        <newname>r</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.TrackType</name>
                <newname>ee</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Audio</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Buttons</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Complex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Control</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Logo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Subtitle</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.TrackType</signature>
                        <name>Video</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.VideoAspectRatioType</name>
                <newname>ek</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Matroska.VideoAspectRatioType</signature>
                        <name>AspectRatioModeFixed</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.VideoAspectRatioType</signature>
                        <name>AspectRatioModeFree</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.VideoAspectRatioType</signature>
                        <name>AspectRatioModeKeep</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Matroska.VideoTrack</name>
                <newname>el</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Matroska.File, TagLib.Matroska.EBMLElement)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;()</signature>
                        <name>get_UnknownElements</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>disp_height</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>disp_width</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>fourcc</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>framerate</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>height</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>interlaced</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.Matroska.VideoAspectRatioType</signature>
                        <name>ratio_type</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Matroska.EBMLElement&gt;</signature>
                        <name>unknown_elems</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>width</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.MediaTypes</name>
                <newname>bg</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.MediaTypes</signature>
                        <name>Audio</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.MediaTypes</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.MediaTypes</signature>
                        <name>Photo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.MediaTypes</signature>
                        <name>Text</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.MediaTypes</signature>
                        <name>Video</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.AudioFile</name>
                <newname>da</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg.AudioHeader</signature>
                        <name>first_header</name>
                        <newname>ag</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.AudioHeader</name>
                <newname>dd</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int64, TagLib.Mpeg.XingHeader, TagLib.Mpeg.VBRIHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Mpeg.AudioHeader&amp;, TagLib.File, int64)</signature>
                        <name>Find</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Mpeg.AudioHeader&amp;, TagLib.File, int64, int32)</signature>
                        <name>Find</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.ByteVector)</signature>
                        <name>GetHeaderError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>SetStreamLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioFrameLength</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioLayer</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.ChannelMode()</signature>
                        <name>get_ChannelMode</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCopyrighted</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsOriginal</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsPadded</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsProtected</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.VBRIHeader()</signature>
                        <name>get_VBRIHeader</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.Version()</signature>
                        <name>get_Version</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.XingHeader()</signature>
                        <name>get_XingHeader</name>
                        <newname>z</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg.AudioHeader</signature>
                        <name>Unknown</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...,0...]</signature>
                        <name>bitrates</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>block_size</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>duration</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>sample_rates</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.VBRIHeader</signature>
                        <name>vbri_header</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.XingHeader</signature>
                        <name>xing_header</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.ChannelMode</name>
                <newname>dc</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg.ChannelMode</signature>
                        <name>DualChannel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.ChannelMode</signature>
                        <name>JointStereo</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.ChannelMode</signature>
                        <name>SingleChannel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.ChannelMode</signature>
                        <name>Stereo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.File</name>
                <newname>df</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.Marker(int64&amp;)</signature>
                        <name>FindMarker</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.Marker(int64&amp;, TagLib.Mpeg.Marker)</signature>
                        <name>FindMarker</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.Marker(int64)</signature>
                        <name>GetMarker</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg.Marker(int64&amp;, TagLib.Mpeg.Marker)</signature>
                        <name>RFindMarker</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(int64&amp;)</signature>
                        <name>ReadAudioPacket</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>ReadSystemFile</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(int64&amp;)</signature>
                        <name>ReadSystemSyncPacket</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>float64(int64)</signature>
                        <name>ReadTimestamp</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(int64&amp;)</signature>
                        <name>ReadVideoPacket</name>
                        <newname>ay</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>MarkerStart</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>audio_found</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.AudioHeader</signature>
                        <name>audio_header</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>end_time</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;float64&gt;</signature>
                        <name>start_time</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Version</signature>
                        <name>version</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>video_found</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.VideoHeader</signature>
                        <name>video_header</name>
                        <newname>aj</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.Marker</name>
                <newname>de</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>AudioPacket</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>Corrupt</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>EndOfStream</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>PaddingPacket</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>SystemPacket</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>SystemSyncPacket</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>VideoPacket</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>VideoSyncPacket</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Marker</signature>
                        <name>Zero</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.VBRIHeader</name>
                <newname>dg</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>VBRIHeaderOffset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Present</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalFrames</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalSize</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.VBRIHeader</signature>
                        <name>Unknown</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>frames</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>present</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.Version</name>
                <newname>db</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg.Version</signature>
                        <name>Unknown</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Version</signature>
                        <name>Version1</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Version</signature>
                        <name>Version2</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.Version</signature>
                        <name>Version25</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.VideoHeader</name>
                <newname>dh</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoBitrate</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_VideoFrameRate</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>bitrate</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frame_rate_index</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64[]</signature>
                        <name>frame_rates</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg.XingHeader</name>
                <newname>di</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(TagLib.Mpeg.Version, TagLib.Mpeg.ChannelMode)</signature>
                        <name>XingHeaderOffset</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Present</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalFrames</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalSize</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg.XingHeader</signature>
                        <name>Unknown</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>frames</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>present</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleAdditionalInfoBox</name>
                <newname>dl</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleAnnotationBox</name>
                <newname>dm</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleDataBox</name>
                <newname>dn</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>Render</name>
                        <newname>fm</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleDataBox/FlagType</name>
                <newname>dn/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox/FlagType</signature>
                        <name>ContainsData</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox/FlagType</signature>
                        <name>ContainsJpegData</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox/FlagType</signature>
                        <name>ContainsPngData</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox/FlagType</signature>
                        <name>ContainsText</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox/FlagType</signature>
                        <name>ForTempo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleElementaryStreamDescriptor</name>
                <newname>do</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(TagLib.ByteVector, int32&amp;)</signature>
                        <name>ReadLength</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_AverageBitrate</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BufferSizeDB</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_DecoderConfig</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MaximumBitrate</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_ObjectTypeId</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_StreamId</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_StreamPriority</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_StreamType</name>
                        <newname>bb</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>average_bitrate</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>buffer_size_db</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>decoder_config</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>es_id</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>max_bitrate</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>object_type_id</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>stream_priority</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>stream_type</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleItemListBox</name>
                <newname>dp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>v</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleTag</name>
                <newname>dj</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.IsoUserDataBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>ClearData</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.AppleDataBox&gt;(System.Collections.Generic.IEnumerable`1&lt;TagLib.ByteVector&gt;)</signature>
                        <name>DataBoxes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.AppleDataBox&gt;(TagLib.ByteVector[])</signature>
                        <name>DataBoxes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.AppleDataBox&gt;(string, string)</signature>
                        <name>DataBoxes</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DetachIlst</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector(TagLib.ByteVector)</signature>
                        <name>FixId</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.AppleDataBox(string, string)</signature>
                        <name>GetDashAtoms</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetDashBox</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.AppleAnnotationBox(string, string)</signature>
                        <name>GetParentDashBox</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.ByteVector)</signature>
                        <name>GetText</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>SetDashBox</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector, unsigned int32)</signature>
                        <name>SetData</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVectorCollection, unsigned int32)</signature>
                        <name>SetData</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.Mpeg4.AppleDataBox[])</signature>
                        <name>SetData</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, string)</signature>
                        <name>SetText</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, string[])</signature>
                        <name>SetText</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompilation</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompilation</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg4.AppleItemListBox</signature>
                        <name>ilst_box</name>
                        <newname>g6</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.IsoMetaBox</signature>
                        <name>meta_box</name>
                        <newname>g5</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleTag/&lt;DataBoxes&gt;d__6</name>
                <newname>dj/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally3</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.AppleDataBox&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.AppleDataBox()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Mpeg4.AppleDataBox&gt;.get_Current</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.ByteVector&gt;</signature>
                        <name>&lt;&gt;3__types</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleTag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.ByteVector&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>&lt;&gt;7__wrap3</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.Box</signature>
                        <name>&lt;box&gt;5__1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.ByteVector&gt;</signature>
                        <name>types</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.AppleTag/&lt;DataBoxes&gt;d__8</name>
                <newname>dj/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.AppleDataBox&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TagLib.Mpeg4.AppleDataBox&gt;.GetEnumerator</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.AppleDataBox()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TagLib.Mpeg4.AppleDataBox&gt;.get_Current</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleDataBox</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__mean</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;3__name</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.AppleTag</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>&lt;&gt;7__wrap2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mean</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.Box</name>
                <newname>dk</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.Box)</signature>
                        <name>AddChild</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearChildren</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.ByteVector)</signature>
                        <name>GetChild</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.ByteVector)</signature>
                        <name>GetChildRecursively</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;(TagLib.File)</signature>
                        <name>LoadChildren</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.File)</signature>
                        <name>LoadData</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>RemoveChild</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.Box)</signature>
                        <name>RemoveChild</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>Render</name>
                        <newname>fm</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_BoxType</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DataSize</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoHandlerBox()</signature>
                        <name>get_Handler</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasChildren</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.BoxHeader()</signature>
                        <name>get_Header</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>data_position</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.IsoHandlerBox</signature>
                        <name>handler</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader</signature>
                        <name>header</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.BoxFactory</name>
                <newname>d4</newname>
                <methodlist>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, TagLib.Mpeg4.BoxHeader)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, TagLib.Mpeg4.BoxHeader, TagLib.Mpeg4.BoxHeader, TagLib.Mpeg4.IsoHandlerBox, int32)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, TagLib.Mpeg4.BoxHeader, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, int64)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, int64, TagLib.Mpeg4.BoxHeader, TagLib.Mpeg4.IsoHandlerBox, int32)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box(TagLib.File, int64, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>CreateBox</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.BoxHeader</name>
                <newname>d5</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64(TagLib.File, int64)</signature>
                        <name>Overwrite</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box()</signature>
                        <name>get_Box</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_BoxType</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataOffset</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataSize</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_ExtendedType</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_HeaderSize</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Position</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalBoxSize</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.Box)</signature>
                        <name>set_Box</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DataSize</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader</signature>
                        <name>Empty</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.Box</signature>
                        <name>box</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>box_size</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>box_type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>extended_type</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>from_disk</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>header_size</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>position</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.BoxType</name>
                <newname>d6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Aart</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Alb</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Alis</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Art</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Cmt</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Co64</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Cond</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Covr</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Cpil</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Cprt</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>DASH</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Data</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Day</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Disk</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Esds</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Free</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Gen</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Gnre</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Grp</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Hdlr</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Ilst</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Lyr</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Mdat</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Mdia</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Mean</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Meta</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Minf</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Moov</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Mvhd</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Nam</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Name</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Skip</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Soaa</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Soal</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Soar</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Soco</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Sonm</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Soun</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Stbl</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Stco</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Stsd</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Text</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Tmpo</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Trak</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Trkn</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Udta</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Url</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Uuid</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Vide</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>Wrt</name>
                        <newname>at</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.File</name>
                <newname>d7</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoUserDataBox()</signature>
                        <name>FindAppleTagUdta</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsAppleTagUdtaPresent</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.IsoUserDataBox&gt;()</signature>
                        <name>get_UdtaBoxes</name>
                        <newname>az</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg4.AppleTag</signature>
                        <name>apple_tag</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>TagLib.CombinedTag</signature>
                        <name>tag</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.IsoUserDataBox&gt;</signature>
                        <name>udta_boxes</name>
                        <newname>aj</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.File/&lt;&gt;c</name>
                <newname>d7/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Mpeg4.IsoUserDataBox)</signature>
                        <name>&lt;FindAppleTagUdta&gt;b__18_0</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.Mpeg4.IsoUserDataBox)</signature>
                        <name>&lt;FindAppleTagUdta&gt;b__18_1</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Mpeg4.File/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;TagLib.Mpeg4.IsoUserDataBox,bool&gt;</signature>
                        <name>&lt;&gt;9__18_0</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;TagLib.Mpeg4.IsoUserDataBox,int32&gt;</signature>
                        <name>&lt;&gt;9__18_1</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.FileParser</name>
                <newname>d8</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.BoxHeader&gt;(System.Collections.Generic.List`1&lt;TagLib.Mpeg4.BoxHeader&gt;, TagLib.Mpeg4.BoxHeader)</signature>
                        <name>AddParent</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseBoxHeaders</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64, System.Collections.Generic.List`1&lt;TagLib.Mpeg4.BoxHeader&gt;)</signature>
                        <name>ParseBoxHeaders</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseChunkOffsets</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>ParseChunkOffsets</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseTag</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64, System.Collections.Generic.List`1&lt;TagLib.Mpeg4.BoxHeader&gt;)</signature>
                        <name>ParseTag</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ParseTagAndProperties</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(int64, int64, TagLib.Mpeg4.IsoHandlerBox, System.Collections.Generic.List`1&lt;TagLib.Mpeg4.BoxHeader&gt;)</signature>
                        <name>ParseTagAndProperties</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetFields</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoAudioSampleEntry()</signature>
                        <name>get_AudioSampleEntry</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.Box[]()</signature>
                        <name>get_ChunkOffsetBoxes</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_MdatEndPosition</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_MdatStartPosition</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.BoxHeader[]()</signature>
                        <name>get_MoovTree</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoMovieHeaderBox()</signature>
                        <name>get_MovieHeaderBox</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.BoxHeader[]()</signature>
                        <name>get_UdtaTree</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoUserDataBox()</signature>
                        <name>get_UserDataBox</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoUserDataBox[]()</signature>
                        <name>get_UserDataBoxes</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.IsoVisualSampleEntry()</signature>
                        <name>get_VisualSampleEntry</name>
                        <newname>p</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.File</signature>
                        <name>file</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader</signature>
                        <name>first_header</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>mdat_end</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>mdat_start</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader[]</signature>
                        <name>moov_tree</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.IsoMovieHeaderBox</signature>
                        <name>mvhd_box</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>stco_boxes</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>stsd_boxes</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Mpeg4.IsoUserDataBox&gt;</signature>
                        <name>udta_boxes</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader[]</signature>
                        <name>udta_tree</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.FullBox</name>
                <newname>dq</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int8, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, unsigned int8, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>Render</name>
                        <newname>fm</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Flags</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Version</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Flags</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Version</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>version</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoAudioSampleEntry</name>
                <newname>dr</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleSize</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>channel_count</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>sample_rate</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>sample_size</name>
                        <newname>z</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoChunkLargeOffsetBox</name>
                <newname>ds</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.File, int64, int64)</signature>
                        <name>Overwrite</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int64, int64)</signature>
                        <name>Render</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>unsigned int64[]()</signature>
                        <name>get_Offsets</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64[]</signature>
                        <name>offsets</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoChunkOffsetBox</name>
                <newname>dt</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.File, int64, int64)</signature>
                        <name>Overwrite</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int64, int64)</signature>
                        <name>Render</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>unsigned int32[]()</signature>
                        <name>get_Offsets</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>offsets</name>
                        <newname>ai</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoFreeSpaceBox</name>
                <newname>du</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_PaddingSize</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_PaddingSize</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>padding</name>
                        <newname>ak</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoHandlerBox</name>
                <newname>dv</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_HandlerType</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>a9</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>handler_type</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>an</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoMetaBox</name>
                <newname>dw</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>ap</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoMovieHeaderBox</name>
                <newname>dx</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTime</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModificationTime</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_NextTrackId</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Rate</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Volume</name>
                        <newname>bc</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>creation_time</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>duration</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>modification_time</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>next_track_id</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>rate</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>timescale</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>volume</name>
                        <newname>av</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoSampleDescriptionBox</name>
                <newname>dy</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_EntryCount</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>entry_count</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoSampleEntry</name>
                <newname>dz</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_DataReferenceIndex</name>
                        <newname>a9</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>data_reference_index</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoSampleTableBox</name>
                <newname>d0</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>aw</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoUserDataBox</name>
                <newname>d1</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>get_Children</name>
                        <newname>fl</newname>
                    </method>
                    <method>
                        <signature>TagLib.Mpeg4.BoxHeader[]()</signature>
                        <name>get_ParentTree</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader[])</signature>
                        <name>set_ParentTree</name>
                        <newname>a8</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;</signature>
                        <name>children</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>TagLib.Mpeg4.BoxHeader[]</signature>
                        <name>parent_tree</name>
                        <newname>a1</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Mpeg4.Box&gt;()</signature>
                        <name>Children</name>
                        <newname>a0</newname>
                    </property>
                    <property>
                        <signature>TagLib.Mpeg4.BoxHeader[]()</signature>
                        <name>ParentTree</name>
                        <newname>a1</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.IsoVisualSampleEntry</name>
                <newname>d2</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataPosition</name>
                        <newname>fn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>height</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>width</name>
                        <newname>a2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Mpeg4.UnknownBox</name>
                <newname>d3</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>a2</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.MusePack.File</name>
                <newname>d9</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>header_block</name>
                        <newname>ai</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.MusePack.StreamHeader</name>
                <newname>ea</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.MusePack.StreamHeader)</signature>
                        <name>Equals</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Version</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.MusePack.StreamHeader, TagLib.MusePack.StreamHeader)</signature>
                        <name>op_Equality</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.MusePack.StreamHeader, TagLib.MusePack.StreamHeader)</signature>
                        <name>op_Inequality</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>frames</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>header_data</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sample_rate</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int16[]</signature>
                        <name>sftable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.NonContainer.EndTag</name>
                <newname>c6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, TagLib.Tag)</signature>
                        <name>AddTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>Read</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(int64&amp;)</signature>
                        <name>ReadTag</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes(int64&amp;)</signature>
                        <name>ReadTagInfo</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>Write</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalSize</name>
                        <newname>os</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.File</signature>
                        <name>file</name>
                        <newname>gz</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>read_size</name>
                        <newname>g0</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.NonContainer.File</name>
                <newname>c7</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.NonContainer.EndTag()</signature>
                        <name>get_EndTag</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.NonContainer.StartTag()</signature>
                        <name>get_StartTag</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.NonContainer.Tag</signature>
                        <name>tag</name>
                        <newname>ae</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.NonContainer.StartTag</name>
                <newname>c8</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, TagLib.Tag)</signature>
                        <name>AddTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>Read</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(int64&amp;)</signature>
                        <name>ReadTag</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes(int64&amp;)</signature>
                        <name>ReadTagInfo</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>Write</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalSize</name>
                        <newname>os</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.File</signature>
                        <name>file</name>
                        <newname>g0</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>read_size</name>
                        <newname>g1</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.NonContainer.Tag</name>
                <newname>c9</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.NonContainer.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes)</signature>
                        <name>GetTag</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(int64&amp;, int64&amp;)</signature>
                        <name>Read</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>ReadEnd</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>ReadStart</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(int64&amp;, int64&amp;)</signature>
                        <name>Write</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.NonContainer.EndTag()</signature>
                        <name>get_EndTag</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>TagLib.NonContainer.StartTag()</signature>
                        <name>get_StartTag</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag[]()</signature>
                        <name>get_Tags</name>
                        <newname>fk</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.NonContainer.EndTag</signature>
                        <name>end_tag</name>
                        <newname>g2</newname>
                    </field>
                    <field>
                        <signature>TagLib.NonContainer.StartTag</signature>
                        <name>start_tag</name>
                        <newname>g1</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Bitstream</name>
                <newname>cv</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Ogg.Page)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan(int64)</signature>
                        <name>GetDuration</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector)</signature>
                        <name>ReadPacket</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ogg.Page)</signature>
                        <name>ReadPage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec()</signature>
                        <name>get_Codec</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Ogg.Codec</signature>
                        <name>codec</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>first_absolute_granular_position</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>packet_index</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>previous_packet</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codec</name>
                <newname>cw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.Codec/CodecProvider)</signature>
                        <name>AddCodecProvider</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec(TagLib.ByteVector)</signature>
                        <name>GetCodec</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan(int64, int64)</signature>
                        <name>GetDuration</name>
                        <newname>fh</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32)</signature>
                        <name>ReadPacket</name>
                        <newname>fg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection, TagLib.Ogg.XiphComment)</signature>
                        <name>SetCommentPacket</name>
                        <newname>fi</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_CommentData</name>
                        <newname>fj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Ogg.Codec/CodecProvider&gt;</signature>
                        <name>providers</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codec/CodecProvider</name>
                <newname>cw/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(TagLib.ByteVector, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec(TagLib.ByteVector)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codecs.Theora</name>
                <newname>c4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec(TagLib.ByteVector)</signature>
                        <name>FromPacket</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan(int64, int64)</signature>
                        <name>GetDuration</name>
                        <newname>fh</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>PacketType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32)</signature>
                        <name>ReadPacket</name>
                        <newname>fg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection, TagLib.Ogg.XiphComment)</signature>
                        <name>SetCommentPacket</name>
                        <newname>fi</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_CommentData</name>
                        <newname>fj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>comment_data</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.Codecs.Theora/HeaderPacket</signature>
                        <name>header</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>id</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codecs.Theora/HeaderPacket</name>
                <newname>c4/a</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(int64)</signature>
                        <name>GranuleTime</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>fps_denominator</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fps_numerator</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>keyframe_granule_shift</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>major_version</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minor_version</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>revision_version</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codecs.Vorbis</name>
                <newname>c5</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Codec(TagLib.ByteVector)</signature>
                        <name>FromPacket</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan(int64, int64)</signature>
                        <name>GetDuration</name>
                        <newname>fh</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVector)</signature>
                        <name>PacketType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.ByteVector, int32)</signature>
                        <name>ReadPacket</name>
                        <newname>fg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection, TagLib.Ogg.XiphComment)</signature>
                        <name>SetCommentPacket</name>
                        <newname>fi</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_CommentData</name>
                        <newname>fj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>comment_data</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.Codecs.Vorbis/HeaderPacket</signature>
                        <name>header</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>id</name>
                        <newname>k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Codecs.Vorbis/HeaderPacket</name>
                <newname>c5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>bitrate_maximum</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>bitrate_minimum</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>bitrate_nominal</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>channels</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>sample_rate</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>vorbis_version</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.File</name>
                <newname>cx</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;unsigned int32,TagLib.Ogg.Bitstream&gt;(System.Collections.Generic.List`1&lt;TagLib.Ogg.Page&gt;, int64&amp;)</signature>
                        <name>ReadStreams</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.PageHeader()</signature>
                        <name>get_LastPageHeader</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.GroupedComment</signature>
                        <name>tag</name>
                        <newname>ac</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.GroupedComment</name>
                <newname>cy</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, TagLib.ByteVector)</signature>
                        <name>AddComment</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, TagLib.Ogg.XiphComment)</signature>
                        <name>AddComment</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.XiphComment(unsigned int32)</signature>
                        <name>GetComment</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.Ogg.XiphComment&gt;()</signature>
                        <name>get_Comments</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;unsigned int32,TagLib.Ogg.XiphComment&gt;</signature>
                        <name>comment_hash</name>
                        <newname>em</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Ogg.XiphComment&gt;</signature>
                        <name>tags</name>
                        <newname>eo</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Page</name>
                <newname>cz</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection, TagLib.Ogg.PageHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.PageHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.File, int64, System.Collections.Generic.IDictionary`2&lt;unsigned int32,int32&gt;)</signature>
                        <name>OverwriteSequenceNumbers</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.PageHeader()</signature>
                        <name>get_Header</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector[]()</signature>
                        <name>get_Packets</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Size</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Ogg.PageHeader</signature>
                        <name>header</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVectorCollection</signature>
                        <name>packets</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.PageFlags</name>
                <newname>c0</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Ogg.PageFlags</signature>
                        <name>FirstPacketContinued</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.PageFlags</signature>
                        <name>FirstPageOfStream</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.PageFlags</signature>
                        <name>LastPageOfStream</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.PageFlags</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.PageHeader</name>
                <newname>c1</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Ogg.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.PageHeader, unsigned int32, TagLib.Ogg.PageFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, TagLib.Ogg.PageFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ogg.PageHeader)</signature>
                        <name>Equals</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_AbsoluteGranularPosition</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DataSize</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.PageFlags()</signature>
                        <name>get_Flags</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_LacingValues</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_PacketSizes</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_PageSequenceNumber</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Size</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_StreamSerialNumber</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ogg.PageHeader, TagLib.Ogg.PageHeader)</signature>
                        <name>op_Equality</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Ogg.PageHeader, TagLib.Ogg.PageHeader)</signature>
                        <name>op_Inequality</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>set_PacketSizes</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>absolute_granular_position</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>data_size</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.Ogg.PageFlags</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int32&gt;</signature>
                        <name>packet_sizes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>page_sequence_number</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>stream_serial_number</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>version</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.Paginator</name>
                <newname>c2</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Ogg.Codec)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.Page)</signature>
                        <name>AddPage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(TagLib.ByteVectorCollection, int32)</signature>
                        <name>GetLacingValueLength</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Page[]()</signature>
                        <name>Paginate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.Ogg.Page[](int32&amp;)</signature>
                        <name>Paginate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Ogg.XiphComment)</signature>
                        <name>SetComment</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Ogg.Codec</signature>
                        <name>codec</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;TagLib.Ogg.PageHeader&gt;</signature>
                        <name>first_page_header</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVectorCollection</signature>
                        <name>packets</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pages_read</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Ogg.XiphComment</name>
                <newname>c3</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>string[](string)</signature>
                        <name>GetField</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFirstField</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RemoveField</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(bool)</signature>
                        <name>Render</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string[])</signature>
                        <name>SetField</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, unsigned int32)</signature>
                        <name>SetField</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_FieldCount</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCompilation</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumGain</name>
                        <newname>c9</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumPeak</name>
                        <newname>db</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackGain</name>
                        <newname>c5</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackPeak</name>
                        <newname>c7</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VendorId</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCompilation</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumGain</name>
                        <newname>da</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumPeak</name>
                        <newname>dc</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackGain</name>
                        <newname>c6</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackPeak</name>
                        <newname>c8</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>comment_field</name>
                        <newname>fv</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string[]&gt;</signature>
                        <name>field_list</name>
                        <newname>ft</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>vendor_id</name>
                        <newname>fu</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Picture</name>
                <newname>br</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Picture(TagLib.File/IFileAbstraction)</signature>
                        <name>CreateFromFile</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>TagLib.Picture(string)</signature>
                        <name>CreateFromPath</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FillInMimeFromData</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>dp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>dl</newname>
                    </method>
                    <method>
                        <signature>TagLib.PictureType()</signature>
                        <name>get_Type</name>
                        <newname>dn</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>ds</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Description</name>
                        <newname>dq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MimeType</name>
                        <newname>dm</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.PictureType)</signature>
                        <name>set_Type</name>
                        <newname>do</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mime_type</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>type</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.PictureType</name>
                <newname>bp</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Artist</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>BackCover</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Band</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>BandLogo</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>ColoredFish</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Composer</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Conductor</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>DuringPerformance</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>DuringRecording</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>FileIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>FrontCover</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Illustration</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>LeadArtist</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>LeafletPage</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Lyricist</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Media</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>MovieScreenCapture</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>Other</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>OtherFileIcon</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>PublisherLogo</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TagLib.PictureType</signature>
                        <name>RecordingLocation</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Png.Codec</name>
                <newname>cs</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Png.File</name>
                <newname>ct</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BuildCRCTable</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector, TagLib.ByteVector)</signature>
                        <name>CheckCRC</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector[])</signature>
                        <name>ComputeCRC</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int8, TagLib.ByteVector)</signature>
                        <name>Decompress</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>Inflate</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>ReadCRC</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(int32)</signature>
                        <name>ReadChunkData</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ReadChunkLength</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>ReadChunkType</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadIHDRChunk</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.ByteVector, int32, int32&amp;)</signature>
                        <name>ReadKeyword</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadMetadata</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>string(TagLib.ByteVector, int32, int32&amp;)</signature>
                        <name>ReadTerminatedString</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadiTXtChunk</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadtEXtChunk</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReadzTXtChunk</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderKeywordChunks</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderXMPChunk</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveMetadata</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SkipChunkData</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateHeader</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HEADER</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>IEND_CHUNK_TYPE</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>IHDR_CHUNK_TYPE</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>XMP_CHUNK_HEADER</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>crc_table</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>iTXt_CHUNK_TYPE</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>tEXt_CHUNK_TYPE</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>zTXt_CHUNK_TYPE</name>
                        <newname>ag</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Png.PngTag</name>
                <newname>cu</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetKeyword</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>SetKeyword</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTime</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Software</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTime</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Software</name>
                        <newname>eb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AUTHOR</name>
                        <newname>ep</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COMMENT</name>
                        <newname>ez</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>COPYRIGHT</name>
                        <newname>et</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CREATION_TIME</name>
                        <newname>eu</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DESCRIPTION</name>
                        <newname>er</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DISCLAIMER</name>
                        <newname>ew</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SOFTWARE</name>
                        <newname>ev</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SOURCE</name>
                        <newname>ey</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TITLE</name>
                        <newname>en</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>WARNING</name>
                        <newname>ex</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>keyword_store</name>
                        <newname>e0</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Properties</name>
                <newname>bs</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan, System.Collections.Generic.IEnumerable`1&lt;TagLib.ICodec&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.TimeSpan, TagLib.ICodec[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;TagLib.ICodec&gt;()</signature>
                        <name>get_Codecs</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoHeight</name>
                        <newname>dz</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoQuality</name>
                        <newname>d0</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PhotoWidth</name>
                        <newname>dy</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ICodec[]</signature>
                        <name>codecs</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>duration</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.ReadOnlyByteVector</name>
                <newname>bt</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFixedSize</name>
                        <newname>d1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector(string)</signature>
                        <name>op_Implicit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector(unsigned int8)</signature>
                        <name>op_Implicit</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TagLib.ReadOnlyByteVector(unsigned int8[])</signature>
                        <name>op_Implicit</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.ReadStyle</name>
                <newname>bc</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadStyle</signature>
                        <name>Average</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadStyle</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviAudioStream</name>
                <newname>ci</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Riff.AviStreamHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector, int32, int32)</signature>
                        <name>ParseItem</name>
                        <newname>fc</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviHeader</name>
                <newname>cg</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Flags</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Height</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_InitialFrames</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MaxBytesPerSecond</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_MicrosecondsPerFrame</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Streams</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_SuggestedBufferSize</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TotalFrames</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Width</name>
                        <newname>r</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>height</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>initial_frames</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>max_bytes_per_second</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>microseconds_per_frame</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>streams</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>suggested_buffer_size</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>total_frames</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>width</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviHeaderList</name>
                <newname>cf</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ICodec[]()</signature>
                        <name>get_Codecs</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.Riff.AviHeader()</signature>
                        <name>get_Header</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.ICodec&gt;</signature>
                        <name>codecs</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Riff.AviHeader</signature>
                        <name>header</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviStream</name>
                <newname>ch</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Riff.AviStreamHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector, int32, int32)</signature>
                        <name>ParseItem</name>
                        <newname>fc</newname>
                    </method>
                    <method>
                        <signature>TagLib.Riff.AviStream(TagLib.ByteVector)</signature>
                        <name>ParseStreamList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.ICodec()</signature>
                        <name>get_Codec</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TagLib.Riff.AviStreamHeader()</signature>
                        <name>get_Header</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ICodec)</signature>
                        <name>set_Codec</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ICodec</signature>
                        <name>codec</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.Riff.AviStreamHeader</signature>
                        <name>header</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviStreamHeader</name>
                <newname>ck</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Bottom</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Flags</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Handler</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_InitialFrames</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Left</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Length</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Priority</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Quality</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Rate</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Right</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_SampleSize</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Scale</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Start</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_SuggestedBufferSize</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Top</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Type</name>
                        <newname>q</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>bottom</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>handler</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>initial_frames</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>left</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>length</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>priority</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>quality</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>rate</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>right</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>sample_size</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>scale</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>start</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>suggested_buffer_size</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>top</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>type</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.AviVideoStream</name>
                <newname>cj</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Riff.AviStreamHeader)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector, int32, int32)</signature>
                        <name>ParseItem</name>
                        <newname>fc</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.BitmapInfoHeader</name>
                <newname>cl</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.BitmapInfoHeader)</signature>
                        <name>Equals</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_BitCount</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ColorsUsed</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_CompressionId</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_HeaderSize</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ImageSize</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_ImportantColors</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Planes</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoHeight</name>
                        <newname>dx</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VideoWidth</name>
                        <newname>dw</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_XPixelsPerMeter</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_YPixelsPerMeter</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.BitmapInfoHeader, TagLib.Riff.BitmapInfoHeader)</signature>
                        <name>op_Equality</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.BitmapInfoHeader, TagLib.Riff.BitmapInfoHeader)</signature>
                        <name>op_Inequality</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>bit_count</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>colors_important</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>colors_used</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>compression_id</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>height</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>planes</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>size_of_image</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>width</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>x_pixels_per_meter</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>y_pixels_per_meter</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.DivXTag</name>
                <newname>cm</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Riff.File, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>d4</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>artist</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>comment</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>extra_data</name>
                        <newname>d2</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>genre</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>year</name>
                        <newname>dz</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.File</name>
                <newname>cn</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(bool, TagLib.ReadStyle, unsigned int32&amp;, int64&amp;, int64&amp;)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.TagTypes)</signature>
                        <name>RemoveTags</name>
                        <newname>fe</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag()</signature>
                        <name>get_Tag</name>
                        <newname>fd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>TagLib.Riff.DivXTag</signature>
                        <name>divx_tag</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>TagLib.Id3v2.Tag</signature>
                        <name>id32_tag</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>TagLib.Riff.InfoTag</signature>
                        <name>info_tag</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>TagLib.Riff.MovieIdTag</signature>
                        <name>mid_tag</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>TagLib.CombinedTag</signature>
                        <name>tag</name>
                        <newname>z</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.InfoTag</name>
                <newname>co</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderEnclosed</name>
                        <newname>ff</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.List</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(TagLib.ByteVector)</signature>
                        <name>GetValueAsUInt</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVectorCollection(TagLib.ByteVector)</signature>
                        <name>GetValues</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringCollection(TagLib.ByteVector)</signature>
                        <name>GetValuesAsStringCollection</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.ByteVector)</signature>
                        <name>GetValuesAsStrings</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>Parse</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>RemoveValue</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>RenderEnclosed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, System.Collections.Generic.IEnumerable`1&lt;TagLib.ByteVector&gt;)</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, System.Collections.Generic.IEnumerable`1&lt;string&gt;)</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector[])</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, string[])</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int32)</signature>
                        <name>SetValue</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.ListTag</name>
                <newname>cp</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Riff.List)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(TagLib.ByteVector)</signature>
                        <name>GetValueAsUInt</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVectorCollection(TagLib.ByteVector)</signature>
                        <name>GetValues</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.StringCollection(TagLib.ByteVector)</signature>
                        <name>GetValuesAsStringCollection</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string[](TagLib.ByteVector)</signature>
                        <name>GetValuesAsStrings</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>RemoveValue</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>Render</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderEnclosed</name>
                        <newname>ff</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(TagLib.ByteVector)</signature>
                        <name>RenderEnclosed</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVectorCollection)</signature>
                        <name>SetValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.ByteVector[])</signature>
                        <name>SetValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, TagLib.StringCollection)</signature>
                        <name>SetValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, string[])</signature>
                        <name>SetValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, unsigned int32)</signature>
                        <name>SetValue</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Riff.List</signature>
                        <name>fields</name>
                        <newname>ee</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.MovieIdTag</name>
                <newname>cq</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File, int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>RenderEnclosed</name>
                        <newname>ff</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Riff.WaveFormatEx</name>
                <newname>cr</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.WaveFormatEx)</signature>
                        <name>Equals</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>TagLib.ILosslessAudioCodec.get_BitsPerSample</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_AverageBytesPerSecond</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_FormatTag</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.WaveFormatEx, TagLib.Riff.WaveFormatEx)</signature>
                        <name>op_Equality</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.Riff.WaveFormatEx, TagLib.Riff.WaveFormatEx)</signature>
                        <name>op_Inequality</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>average_bytes_per_second</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>bits_per_sample</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>channels</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>format_tag</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>samples_per_second</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.StringCollection</name>
                <newname>bu</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVectorCollection, TagLib.StringType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.StringCollection)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.StringCollection(string, string)</signature>
                        <name>Split</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.StringType</name>
                <newname>a7</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>Latin1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>UTF16</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>UTF16BE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>UTF16LE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TagLib.StringType</signature>
                        <name>UTF8</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.SupportedMimeType</name>
                <newname>bv</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_AllExtensions</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;string&gt;()</signature>
                        <name>get_AllMimeTypes</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MimeType</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>extension</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mimetype</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.SupportedMimeType&gt;</signature>
                        <name>mimetypes</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.SupportedMimeType/&lt;get_AllExtensions&gt;d__13</name>
                <newname>bv/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.SupportedMimeType&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.SupportedMimeType/&lt;get_AllMimeTypes&gt;d__11</name>
                <newname>bv/a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;&gt;m__Finally1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;string&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;System.String&gt;.GetEnumerator</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;System.String&gt;.get_Current</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1/Enumerator&lt;TagLib.SupportedMimeType&gt;</signature>
                        <name>&lt;&gt;7__wrap1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tag</name>
                <newname>bw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag, bool)</signature>
                        <name>CopyTo</name>
                        <newname>fx</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Tag, TagLib.Tag, bool)</signature>
                        <name>Duplicate</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string[])</signature>
                        <name>FirstInGroup</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsNullOrLikeEmpty</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>bool(string[])</signature>
                        <name>IsNullOrLikeEmpty</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(string[])</signature>
                        <name>JoinGroup</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Album</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtists</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_AlbumArtistsSort</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AlbumSort</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AmazonId</name>
                        <newname>cv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Artists</name>
                        <newname>o7</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_BeatsPerMinute</name>
                        <newname>cd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Composers</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_ComposersSort</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Conductor</name>
                        <newname>cf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Disc</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_DiscCount</name>
                        <newname>b7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstAlbumArtist</name>
                        <newname>o9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstAlbumArtistSort</name>
                        <newname>pa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstArtist</name>
                        <newname>o8</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstComposer</name>
                        <newname>pe</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstComposerSort</name>
                        <newname>pd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstGenre</name>
                        <newname>pf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstPerformer</name>
                        <newname>pb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstPerformerSort</name>
                        <newname>pc</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Genres</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Grouping</name>
                        <newname>cb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEmpty</name>
                        <newname>dd</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedAlbumArtists</name>
                        <newname>ph</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedArtists</name>
                        <newname>pg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedComposers</name>
                        <newname>pk</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedGenres</name>
                        <newname>pl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedPerformers</name>
                        <newname>pi</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_JoinedPerformersSort</name>
                        <newname>pj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Lyrics</name>
                        <newname>b9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzArtistId</name>
                        <newname>cj</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzDiscId</name>
                        <newname>cr</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseArtistId</name>
                        <newname>cn</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseCountry</name>
                        <newname>c1</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseId</name>
                        <newname>cl</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseStatus</name>
                        <newname>cx</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzReleaseType</name>
                        <newname>cz</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicBrainzTrackId</name>
                        <newname>cp</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MusicIpId</name>
                        <newname>ct</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Performers</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_PerformersSort</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>TagLib.IPicture[]()</signature>
                        <name>get_Pictures</name>
                        <newname>c3</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumGain</name>
                        <newname>c9</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainAlbumPeak</name>
                        <newname>db</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackGain</name>
                        <newname>c5</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ReplayGainTrackPeak</name>
                        <newname>c7</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_TitleSort</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Track</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TrackCount</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Year</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Album</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtists</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_AlbumArtistsSort</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AlbumSort</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AmazonId</name>
                        <newname>cw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Artists</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_BeatsPerMinute</name>
                        <newname>ce</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Composers</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_ComposersSort</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Conductor</name>
                        <newname>cg</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Disc</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_DiscCount</name>
                        <newname>b8</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Genres</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Grouping</name>
                        <newname>cc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Lyrics</name>
                        <newname>ca</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzArtistId</name>
                        <newname>ck</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzDiscId</name>
                        <newname>cs</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseArtistId</name>
                        <newname>co</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseCountry</name>
                        <newname>c2</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseId</name>
                        <newname>cm</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseStatus</name>
                        <newname>cy</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzReleaseType</name>
                        <newname>c0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicBrainzTrackId</name>
                        <newname>cq</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MusicIpId</name>
                        <newname>cu</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Performers</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_PerformersSort</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IPicture[])</signature>
                        <name>set_Pictures</name>
                        <newname>c4</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumGain</name>
                        <newname>da</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainAlbumPeak</name>
                        <newname>dc</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackGain</name>
                        <newname>c6</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ReplayGainTrackPeak</name>
                        <newname>c8</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_TitleSort</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Track</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TrackCount</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Year</name>
                        <newname>b0</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.TagTypes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>AllTags</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Ape</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Apple</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Asf</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>AudibleMetadata</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>DivX</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>FlacMetadata</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>GifComment</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>IPTCIIM</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Id3v1</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Id3v2</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>JpegComment</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>MovieId</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Png</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>RiffInfo</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>TiffIFD</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>XMP</name>
                    </field>
                    <field>
                        <signature>TagLib.TagTypes</signature>
                        <name>Xiph</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.TextBox</name>
                <newname>bn</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Arw.File</name>
                <newname>ce</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tiff.Codec(int32, int32)</signature>
                        <name>CreateCodec</name>
                        <newname>fa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.BaseTiffFile</name>
                <newname>b3</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDReader(TagLib.Tiff.BaseTiffFile, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>CreateIFDReader</name>
                        <newname>e4</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadHeader</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>ReadIFD</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int32)</signature>
                        <name>ReadIFD</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector(unsigned int32)</signature>
                        <name>RenderHeader</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsBigEndian</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>unsigned int16()</signature>
                        <name>get_Magic</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsBigEndian</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16)</signature>
                        <name>set_Magic</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsBigEndian&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>&lt;Magic&gt;k__BackingField</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Codec</name>
                <newname>b4</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Cr2.File</name>
                <newname>cd</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadAdditionalCR2Header</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadFile</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>w</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Dng.File</name>
                <newname>cc</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tiff.Codec(int32, int32)</signature>
                        <name>CreateCodec</name>
                        <newname>fa</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>fb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.File</name>
                <newname>b5</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tiff.Codec(int32, int32)</signature>
                        <name>CreateCodec</name>
                        <newname>fa</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>fb</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.IFD.IFDTag)</signature>
                        <name>UpdateTags</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WriteFile</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Nef.File</name>
                <newname>cb</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tiff.Codec(int32, int32)</signature>
                        <name>CreateCodec</name>
                        <newname>fa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Pef.File</name>
                <newname>ca</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tiff.Codec(int32, int32)</signature>
                        <name>CreateCodec</name>
                        <newname>fa</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Rw2.File</name>
                <newname>b6</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDReader(TagLib.Tiff.BaseTiffFile, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>CreateIFDReader</name>
                        <newname>e4</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>ExtractProperties</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ReadStyle)</signature>
                        <name>Read</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>ReadAdditionalRW2Header</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadFile</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Save</name>
                        <newname>e1</newname>
                    </method>
                    <method>
                        <signature>TagLib.Jpeg.File()</signature>
                        <name>get_JpgFromRaw</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties()</signature>
                        <name>get_Properties</name>
                        <newname>e0</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Writeable</name>
                        <newname>e2</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Jpeg.File)</signature>
                        <name>set_JpgFromRaw</name>
                        <newname>ax</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Jpeg.File</signature>
                        <name>&lt;JpgFromRaw&gt;k__BackingField</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TagLib.Properties</signature>
                        <name>properties</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Rw2.IFDReader</name>
                <newname>b7</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Tiff.BaseTiffFile, bool, TagLib.IFD.IFDStructure, int64, unsigned int32, unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.IFD.IFDEntry(unsigned int16, unsigned int16, unsigned int32, int64, unsigned int32)</signature>
                        <name>ParseIFDEntry</name>
                        <newname>e5</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>seen_jpgfromraw</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Rw2.IFDTag</name>
                <newname>b9</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Tiff.Rw2.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FocalLengthIn35mmFilm</name>
                        <newname>e8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ISOSpeedRatings</name>
                        <newname>e6</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FocalLengthIn35mmFilm</name>
                        <newname>e9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ISOSpeedRatings</name>
                        <newname>e7</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Tiff.Rw2.File</signature>
                        <name>file</name>
                        <newname>dv</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Tiff.Rw2.StreamJPGAbstraction</name>
                <newname>b8</newname>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>CloseStream</name>
                        <newname>di</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>df</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_ReadStream</name>
                        <newname>dg</newname>
                    </method>
                    <method>
                        <signature>System.IO.Stream()</signature>
                        <name>get_WriteStream</name>
                        <newname>dh</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>stream</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.UnsupportedFormatException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.UrlBox</name>
                <newname>bo</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Mpeg4.BoxHeader, TagLib.File, TagLib.Mpeg4.IsoHandlerBox)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.ByteVector()</signature>
                        <name>get_Data</name>
                        <newname>dj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector)</signature>
                        <name>set_Data</name>
                        <newname>dk</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>data</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.WavPack.File</name>
                <newname>b1</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.File/IFileAbstraction, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.ReadStyle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TagLib.Tag(TagLib.TagTypes, bool)</signature>
                        <name>GetTag</name>
                        <newname>e3</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadEnd</name>
                        <newname>ew</newname>
                    </method>
                    <method>
                        <signature>TagLib.Properties(int64, int64, TagLib.ReadStyle)</signature>
                        <name>ReadProperties</name>
                        <newname>ex</newname>
                    </method>
                    <method>
                        <signature>void(int64, TagLib.ReadStyle)</signature>
                        <name>ReadStart</name>
                        <newname>ev</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.ByteVector</signature>
                        <name>header_block</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.WavPack.StreamHeader</name>
                <newname>b2</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.ByteVector, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TagLib.WavPack.StreamHeader)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioBitrate</name>
                        <newname>dt</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioChannels</name>
                        <newname>dv</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AudioSampleRate</name>
                        <newname>du</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BitsPerSample</name>
                        <newname>ey</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                        <newname>ez</newname>
                    </method>
                    <method>
                        <signature>System.TimeSpan()</signature>
                        <name>get_Duration</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TagLib.MediaTypes()</signature>
                        <name>get_MediaTypes</name>
                        <newname>fo</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Version</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.WavPack.StreamHeader, TagLib.WavPack.StreamHeader)</signature>
                        <name>op_Equality</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>bool(TagLib.WavPack.StreamHeader, TagLib.WavPack.StreamHeader)</signature>
                        <name>op_Inequality</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BYTES_STORED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TagLib.ReadOnlyByteVector</signature>
                        <name>FileIdentifier</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MONO_FLAG</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SHIFT_LSB</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>SHIFT_MASK</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SRATE_LSB</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>SRATE_MASK</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Size</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>flags</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>sample_rates</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>samples</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>stream_length</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>version</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmlNodeExtensions</name>
                <newname>bx</newname>
                <methodlist>
                    <method>
                        <signature>bool(System.Xml.XmlNode, string)</signature>
                        <name>In</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode, string, string)</signature>
                        <name>Is</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode)</signature>
                        <name>IsCoreSyntax</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode)</signature>
                        <name>IsNodeElement</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode)</signature>
                        <name>IsOld</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode)</signature>
                        <name>IsPropertyAttribute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Xml.XmlNode)</signature>
                        <name>IsPropertyElement</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmpNode</name>
                <newname>by</newname>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNodeVisitor)</signature>
                        <name>Accept</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>AddAllChildrenTo</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>AddAllQualifiersTo</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>AddChild</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>AddQualifier</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dump</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Dump</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(string, string)</signature>
                        <name>GetChild</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(string, string)</signature>
                        <name>GetQualifier</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>RemoveChild</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(System.Xml.XmlNode)</signature>
                        <name>RenderInto</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Xmp.XmpNode&gt;()</signature>
                        <name>get_Children</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReallySimpleType</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRootNode</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Namespace</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_QualifierCount</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNodeType()</signature>
                        <name>get_Type</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Namespace</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNodeType)</signature>
                        <name>set_Type</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Namespace&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>&lt;Type&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TagLib.Xmp.XmpNode&gt;</signature>
                        <name>children</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,TagLib.Xmp.XmpNode&gt;&gt;</signature>
                        <name>qualifiers</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmpNodeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>Alt</name>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>Bag</name>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>Seq</name>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>Simple</name>
                    </field>
                    <field>
                        <signature>TagLib.Xmp.XmpNodeType</signature>
                        <name>Struct</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmpNodeVisitor</name>
                <newname>bz</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>Visit</name>
                        <newname>eu</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmpTag</name>
                <newname>b0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, TagLib.File)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>AcceptVisitors</name>
                        <newname>os</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>AddNamespacePrefix</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>de</newname>
                    </method>
                    <method>
                        <signature>System.Xml.XmlAttribute(System.Xml.XmlDocument, string, string)</signature>
                        <name>CreateAttribute</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Xml.XmlNode(System.Xml.XmlDocument, string, string)</signature>
                        <name>CreateNode</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(System.Xml.XmlNode, string)</signature>
                        <name>CreateTextPropertyWithQualifiers</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string(float64, int64)</signature>
                        <name>DecimalToFraction</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>EnsureNamespacePrefix</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(string, string)</signature>
                        <name>FindNode</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string[](string, string)</signature>
                        <name>GetCollectionNode</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetLangAltNode</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;(string, string)</signature>
                        <name>GetRationalNode</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetTextNode</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;(string, string)</signature>
                        <name>GetUIntNode</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialize</name>
                        <newname>ou</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(string, string)</signature>
                        <name>NewNode</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(string, string, TagLib.Xmp.XmpNodeType)</signature>
                        <name>NewNode</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseEmptyPropertyElement</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseLiteralPropertyElement</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseNodeElement</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseNodeElementList</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParsePropertyElement</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode(System.Xml.XmlNode, TagLib.File)</signature>
                        <name>ParseRDF</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseResourcePropertyElement</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode, System.Xml.XmlNode)</signature>
                        <name>ParseTypeResourcePropertyElement</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrepareNamespaces</name>
                        <newname>ot</newname>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>RemoveNode</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>Render</name>
                        <newname>ow</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpTag)</signature>
                        <name>ReplaceFrom</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string[], TagLib.Xmp.XmpNodeType)</signature>
                        <name>SetCollectionNode</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>SetLangAltNode</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(string, string, float64)</signature>
                        <name>SetRationalNode</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(string, string, string)</signature>
                        <name>SetTextNode</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Altitude</name>
                        <newname>eg</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Copyright</name>
                        <newname>ch</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Creator</name>
                        <newname>es</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;System.DateTime&gt;()</signature>
                        <name>get_DateTime</name>
                        <newname>d6</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_ExposureTime</name>
                        <newname>ei</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FNumber</name>
                        <newname>ek</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_FocalLength</name>
                        <newname>em</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_FocalLengthIn35mmFilm</name>
                        <newname>e8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_ISOSpeedRatings</name>
                        <newname>e6</newname>
                    </method>
                    <method>
                        <signature>string[]()</signature>
                        <name>get_Keywords</name>
                        <newname>d2</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Latitude</name>
                        <newname>ec</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;float64&gt;()</signature>
                        <name>get_Longitude</name>
                        <newname>ee</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Make</name>
                        <newname>eo</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Model</name>
                        <newname>eq</newname>
                    </method>
                    <method>
                        <signature>TagLib.Xmp.XmpNode()</signature>
                        <name>get_NodeTree</name>
                        <newname>ov</newname>
                    </method>
                    <method>
                        <signature>TagLib.Image.ImageOrientation()</signature>
                        <name>get_Orientation</name>
                        <newname>d8</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;unsigned int32&gt;()</signature>
                        <name>get_Rating</name>
                        <newname>d4</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Software</name>
                        <newname>ea</newname>
                    </method>
                    <method>
                        <signature>TagLib.TagTypes()</signature>
                        <name>get_TagTypes</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Altitude</name>
                        <newname>eh</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Copyright</name>
                        <newname>ci</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Creator</name>
                        <newname>et</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;System.DateTime&gt;)</signature>
                        <name>set_DateTime</name>
                        <newname>d7</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_ExposureTime</name>
                        <newname>ej</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FNumber</name>
                        <newname>el</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_FocalLength</name>
                        <newname>en</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_FocalLengthIn35mmFilm</name>
                        <newname>e9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_ISOSpeedRatings</name>
                        <newname>e7</newname>
                    </method>
                    <method>
                        <signature>void(string[])</signature>
                        <name>set_Keywords</name>
                        <newname>d3</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Latitude</name>
                        <newname>ed</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;float64&gt;)</signature>
                        <name>set_Longitude</name>
                        <newname>ef</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Make</name>
                        <newname>ep</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Model</name>
                        <newname>er</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>set_NodeTree</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Image.ImageOrientation)</signature>
                        <name>set_Orientation</name>
                        <newname>d9</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;unsigned int32&gt;)</signature>
                        <name>set_Rating</name>
                        <newname>d5</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Software</name>
                        <newname>eb</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>bc</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Xmp.XmpNode</signature>
                        <name>&lt;NodeTree&gt;k__BackingField</name>
                        <newname>et</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ABOUT_EACH_PREFIX_URI</name>
                        <newname>dw</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ABOUT_EACH_URI</name>
                        <newname>dv</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ABOUT_URI</name>
                        <newname>du</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ADOBE_X_NS</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ALT_URI</name>
                        <newname>dx</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BAG_ID_URI</name>
                        <newname>dz</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BAG_URI</name>
                        <newname>dy</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CRS_NS</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DATA_TYPE_URI</name>
                        <newname>d0</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DC_NS</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>DESCRIPTION_URI</name>
                        <newname>d1</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXIF_AUX_NS</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>EXIF_NS</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ID_URI</name>
                        <newname>d3</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>JOB_NS</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LANG_URI</name>
                        <newname>d5</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>LI_URI</name>
                        <newname>d7</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MS_PHOTO_NS</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>NODE_ID_URI</name>
                        <newname>d9</newname>
                    </field>
                    <field>
                        <signature>System.Xml.NameTable</signature>
                        <name>NameTable</name>
                        <newname>el</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,string&gt;</signature>
                        <name>NamespacePrefixes</name>
                        <newname>ep</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PARSE_TYPE_URI</name>
                        <newname>eb</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PHOTOSHOP_NS</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PRISM_NS</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RDF_NS</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RDF_URI</name>
                        <newname>ed</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RESOURCE_URI</name>
                        <newname>ef</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SEQ_URI</name>
                        <newname>eh</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>STDIM_NS</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>TIFF_NS</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VALUE_URI</name>
                        <newname>ej</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XAP_BJ_NS</name>
                        <newname>do</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XAP_MM_NS</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XAP_NS</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XAP_RIGHTS_NS</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XMLNS_NS</name>
                        <newname>ds</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XML_NS</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>XMPTG_NS</name>
                        <newname>dt</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>anon_ns_count</name>
                        <newname>er</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>initialized</name>
                        <newname>en</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,System.Collections.Generic.Dictionary`2&lt;string,TagLib.Xmp.XmpNode&gt;&gt;</signature>
                        <name>nodes</name>
                        <newname>c4</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TagLib.Xmp.XmpTag/NodeIndexVisitor</name>
                <newname>b0/a</newname>
                <methodlist>
                    <method>
                        <signature>void(TagLib.Xmp.XmpTag)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>AddNode</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TagLib.Xmp.XmpNode)</signature>
                        <name>Visit</name>
                        <newname>eu</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TagLib.Xmp.XmpTag</signature>
                        <name>tag</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.CommandLink</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>CommandLink_Loaded</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>add_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.RoutedEventHandler)</signature>
                        <name>remove_Click</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Controls.Button</signature>
                        <name>CommandLinkButton</name>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>LayoutRoot</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.CommandLink</signature>
                        <name>UserControl</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>System.Windows.RoutedEventHandler</signature>
                        <name>Click</name>
                        <newname>a</newname>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>TaskDialogInterop.CommandLinkExtraTextVisibilityConverter</name>
                <newname>ah</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.CommandLinkTextConverter</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.IActiveTaskDialog</name>
                <newname>a3</newname>
                <methodlist>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickButton</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommandButton</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommonButton</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCustomButton</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickRadioButton</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>ClickVerification</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonElevationRequiredState</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonEnabledState</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonElevationRequiredState</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonEnabledState</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonElevationRequiredState</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonEnabledState</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetContent</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonElevationRequiredState</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonEnabledState</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetExpandedInformation</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetFooter</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetMainInstruction</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>SetMarqueeProgressBar</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(bool, unsigned int32)</signature>
                        <name>SetProgressBarMarquee</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetProgressBarPosition</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>bool(int16, int16)</signature>
                        <name>SetProgressBarRange</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.VistaProgressBarState)</signature>
                        <name>SetProgressBarState</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetRadioButtonEnabledState</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetWindowTitle</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a5</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.NativeMethods</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>native int(native int, unsigned int32, native int, native int)</signature>
                        <name>DefWindowProc</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32)</signature>
                        <name>GetWindowLong</name>
                    </method>
                    <method>
                        <signature>native int(native int, unsigned int32, native int, native int)</signature>
                        <name>SendMessage</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32)</signature>
                        <name>SetWindowLong</name>
                    </method>
                    <method>
                        <signature>bool(native int, native int, int32, int32, int32, int32, unsigned int32)</signature>
                        <name>SetWindowPos</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>GWL_EXSTYLE</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GWL_STYLE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SWP_FRAMECHANGED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SWP_NOMOVE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SWP_NOSIZE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SWP_NOZORDER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>WM_SETICON</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS_EX_DLGMODALFRAME</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WS_SYSMENU</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.NotBooleanToVisibilityConverter</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.NotNullToVisibilityConverter</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>Convert</name>
                    </method>
                    <method>
                        <signature>object(object, System.Type, object, System.Globalization.CultureInfo)</signature>
                        <name>ConvertBack</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_shield_16</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_shield_32</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>shield_16</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>shield_32</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.RelayCommand</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Action)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Action, System.Func`1&lt;bool&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>CanExecute</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CanExecuteChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CanExecuteChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;bool&gt;</signature>
                        <name>_canExecute</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>_execute</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>TaskDialogInterop.RelayCommand`1</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Action`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Action`1&lt;!0&gt;, System.Predicate`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>CanExecute</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Execute</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Execute</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CanExecuteChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CanExecuteChanged</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Predicate`1&lt;!0&gt;</signature>
                        <name>_canExecute</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Action`1&lt;!0&gt;</signature>
                        <name>_execute</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.SafeNativeMethods</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, bool)</signature>
                        <name>SetWindowCloseButtonVisibility</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Window, bool)</signature>
                        <name>SetWindowIconVisibility</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialog</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>CommandLink_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogButtonData(TaskDialogInterop.VistaTaskDialogCommonButtons, System.Windows.Input.ICommand, bool, bool)</signature>
                        <name>ConvertCommonButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons(TaskDialogInterop.TaskDialogCommonButtons)</signature>
                        <name>ConvertCommonButtons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Windows.Controls.TextBlock, string)</signature>
                        <name>ConvertToHyperlinkedText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DetectHyperlinks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(string, string, string)</signature>
                        <name>DetectHyperlinks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetButtonIdForCommandButton</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(TaskDialogInterop.TaskDialogCommonButtons, int32)</signature>
                        <name>GetButtonIdForCommonButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetButtonIdForCustomButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetButtonIdForRadioButton</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(TaskDialogInterop.TaskDialogCommonButtons, int32)</signature>
                        <name>GetButtonIndexForCommonButton</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Hyperlink_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>NormalButton_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogClosedEventArgs)</signature>
                        <name>OnClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogShowingEventArgs)</signature>
                        <name>OnShowing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogResult(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>Show</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogResult(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>ShowEmulatedTaskDialog</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult(System.Windows.Window, string)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult(System.Windows.Window, string, string)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult(System.Windows.Window, string, string, TaskDialogInterop.TaskDialogCommonButtons)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult(System.Windows.Window, string, string, TaskDialogInterop.TaskDialogCommonButtons, TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult(System.Windows.Window, string, string, string, string, string, string, TaskDialogInterop.TaskDialogCommonButtons, TaskDialogInterop.VistaTaskDialogIcon, TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>ShowMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogResult(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>ShowTaskDialog</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IComponentConnector.Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, object)</signature>
                        <name>System.Windows.Markup.IStyleConnector.Connect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TaskDialog_Closed</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>TaskDialog_Closing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TaskDialog_ContentRendered</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Input.KeyEventArgs)</signature>
                        <name>TaskDialog_KeyDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.RoutedEventArgs)</signature>
                        <name>TaskDialog_Loaded</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>TaskDialog_SourceInitialized</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.PropertyChangedEventArgs)</signature>
                        <name>ViewModel_PropertyChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ViewModel_RequestClose</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>ViewModel_RequestVerificationFocus</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogClosedEventHandler)</signature>
                        <name>add_Closed</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogShowingEventHandler)</signature>
                        <name>add_Showing</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceEmulationMode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogViewModel()</signature>
                        <name>get_ViewModel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogClosedEventHandler)</signature>
                        <name>remove_Closed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogShowingEventHandler)</signature>
                        <name>remove_Showing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceEmulationMode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ForceEmulationMode&gt;k__BackingField</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>Buttons</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>ButtonsArea</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogClosedEventHandler</signature>
                        <name>Closed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CommandButtonIDOffset</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>CommandLinks</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>ContentArea</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>ContentExpandedInfo</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>ContentText</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CustomButtonIDOffset</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>FooterArea</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>FooterExpandedArea</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>FooterExpandedInfo</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>FooterExpandedInner</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>FooterIcon</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Border</signature>
                        <name>FooterInner</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>FooterText</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HtmlHyperlinkCapturePattern</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>HtmlHyperlinkPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Grid</signature>
                        <name>LayoutRoot</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Image</signature>
                        <name>MainIcon</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.TextBlock</signature>
                        <name>MainInstruction</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ProgressBar</signature>
                        <name>ProgressBar</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>RadioButtonIDOffset</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.ItemsControl</signature>
                        <name>RadioButtons</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.Primitives.ToggleButton</signature>
                        <name>ShowDetailsButton</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogShowingEventHandler</signature>
                        <name>Showing</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Controls.CheckBox</signature>
                        <name>VerificationCheckBox</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_contentLoaded</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_hyperlinkCaptureRegex</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>_hyperlinkRegex</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogButtonData</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, string, System.Windows.Input.ICommand, bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventArgs)</signature>
                        <name>OnPropertyChanged</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RaisePropertyChanged</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_Command</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ID</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsCancel</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsDefault</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsElevationRequired</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsEnabled</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.Windows.Input.ICommand)</signature>
                        <name>set_Command</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ID</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsCancel</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsDefault</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsElevationRequired</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsEnabled</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Input.ICommand</signature>
                        <name>&lt;Command&gt;k__BackingField</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;ID&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsCancel&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsDefault&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isElevationRequired</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isEnabled</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>Command</name>
                        <newname>g</newname>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ID</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsCancel</name>
                        <newname>d</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsDefault</name>
                        <newname>c</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsElevationRequired</name>
                        <newname>f</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsEnabled</name>
                        <newname>e</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogCallback</name>
                <newname>az</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(TaskDialogInterop.IActiveTaskDialog, TaskDialogInterop.VistaTaskDialogNotificationArgs, object, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>bool(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.IActiveTaskDialog, TaskDialogInterop.VistaTaskDialogNotificationArgs, object)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogClosedEventArgs</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogResult)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogResult()</signature>
                        <name>get_Result</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogResult)</signature>
                        <name>set_Result</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogResult</signature>
                        <name>&lt;Result&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogClosedEventHandler</name>
                <newname>aq</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, TaskDialogInterop.TaskDialogClosedEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, TaskDialogInterop.TaskDialogClosedEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogCommonButtons</name>
                <newname>a0</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>Close</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>OKCancel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>RetryCancel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>YesNo</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>YesNoCancel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogOptions</name>
                <newname>a1</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>AllowDialogCancellation</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCallback</signature>
                        <name>Callback</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>CallbackData</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>CommandButtons</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCommonButtons</signature>
                        <name>CommonButtons</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Content</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>CustomButtons</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>CustomFooterIcon</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>CustomMainIcon</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogOptions</signature>
                        <name>Default</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>DefaultButtonIndex</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>EnableCallbackTimer</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ExpandToFooter</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ExpandedByDefault</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ExpandedInfo</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>FooterIcon</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FooterText</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>MainIcon</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>MainInstruction</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>Owner</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>RadioButtons</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ShowMarqueeProgressBar</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ShowProgressBar</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Title</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>VerificationByDefault</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>VerificationText</name>
                        <newname>p</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogResult</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogSimpleResult, System.Nullable`1&lt;bool&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;, System.Nullable`1&lt;int32&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_CommandButtonResult</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_CustomButtonResult</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;int32&gt;()</signature>
                        <name>get_RadioButtonResult</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult()</signature>
                        <name>get_Result</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>get_VerificationChecked</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_CommandButtonResult</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_CustomButtonResult</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;int32&gt;)</signature>
                        <name>set_RadioButtonResult</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogSimpleResult)</signature>
                        <name>set_Result</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(System.Nullable`1&lt;bool&gt;)</signature>
                        <name>set_VerificationChecked</name>
                        <newname>f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;CommandButtonResult&gt;k__BackingField</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;CustomButtonResult&gt;k__BackingField</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;int32&gt;</signature>
                        <name>&lt;RadioButtonResult&gt;k__BackingField</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>&lt;Result&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>&lt;VerificationChecked&gt;k__BackingField</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogResult</signature>
                        <name>Empty</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogShowingEventArgs</name>
                <newname>an</newname>
                <methodlist>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogOptions&amp;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogOptions()</signature>
                        <name>get_ConfigurationOptions</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>set_ConfigurationOptions</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogOptions</signature>
                        <name>&lt;ConfigurationOptions&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogShowingEventHandler</name>
                <newname>ap</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, TaskDialogInterop.TaskDialogShowingEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, TaskDialogInterop.TaskDialogShowingEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogSimpleResult</name>
                <newname>ax</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Cancel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Close</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Command</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Custom</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>No</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Ok</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Retry</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogSimpleResult</signature>
                        <name>Yes</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;get_CommandLinkCommand&gt;b__97_0</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>&lt;get_HyperlinkCommand&gt;b__101_0</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;get_NormalButtonCommand&gt;b__95_0</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;get_RadioButtonCommand&gt;b__99_0</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CallbackTimer_Tick</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickButton</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommandButton</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommonButton</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCustomButton</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickRadioButton</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>ClickVerification</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource(TaskDialogInterop.VistaTaskDialogIcon, System.Drawing.Icon, bool)</signature>
                        <name>ConvertIconToImageSource</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FixAllButtonLabelAccessKeys</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>string[](string[])</signature>
                        <name>FixLabelAccessKeys</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogNotificationArgs, bool)</signature>
                        <name>HandleCallbackReturn</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyClosed</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyClosing</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyConstructed</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyCreated</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>NotifyShown</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogNotificationArgs)</signature>
                        <name>OnCallback</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventArgs)</signature>
                        <name>OnPropertyChanged</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnRequestClose</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnRequestVerificationFocus</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>RaisePropertyChangedEvent</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RaiseRequestCloseEvent</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>RaiseRequestVerificationFocusEvent</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonElevationRequiredState</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonEnabledState</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonElevationRequiredState</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonEnabledState</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonElevationRequiredState</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonEnabledState</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetContent</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonElevationRequiredState</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonEnabledState</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetExpandedInformation</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetFooter</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetMainInstruction</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>SetMarqueeProgressBar</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(bool, unsigned int32)</signature>
                        <name>SetProgressBarMarquee</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetProgressBarPosition</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>bool(int16, int16)</signature>
                        <name>SetProgressBarRange</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.VistaProgressBarState)</signature>
                        <name>SetProgressBarState</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetRadioButtonEnabledState</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetWindowTitle</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ShouldCancelClosing</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>add_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_RequestClose</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_RequestVerificationFocus</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDialogCancellation</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_CommandLinkCommand</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;()</signature>
                        <name>get_CommandLinks</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ContentExpandedInfo</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ContentExpandedInfoVisible</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DefaultButtonIndex</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DialogResult</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ExpandedInfoVisible</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FooterExpandedInfo</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FooterExpandedInfoVisible</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>get_FooterIcon</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FooterText</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasExpandedInfo</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_HyperlinkCommand</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInDesignMode</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Media.ImageSource()</signature>
                        <name>get_MainIcon</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon()</signature>
                        <name>get_MainIconType</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MainInstruction</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_NormalButtonCommand</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;()</signature>
                        <name>get_NormalButtons</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ProgressBarIndeterminate</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ProgressBarMaximum</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ProgressBarMinimum</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ProgressBarValue</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>System.Windows.Input.ICommand()</signature>
                        <name>get_RadioButtonCommand</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;()</signature>
                        <name>get_RadioButtons</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RadioResult</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowProgressBar</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>System.Windows.WindowStartupLocation()</signature>
                        <name>get_StartPosition</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_VerificationChecked</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VerificationText</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.PropertyChangedEventHandler)</signature>
                        <name>remove_PropertyChanged</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_RequestClose</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_RequestVerificationFocus</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ExpandedInfoVisible</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FooterText</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>set_MainIconType</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MainInstruction</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ProgressBarIndeterminate</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ProgressBarMaximum</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ProgressBarMinimum</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ProgressBarValue</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_VerificationChecked</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VerificationText</name>
                        <newname>al</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>CallbackTimerInterval</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.PropertyChangedEventHandler</signature>
                        <name>PropertyChanged</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>RequestClose</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>RequestVerificationFocus</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Threading.DispatcherTimer</signature>
                        <name>_callbackTimer</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>_callbackTimerStart</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.ICommand</signature>
                        <name>_commandCommandLink</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.ICommand</signature>
                        <name>_commandHyperlink</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;</signature>
                        <name>_commandLinks</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.ICommand</signature>
                        <name>_commandNormalButton</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Input.ICommand</signature>
                        <name>_commandRadioButton</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_dialogResult</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_expandedInfoVisible</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>_isInDesignMode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;</signature>
                        <name>_normalButtons</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_preventClose</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_progressBarMarqueeEnabled</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_progressBarMax</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_progressBarMin</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_progressBarValue</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;TaskDialogInterop.TaskDialogButtonData&gt;</signature>
                        <name>_radioButtons</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_radioResult</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_requestingClose</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_verificationChecked</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogOptions</signature>
                        <name>options</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c</name>
                <newname>a4/&lt;&gt;c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;get_AllowDialogCancellation&gt;b__69_0</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c</signature>
                        <name>&lt;&gt;9</name>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;TaskDialogInterop.TaskDialogButtonData,bool&gt;</signature>
                        <name>&lt;&gt;9__69_0</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass129_0</name>
                <newname>a4/e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;ClickButton&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;ClickButton&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;ClickButton&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass135_0</name>
                <newname>a4/f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__3</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__4</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonEnabledState&gt;b__5</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass140_0</name>
                <newname>a4/g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonElevationRequiredState&gt;b__0</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonElevationRequiredState&gt;b__1</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonElevationRequiredState&gt;b__2</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.TaskDialogButtonData)</signature>
                        <name>&lt;SetButtonElevationRequiredState&gt;b__3</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonId</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass85_0</name>
                <newname>a4/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogButtonData(string)</signature>
                        <name>&lt;get_NormalButtons&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass85_1</name>
                <newname>a4/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>&lt;get_NormalButtons&gt;b__1</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogButtonData(int32)</signature>
                        <name>&lt;get_NormalButtons&gt;b__2</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>comBtns</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass87_0</name>
                <newname>a4/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogButtonData(string)</signature>
                        <name>&lt;get_CommandLinks&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.TaskDialogViewModel/&lt;&gt;c__DisplayClass89_0</name>
                <newname>a4/d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogButtonData(string)</signature>
                        <name>&lt;get_RadioButtons&gt;b__0</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogViewModel</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>i</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaActiveTaskDialog</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void(native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickButton</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommandButton</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCommonButton</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickCustomButton</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>ClickRadioButton</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>ClickVerification</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonElevationRequiredState</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetButtonEnabledState</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonElevationRequiredState</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommandButtonEnabledState</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonElevationRequiredState</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCommonButtonEnabledState</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetContent</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonElevationRequiredState</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCustomButtonEnabledState</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetExpandedInformation</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetFooter</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetMainInstruction</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>bool(bool)</signature>
                        <name>SetMarqueeProgressBar</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(bool, unsigned int32)</signature>
                        <name>SetProgressBarMarquee</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetProgressBarPosition</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>bool(int16, int16)</signature>
                        <name>SetProgressBarRange</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>bool(TaskDialogInterop.VistaProgressBarState)</signature>
                        <name>SetProgressBarState</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetRadioButtonEnabledState</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>SetWindowTitle</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpdateContent</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpdateExpandedInformation</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpdateFooter</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateFooterIcon</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>UpdateMainIcon</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>UpdateMainInstruction</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>get_Handle</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>handle</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaProgressBarState</name>
                <newname>at</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaProgressBarState</signature>
                        <name>Error</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaProgressBarState</signature>
                        <name>Normal</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaProgressBarState</signature>
                        <name>Paused</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialog</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(native int, unsigned int32, native unsigned int, native int, native int)</signature>
                        <name>PrivateCallback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int, bool&amp;, int32&amp;)</signature>
                        <name>PrivateShow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS, bool)</signature>
                        <name>SetFlag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Show</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Window)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Window, bool&amp;)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Windows.Window, bool&amp;, int32&amp;)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int, bool&amp;)</signature>
                        <name>Show</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int, bool&amp;, int32&amp;)</signature>
                        <name>Show</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowDialogCancellation</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogButton[]()</signature>
                        <name>get_Buttons</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogCallback()</signature>
                        <name>get_Callback</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_CallbackData</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CallbackTimer</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CanBeMinimized</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CollapsedControlText</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons()</signature>
                        <name>get_CommonButtons</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogOptions()</signature>
                        <name>get_Config</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Content</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_CustomFooterIcon</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Icon()</signature>
                        <name>get_CustomMainIcon</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DefaultButton</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DefaultRadioButton</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableHyperlinks</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ExpandFooterArea</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ExpandedByDefault</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpandedControlText</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ExpandedInformation</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Footer</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon()</signature>
                        <name>get_FooterIcon</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsAvailableOnThisOS</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon()</signature>
                        <name>get_MainIcon</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MainInstruction</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NoDefaultRadioButton</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PositionRelativeToWindow</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogButton[]()</signature>
                        <name>get_RadioButtons</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>System.Version()</signature>
                        <name>get_RequiredOSVersion</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RightToLeftLayout</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowMarqueeProgressBar</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowProgressBar</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCommandLinks</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCommandLinksNoIcon</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_VerificationFlagChecked</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VerificationText</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Width</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_WindowTitle</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowDialogCancellation</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogButton[])</signature>
                        <name>set_Buttons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogCallback)</signature>
                        <name>set_Callback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_CallbackData</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CallbackTimer</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CanBeMinimized</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CollapsedControlText</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogCommonButtons)</signature>
                        <name>set_CommonButtons</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>set_Config</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Content</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>set_CustomFooterIcon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Icon)</signature>
                        <name>set_CustomMainIcon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DefaultButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DefaultRadioButton</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableHyperlinks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ExpandFooterArea</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ExpandedByDefault</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExpandedControlText</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ExpandedInformation</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Footer</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>set_FooterIcon</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogIcon)</signature>
                        <name>set_MainIcon</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MainInstruction</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_NoDefaultRadioButton</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PositionRelativeToWindow</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogButton[])</signature>
                        <name>set_RadioButtons</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RightToLeftLayout</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowMarqueeProgressBar</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowProgressBar</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCommandLinks</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCommandLinksNoIcon</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_VerificationFlagChecked</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VerificationText</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Width</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_WindowTitle</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogButton[]</signature>
                        <name>buttons</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogCallback</signature>
                        <name>callback</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>callbackData</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>collapsedControlText</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>commonButtons</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogOptions</signature>
                        <name>config</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>content</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>customFooterIcon</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>customMainIcon</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>defaultButton</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>defaultRadioButton</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>expandedControlText</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>expandedInformation</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>flags</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>footer</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>footerIcon</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>mainIcon</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>mainInstruction</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogButton[]</signature>
                        <name>radioButtons</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>verificationText</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>width</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>windowTitle</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialogButton</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ButtonId</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ButtonText</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ButtonId</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ButtonText</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonId</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>buttonText</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialogCommonButtons</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>Cancel</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>Close</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>No</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>OK</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>Retry</name>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>Yes</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialogIcon</name>
                <newname>ar</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>Error</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>Information</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>Shield</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogIcon</signature>
                        <name>Warning</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialogNotification</name>
                <newname>as</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>ButtonClicked</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>Created</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>Destroyed</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>DialogConstructed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>ExpandoButtonClicked</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>Help</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>HyperlinkClicked</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>RadioButtonClicked</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>Timer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>VerificationClicked</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaTaskDialogNotificationArgs</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ButtonId</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ButtonIndex</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.TaskDialogOptions()</signature>
                        <name>get_Config</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Expanded</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Hyperlink</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification()</signature>
                        <name>get_Notification</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_TimerTickCount</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_VerificationFlagChecked</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ButtonId</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ButtonIndex</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.TaskDialogOptions)</signature>
                        <name>set_Config</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Expanded</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Hyperlink</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaTaskDialogNotification)</signature>
                        <name>set_Notification</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_TimerTickCount</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_VerificationFlagChecked</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>buttonId</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>buttonIndex</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.TaskDialogOptions</signature>
                        <name>config</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>expanded</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>hyperlink</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogNotification</signature>
                        <name>notification</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>timerTickCount</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>verificationFlagChecked</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>native int(native int, unsigned int32, native int, native int)</signature>
                        <name>SendMessage</name>
                    </method>
                    <method>
                        <signature>native int(native int, unsigned int32, native int, string)</signature>
                        <name>SendMessageWithString</name>
                    </method>
                    <method>
                        <signature>bool(native int, string)</signature>
                        <name>SetWindowText</name>
                    </method>
                    <method>
                        <signature>void(TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOGCONFIG&amp;, int32&amp;, int32&amp;, bool&amp;)</signature>
                        <name>TaskDialogIndirect</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>WM_USER</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOGCONFIG</name>
                <newname>a5/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>FooterIcon</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>MainIcon</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cButtons</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cRadioButtons</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cxWidth</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaTaskDialogCommonButtons</signature>
                        <name>dwCommonButtons</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>dwFlags</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hInstance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwndParent</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lpCallbackData</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>nDefaultButton</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>nDefaultRadioButton</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pButtons</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pRadioButtons</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/VistaTaskDialogCallback</signature>
                        <name>pfCallback</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszCollapsedControlText</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszContent</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszExpandedControlText</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszExpandedInformation</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszFooter</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszMainInstruction</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszVerificationText</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszWindowTitle</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ELEMENTS</name>
                <newname>a5/c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_CONTENT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_EXPANDED_INFORMATION</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_FOOTER</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_MAIN_INSTRUCTION</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</name>
                <newname>a5/b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_ALLOW_DIALOG_CANCELLATION</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_CALLBACK_TIMER</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_CAN_BE_MINIMIZED</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_ENABLE_HYPERLINKS</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_EXPANDED_BY_DEFAULT</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_EXPAND_FOOTER_AREA</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_NO_DEFAULT_RADIO_BUTTON</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_POSITION_RELATIVE_TO_WINDOW</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_RTL_LAYOUT</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_SHOW_MARQUEE_PROGRESS_BAR</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_SHOW_PROGRESS_BAR</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_COMMAND_LINKS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_COMMAND_LINKS_NO_ICON</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_HICON_FOOTER</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_HICON_MAIN</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_VERIFICATION_FLAG_CHECKED</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ICON_ELEMENTS</name>
                <newname>a5/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ICON_ELEMENTS</signature>
                        <name>TDIE_ICON_FOOTER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_ICON_ELEMENTS</signature>
                        <name>TDIE_ICON_MAIN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</name>
                <newname>a5/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_BUTTON</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_RADIO_BUTTON</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_VERIFICATION</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_ENABLE_BUTTON</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_ENABLE_RADIO_BUTTON</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_ELEMENT_TEXT</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_MARQUEE_PROGRESS_BAR</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_MARQUEE</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_POS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_RANGE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_STATE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_UPDATE_ELEMENT_TEXT</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_UPDATE_ICON</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</name>
                <newname>a5/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_BUTTON_CLICKED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_CREATED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_DESTROYED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_DIALOG_CONSTRUCTED</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_EXPANDO_BUTTON_CLICKED</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_HELP</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_HYPERLINK_CLICKED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_NAVIGATED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_RADIO_BUTTON_CLICKED</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_TIMER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>TaskDialogInterop.VistaUnsafeNativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_VERIFICATION_CLICKED</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>TaskDialogInterop.VistaUnsafeNativeMethods/VistaTaskDialogCallback</name>
                <newname>a5/a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, unsigned int32, native unsigned int, native int, native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, unsigned int32, native unsigned int, native int, native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.CLSIDGuid</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>FileOpenDialog</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>FileSaveDialog</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>KnownFolderManager</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.ErrorHelper</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>System.Runtime.InteropServices.COMException(int32)</signature>
                        <name>CreateException</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(WPFFolderBrowser.Interop.HRESULT)</signature>
                        <name>Failed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(WPFFolderBrowser.Interop.Win32ErrorCode)</signature>
                        <name>HResultFromWin32</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>HResultFromWin32</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>bool(int32, WPFFolderBrowser.Interop.Win32ErrorCode)</signature>
                        <name>Matches</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>Succeeded</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>FACILITY_WIN32</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IGNORED</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.FileOpenDialogRCW</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.FileSaveDialogRCW</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.HRESULT</name>
                <newname>h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.HRESULT</signature>
                        <name>E_INVALIDARG</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.HRESULT</signature>
                        <name>E_OUTOFMEMORY</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.HRESULT</signature>
                        <name>S_FALSE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.HRESULT</signature>
                        <name>S_OK</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.Helpers</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>System.Windows.Window()</signature>
                        <name>GetDefaultOwnerWindow</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IFileDialog</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDAP)</signature>
                        <name>AddPlace</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialogEvents, unsigned int32&amp;)</signature>
                        <name>Advise</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearClientData</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Close</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetCurrentSelection</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string&amp;)</signature>
                        <name>GetFileName</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetFileTypeIndex</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetFolder</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS&amp;)</signature>
                        <name>GetOptions</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetResult</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>SetClientGuid</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDefaultExtension</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetDefaultFolder</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileName</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileNameLabel</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetFileTypeIndex</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, WPFFolderBrowser.Interop.NativeMethods/COMDLG_FILTERSPEC&amp;)</signature>
                        <name>SetFileTypes</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>SetFilter</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetFolder</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetOkButtonLabel</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS)</signature>
                        <name>SetOptions</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetTitle</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Show</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Unadvise</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IFileDialogCustomize</name>
                <newname>u</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, string, bool)</signature>
                        <name>AddCheckButton</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AddComboBox</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, string)</signature>
                        <name>AddControlItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>AddEditBox</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>AddMenu</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>AddPushButton</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AddRadioButtonList</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>AddSeparator</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>AddText</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>EnableOpenDropDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>EndVisualGroup</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool&amp;)</signature>
                        <name>GetCheckButtonState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE&amp;)</signature>
                        <name>GetControlItemState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE&amp;)</signature>
                        <name>GetControlState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, native int)</signature>
                        <name>GetEditBoxText</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32&amp;)</signature>
                        <name>GetSelectedControlItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>MakeProminent</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>RemoveAllControlItems</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>RemoveControlItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, bool)</signature>
                        <name>SetCheckButtonState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE)</signature>
                        <name>SetControlItemState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>SetControlLabel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(int32, WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE)</signature>
                        <name>SetControlState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>SetEditBoxText</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>SetSelectedControlItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>StartVisualGroup</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IFileDialogEvents</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>WPFFolderBrowser.Interop.HRESULT(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnFileOk</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnFolderChange</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.HRESULT(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>OnFolderChanging</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE&amp;)</signature>
                        <name>OnOverwrite</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnSelectionChange</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE&amp;)</signature>
                        <name>OnShareViolation</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnTypeChange</name>
                        <newname>g</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IFileOpenDialog</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDAP)</signature>
                        <name>AddPlace</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialogEvents, unsigned int32&amp;)</signature>
                        <name>Advise</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearClientData</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Close</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetCurrentSelection</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string&amp;)</signature>
                        <name>GetFileName</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetFileTypeIndex</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetFolder</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS&amp;)</signature>
                        <name>GetOptions</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetResult</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItemArray&amp;)</signature>
                        <name>GetResults</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItemArray&amp;)</signature>
                        <name>GetSelectedItems</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>SetClientGuid</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDefaultExtension</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetDefaultFolder</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileName</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileNameLabel</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetFileTypeIndex</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, WPFFolderBrowser.Interop.NativeMethods/COMDLG_FILTERSPEC&amp;)</signature>
                        <name>SetFileTypes</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>SetFilter</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetFolder</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetOkButtonLabel</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS)</signature>
                        <name>SetOptions</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetTitle</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Show</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Unadvise</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IFileSaveDialog</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDAP)</signature>
                        <name>AddPlace</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialogEvents, unsigned int32&amp;)</signature>
                        <name>Advise</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem, native int, native int&amp;, native int)</signature>
                        <name>ApplyProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ClearClientData</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Close</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetCurrentSelection</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(string&amp;)</signature>
                        <name>GetFileName</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetFileTypeIndex</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetFolder</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS&amp;)</signature>
                        <name>GetOptions</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>GetProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetResult</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>SetClientGuid</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(native int, int32)</signature>
                        <name>SetCollectedProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDefaultExtension</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetDefaultFolder</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileName</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetFileNameLabel</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetFileTypeIndex</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, WPFFolderBrowser.Interop.NativeMethods/COMDLG_FILTERSPEC&amp;)</signature>
                        <name>SetFileTypes</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>SetFilter</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetFolder</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetOkButtonLabel</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/FOS)</signature>
                        <name>SetOptions</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>SetProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>SetSaveAsItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetTitle</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Show</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Unadvise</name>
                        <newname>n</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IIDGuid</name>
                <newname>c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IFileDialog</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IFileDialogControlEvents</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IFileDialogCustomize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IFileDialogEvents</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IFileOpenDialog</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IFileSaveDialog</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IKnownFolder</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IKnownFolderManager</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IModalWindow</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IPropertyStore</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IShellItem</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>IShellItemArray</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IKnownFolder</name>
                <newname>s</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>GetFolderType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>GetId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, native int)</signature>
                        <name>GetLocation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, string&amp;)</signature>
                        <name>GetPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetRedirectionCapabilities</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, System.Guid&amp;, WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetShellItem</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, string)</signature>
                        <name>SetPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>spacer1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>spacer2</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IKnownFolderManager</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>void(native int, WPFFolderBrowser.Interop.IKnownFolder&amp;)</signature>
                        <name>FindFolderFromIDList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, WPFFolderBrowser.Interop.NativeMethods/FFFP_MODE, WPFFolderBrowser.Interop.IKnownFolder&amp;)</signature>
                        <name>FindFolderFromPath</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Guid&amp;)</signature>
                        <name>FolderIdFromCsidl</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;, int32&amp;)</signature>
                        <name>FolderIdToCsidl</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;, WPFFolderBrowser.Interop.IKnownFolder&amp;)</signature>
                        <name>GetFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string, WPFFolderBrowser.Interop.IKnownFolder&amp;)</signature>
                        <name>GetFolderByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int, unsigned int32&amp;)</signature>
                        <name>GetFolderIds</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;, native int, unsigned int32, string, unsigned int32, System.Guid&amp;, string&amp;)</signature>
                        <name>Redirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;, WPFFolderBrowser.Interop.NativeMethods/KNOWNFOLDER_DEFINITION&amp;)</signature>
                        <name>RegisterFolder</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Guid&amp;)</signature>
                        <name>UnregisterFolder</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IModalWindow</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>Show</name>
                        <newname>i</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IPropertyStore</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Commit</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, WPFFolderBrowser.Interop.NativeMethods/PROPERTYKEY&amp;)</signature>
                        <name>GetAt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/PROPERTYKEY&amp;, object&amp;)</signature>
                        <name>GetValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/PROPERTYKEY&amp;, object&amp;)</signature>
                        <name>SetValue</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IShellItem</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>void(native int, System.Guid&amp;, System.Guid&amp;, native int&amp;)</signature>
                        <name>BindToHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem, unsigned int32, int32&amp;)</signature>
                        <name>Compare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32&amp;)</signature>
                        <name>GetAttributes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/SIGDN, string&amp;)</signature>
                        <name>GetDisplayName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetParent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.IShellItemArray</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>void(native int, System.Guid&amp;, System.Guid&amp;, native int&amp;)</signature>
                        <name>BindToHandler</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(native int&amp;)</signature>
                        <name>EnumItems</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/SIATTRIBFLAGS, unsigned int32, unsigned int32&amp;)</signature>
                        <name>GetAttributes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;)</signature>
                        <name>GetCount</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>GetItemAt</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.NativeMethods/PROPERTYKEY&amp;, System.Guid&amp;, native int&amp;)</signature>
                        <name>GetPropertyDescriptionList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Guid&amp;, native int&amp;)</signature>
                        <name>GetPropertyStore</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.KFIDGuid</name>
                <newname>e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ComputerFolder</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Documents</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Favorites</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Profile</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.KnownFolderManager</name>
                <newname>z</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.KnownFolderManagerRCW</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeCommonFileDialog</name>
                <newname>w</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeDialogShowState</name>
                <newname>k</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeDialogShowState</signature>
                        <name>Closed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeDialogShowState</signature>
                        <name>Closing</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeDialogShowState</signature>
                        <name>PreShow</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeDialogShowState</signature>
                        <name>Showing</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeFileOpenDialog</name>
                <newname>x</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeFileSaveDialog</name>
                <newname>y</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(string, native int, System.Guid, WPFFolderBrowser.Interop.IShellItem&amp;)</signature>
                        <name>SHCreateItemFromParsingName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BCM_GETNOTE</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BCM_GETNOTELENGTH</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BCM_SETNOTE</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BCM_SETSHIELD</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BS_COMMANDLINK</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMNCRP_DISABLED</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMNCRP_ENABLED</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMNCRP_USEWINDOWSTYLE</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMWA_NCRENDERING_ENABLED</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMWA_NCRENDERING_POLICY</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWMWA_TRANSITIONS_FORCEDISABLED</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWM_BB_BLURREGION</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWM_BB_ENABLE</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DWM_BB_TRANSITIONONMAXIMIZED</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FORMAT_MESSAGE_FROM_SYSTEM</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NO_DEFAULT_BUTTON_SPECIFIED</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>NO_PARENT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TASKDIALOG_BUTTON_SHIELD_ICON</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TASKDIALOG_IDEALWIDTH</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_ENTERIDLE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>WM_USER</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</name>
                <newname>j/ab</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_APPLICATION_NAME_VALID</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_HMODULE_VALID</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_LANGID_VALID</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_OVERRIDEMANIFEST_VALID</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_RESOURCE_NAME_VALID</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_SET_PROCESS_DEFAULT</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/ACTCTXFlags</signature>
                        <name>ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/ACTCTXW</name>
                <newname>j/ac</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>OverrideManifest</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dwFlags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hModule</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lpApplicationName</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lpAssemblyDirectory</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>lpResourceName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lpSource</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>wLangId</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>wProcessorArchitecture</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/BIND_OPTS3</name>
                <newname>j/ae</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbStruct</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwClassContext</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwTickCountDeadline</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwTrackFlags</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>grfFlags</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>grfMode</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwnd</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>locale</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>pServerInfo</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE</name>
                <newname>j/v</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE</signature>
                        <name>CDCS_ENABLED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE</signature>
                        <name>CDCS_INACTIVE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CDCONTROLSTATE</signature>
                        <name>CDCS_VISIBLE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</name>
                <newname>j/ad</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_ALL</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_DISABLE_AAA</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_ENABLE_AAA</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_ENABLE_CODE_DOWNLOAD</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_FROM_DEFAULT_CONTEXT</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_INPROC</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_INPROC_HANDLER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_INPROC_SERVER</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_LOCAL_SERVER</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_NO_CODE_DOWNLOAD</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_NO_CUSTOM_MARSHAL</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_NO_FAILURE_LOG</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_REMOTE_SERVER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/CLSCTX</signature>
                        <name>CLSCTX_SERVER</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/COMDLG_FILTERSPEC</name>
                <newname>j/o</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>pszName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszSpec</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/DWM_BLURBEHIND</name>
                <newname>j/ak</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwFlags</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fEnable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fTransitionOnMaximized</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hRgnBlur</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/DWM_PRESENT_PARAMETERS</name>
                <newname>j/aj</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cBuffer</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>cRefreshStart</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fQueue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fUseSourceRate</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/UNSIGNED_RATIO</signature>
                        <name>uiNumerator</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/DWM_THUMBNAIL_PROPERTIES</name>
                <newname>j/ah</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>dwFlags</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fSourceClientAreaOnly</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fVisible</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>opacity</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/RECT</signature>
                        <name>rcDestination</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/RECT</signature>
                        <name>rcSource</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/FDAP</name>
                <newname>j/p</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDAP</signature>
                        <name>FDAP_BOTTOM</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDAP</signature>
                        <name>FDAP_TOP</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE</name>
                <newname>j/r</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE</signature>
                        <name>FDEOR_ACCEPT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE</signature>
                        <name>FDEOR_DEFAULT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE</signature>
                        <name>FDEOR_REFUSE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE</name>
                <newname>j/q</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE</signature>
                        <name>FDESVR_ACCEPT</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE</signature>
                        <name>FDESVR_DEFAULT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE</signature>
                        <name>FDESVR_REFUSE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/FFFP_MODE</name>
                <newname>j/w</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FFFP_MODE</signature>
                        <name>FFFP_EXACTMATCH</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FFFP_MODE</signature>
                        <name>FFFP_NEARESTPARENTMATCH</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/FOS</name>
                <newname>j/u</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_ALLNONSTORAGEITEMS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_ALLOWMULTISELECT</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_CREATEPROMPT</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_DEFAULTNOMINIMODE</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_DONTADDTORECENT</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_FILEMUSTEXIST</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_FORCEFILESYSTEM</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_FORCESHOWHIDDEN</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_HIDEMRUPLACES</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_HIDEPINNEDPLACES</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_NOCHANGEDIR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_NODEREFERENCELINKS</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_NOREADONLYRETURN</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_NOTESTFILECREATE</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_NOVALIDATE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_OVERWRITEPROMPT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_PATHMUSTEXIST</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_PICKFOLDERS</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_SHAREAWARE</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS</signature>
                        <name>FOS_STRICTFILETYPES</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</name>
                <newname>j/y</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</signature>
                        <name>KF_CATEGORY_COMMON</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</signature>
                        <name>KF_CATEGORY_FIXED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</signature>
                        <name>KF_CATEGORY_PERUSER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</signature>
                        <name>KF_CATEGORY_VIRTUAL</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/KF_DEFINITION_FLAGS</name>
                <newname>j/z</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_DEFINITION_FLAGS</signature>
                        <name>KFDF_LOCAL_REDIRECT_ONLY</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_DEFINITION_FLAGS</signature>
                        <name>KFDF_PERSONALIZE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_DEFINITION_FLAGS</signature>
                        <name>KFDF_ROAMABLE</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/KNOWNFOLDER_DEFINITION</name>
                <newname>j/x</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_CATEGORY</signature>
                        <name>category</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>dwAttributes</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>fidParent</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>ftidType</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/KF_DEFINITION_FLAGS</signature>
                        <name>kfdFlags</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszCreator</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszDescription</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszIcon</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszLocalizedName</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszName</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszParsingName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszRelativePath</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszSecurity</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszToolTip</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/MARGINS</name>
                <newname>j/al</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cxLeftWidth</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cxRightWidth</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cyBottomHeight</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cyTopHeight</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/OpenFileName</name>
                <newname>j/n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>native int</signature>
                        <name>custData</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>customFilter</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>defExt</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>file</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>fileExtension</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>fileOffset</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileTitle</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>filterIndex</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>flags</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hook</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>initialDir</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>instance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxCustFilter</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxFile</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxFileTitle</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>owner</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>structSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>templateName</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/PBST</name>
                <newname>j/l</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/PBST</signature>
                        <name>PBST_ERROR</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/PBST</signature>
                        <name>PBST_NORMAL</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/PBST</signature>
                        <name>PBST_PAUSED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/PFTASKDIALOGCALLBACK</name>
                <newname>j/k</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(native int, unsigned int32, native int, native int, native int, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>int32(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>int32(native int, unsigned int32, native int, native int, native int)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/PROPERTYKEY</name>
                <newname>j/aa</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>fmtid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>pid</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/RECT</name>
                <newname>j/ag</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>bottom</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>left</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>right</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>top</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/SIATTRIBFLAGS</name>
                <newname>j/s</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIATTRIBFLAGS</signature>
                        <name>SIATTRIBFLAGS_AND</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIATTRIBFLAGS</signature>
                        <name>SIATTRIBFLAGS_APPCOMPAT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIATTRIBFLAGS</signature>
                        <name>SIATTRIBFLAGS_OR</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/SIGDN</name>
                <newname>j/t</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_DESKTOPABSOLUTEEDITING</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_DESKTOPABSOLUTEPARSING</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_FILESYSPATH</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_NORMALDISPLAY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_PARENTRELATIVE</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_PARENTRELATIVEEDITING</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_PARENTRELATIVEFORADDRESSBAR</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_PARENTRELATIVEPARSING</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/SIGDN</signature>
                        <name>SIGDN_URL</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/SIZE</name>
                <newname>j/af</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cx</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cy</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOGCONFIG</name>
                <newname>j/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOGCONFIG_ICON_UNION</signature>
                        <name>FooterIcon</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOGCONFIG_ICON_UNION</signature>
                        <name>MainIcon</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cButtons</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cRadioButtons</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cbSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cxWidth</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>dwCommonButtons</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>dwFlags</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hInstance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwndParent</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>lpCallbackData</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>nDefaultButton</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>nDefaultRadioButton</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pButtons</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pRadioButtons</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/PFTASKDIALOGCALLBACK</signature>
                        <name>pfCallback</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszCollapsedControlText</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszContent</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszExpandedControlText</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszExpandedInformation</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszFooter</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszMainInstruction</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszVerificationText</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszWindowTitle</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOGCONFIG_ICON_UNION</name>
                <newname>j/b</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>hMainIcon</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pszIcon</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>spacer</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_BUTTON</name>
                <newname>j/c</newname>
                <methodlist>
                    <method>
                        <signature>void(int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>nButtonID</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pszButtonText</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</name>
                <newname>j/d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_CANCEL_BUTTON</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_CLOSE_BUTTON</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_NO_BUTTON</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_OK_BUTTON</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_RETRY_BUTTON</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_FLAGS</signature>
                        <name>TDCBF_YES_BUTTON</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</name>
                <newname>j/e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDABORT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDCANCEL</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDCLOSE</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDIGNORE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDNO</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDOK</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDRETRY</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_COMMON_BUTTON_RETURN_ID</signature>
                        <name>IDYES</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ELEMENTS</name>
                <newname>j/f</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_CONTENT</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_EXPANDED_INFORMATION</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_FOOTER</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ELEMENTS</signature>
                        <name>TDE_MAIN_INSTRUCTION</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</name>
                <newname>j/h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>NONE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_ALLOW_DIALOG_CANCELLATION</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_CALLBACK_TIMER</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_ENABLE_HYPERLINKS</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_EXPANDED_BY_DEFAULT</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_EXPAND_FOOTER_AREA</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_NO_DEFAULT_RADIO_BUTTON</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_POSITION_RELATIVE_TO_WINDOW</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_RTL_LAYOUT</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_SHOW_MARQUEE_PROGRESS_BAR</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_SHOW_PROGRESS_BAR</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_COMMAND_LINKS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_COMMAND_LINKS_NO_ICON</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_HICON_FOOTER</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_USE_HICON_MAIN</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_FLAGS</signature>
                        <name>TDF_VERIFICATION_FLAG_CHECKED</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ICON_ELEMENT</name>
                <newname>j/g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ICON_ELEMENT</signature>
                        <name>TDIE_ICON_FOOTER</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_ICON_ELEMENT</signature>
                        <name>TDIE_ICON_MAIN</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</name>
                <newname>j/i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_BUTTON</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_RADIO_BUTTON</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_CLICK_VERIFICATION</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_ENABLE_BUTTON</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_ENABLE_RADIO_BUTTON</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_NAVIGATE_PAGE</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_BUTTON_ELEVATION_REQUIRED_STATE</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_ELEMENT_TEXT</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_MARQUEE_PROGRESS_BAR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_MARQUEE</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_POS</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_RANGE</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_SET_PROGRESS_BAR_STATE</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_UPDATE_ELEMENT_TEXT</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_MESSAGES</signature>
                        <name>TDM_UPDATE_ICON</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</name>
                <newname>j/j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_BUTTON_CLICKED</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_CREATED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_DESTROYED</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_DIALOG_CONSTRUCTED</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_EXPANDO_BUTTON_CLICKED</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_HELP</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_HYPERLINK_CLICKED</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_NAVIGATED</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_RADIO_BUTTON_CLICKED</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_TIMER</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TASKDIALOG_NOTIFICATIONS</signature>
                        <name>TDN_VERIFICATION_CLICKED</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/TD_ICON</name>
                <newname>j/m</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TD_ICON</signature>
                        <name>TD_ERROR_ICON</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TD_ICON</signature>
                        <name>TD_INFORMATION_ICON</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TD_ICON</signature>
                        <name>TD_SHIELD_ICON</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/TD_ICON</signature>
                        <name>TD_WARNING_ICON</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.NativeMethods/UNSIGNED_RATIO</name>
                <newname>j/ai</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>uiDenominator</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>uiNumerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.Interop.Win32ErrorCode</name>
                <newname>g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>WPFFolderBrowser.Interop.Win32ErrorCode</signature>
                        <name>ERROR_CANCELLED</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.WPFFolderBrowserDialog</name>
                <newname>b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>ApplyNativeSettings</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS()</signature>
                        <name>CalculateNativeDialogOptionFlags</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CheckFileNamesAvailable</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CleanUpNativeFileDialog</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>GetCurrentOptionFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.NativeMethods/FOS(WPFFolderBrowser.Interop.NativeMethods/FOS)</signature>
                        <name>GetDerivedOptionFlags</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>GetFileNameFromShellItem</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>native int(System.Windows.Window)</signature>
                        <name>GetHandleFromWindow</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.IFileDialog()</signature>
                        <name>GetNativeFileDialog</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.IShellItem(WPFFolderBrowser.Interop.IShellItemArray, int32)</signature>
                        <name>GetShellItemAt</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeNativeFileDialog</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>bool(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.NativeMethods/FOS)</signature>
                        <name>IsOptionSet</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.ComponentModel.CancelEventArgs)</signature>
                        <name>OnFileOk</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnFileTypeChanged</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnFolderChanged</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnOpening</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(System.EventArgs)</signature>
                        <name>OnSelectionChanged</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.ObjectModel.Collection`1&lt;string&gt;)</signature>
                        <name>PopulateWithFileNames</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ProcessControls</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;()</signature>
                        <name>ShowDialog</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;bool&gt;(System.Windows.Window)</signature>
                        <name>ShowDialog</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>ThrowIfDialogShowing</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateCurrentDialogState</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AddExtension</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AddToMruList</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AllowPropertyEditing</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckFileExists</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckPathExists</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckReadOnly</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CheckValidNames</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DereferenceLinks</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileName</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_InitialDirectory</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_NativeDialogShowing</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RestoreDirectory</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowHiddenItems</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowPlacesList</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Title</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AddExtension</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AddToMruList</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AllowPropertyEditing</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckFileExists</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckPathExists</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckReadOnly</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CheckValidNames</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DereferenceLinks</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FileName</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_InitialDirectory</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RestoreDirectory</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowHiddenItems</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowPlacesList</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Title</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IllegalPropertyChangeString</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>addExtension</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>addToMruList</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>allowPropertyEditing</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>canceled</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>checkFileExists</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>checkPathExists</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>checkReadOnly</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>checkValidNames</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>dereferenceLinks</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ObjectModel.Collection`1&lt;string&gt;</signature>
                        <name>fileNames</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>initialDirectory</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.IFileDialog</signature>
                        <name>nativeDialog</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeFileOpenDialog</signature>
                        <name>openDialogCoClass</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Window</signature>
                        <name>parentWindow</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>restoreDirectory</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showHiddenItems</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>showPlacesList</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.Interop.NativeDialogShowState</signature>
                        <name>showState</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>title</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>WPFFolderBrowser.WPFFolderBrowserDialog/NativeDialogEventSink</name>
                <newname>b/a</newname>
                <methodlist>
                    <method>
                        <signature>void(WPFFolderBrowser.WPFFolderBrowserDialog)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.HRESULT(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnFileOk</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnFolderChange</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>WPFFolderBrowser.Interop.HRESULT(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem)</signature>
                        <name>OnFolderChanging</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDE_OVERWRITE_RESPONSE&amp;)</signature>
                        <name>OnOverwrite</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnSelectionChange</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog, WPFFolderBrowser.Interop.IShellItem, WPFFolderBrowser.Interop.NativeMethods/FDE_SHAREVIOLATION_RESPONSE&amp;)</signature>
                        <name>OnShareViolation</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(WPFFolderBrowser.Interop.IFileDialog)</signature>
                        <name>OnTypeChange</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>get_Cookie</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>set_Cookie</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>cookie</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>firstFolderChanged</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>WPFFolderBrowser.WPFFolderBrowserDialog</signature>
                        <name>parent</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>XamlGeneratedNamespace.GeneratedInternalTypeHelper</name>
                <newname>a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.EventInfo, object, System.Delegate)</signature>
                        <name>AddEventHandler</name>
                    </method>
                    <method>
                        <signature>System.Delegate(System.Type, object, string)</signature>
                        <name>CreateDelegate</name>
                    </method>
                    <method>
                        <signature>object(System.Type, System.Globalization.CultureInfo)</signature>
                        <name>CreateInstance</name>
                    </method>
                    <method>
                        <signature>object(System.Reflection.PropertyInfo, object, System.Globalization.CultureInfo)</signature>
                        <name>GetPropertyValue</name>
                    </method>
                    <method>
                        <signature>void(System.Reflection.PropertyInfo, object, object, System.Globalization.CultureInfo)</signature>
                        <name>SetPropertyValue</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>490</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>4390</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>2895</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>115</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>2</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>456</statistic>
            <statistic>93.06 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>3454</statistic>
            <statistic>78.68 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>2697</statistic>
            <statistic>93.16 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>11</statistic>
            <statistic>9.57 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>2</statistic>
            <statistic>100.00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>232</statistic>
            <statistic>5.28 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ax'</description>
            <statistic>149</statistic>
            <statistic>3.39 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>140</statistic>
            <statistic>3.19 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'ba'</description>
            <statistic>134</statistic>
            <statistic>3.05 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>123</statistic>
            <statistic>2.80 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>81</statistic>
            <statistic>1.85 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'k'</description>
            <statistic>72</statistic>
            <statistic>1.64 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>